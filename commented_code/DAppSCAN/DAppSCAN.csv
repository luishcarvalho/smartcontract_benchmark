Category,Function,Line Number,File Path,Solidity File Name,Line Content
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/Ackee_Blockchain-GoodGhosting/goodghosting-protocol-v1-dfda8d5d5990abb7f352bc9358ac950dce1bd677/goodghosting-protocol-v1-dfda8d5d5990abb7f352bc9358ac950dce1bd677/contracts/GoodGhosting.sol,GoodGhosting.sol,pragma solidity 0.6.11;
SWC-101-Integer Overflow and Underflow,newVersion,L152,DAppSCAN-source/contracts/Ackee_Blockchain-Layer_Zero/LayerZero-a5b266aa54714035314cbe5e451b2ec0db81b552/contracts/Endpoint.sol,Endpoint.sol,"require(latestVersion < 65535, ""LayerZero: can not add new messaging library"");"
SWC-102-Outdated Compiler Version,N/A,L4,DAppSCAN-source/contracts/Ackee_Blockchain-Layer_Zero/LayerZero-a5b266aa54714035314cbe5e451b2ec0db81b552/contracts/Relayer.sol,Relayer.sol,pragma solidity ^0.7.6;
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/Ackee_Blockchain-Layer_Zero/LayerZero-a5b266aa54714035314cbe5e451b2ec0db81b552/contracts/Relayer.sol,Relayer.sol,pragma solidity ^0.7.6;
SWC-101-Integer Overflow and Underflow,N/A,L21-23,DAppSCAN-source/contracts/Ackee_Blockchain-Layer_Zero/LayerZero-a5b266aa54714035314cbe5e451b2ec0db81b552/contracts/Relayer.sol,Relayer.sol,using SafeMath for uint;
SWC-135-Code With No Effects,N/A,L45-47,DAppSCAN-source/contracts/Ackee_Blockchain-Zunami_protocol/ZunamiProtocol-37dccabf5aa3697dce5eaf6457debb3ac7404fdd/contracts/Zunami.sol,Zunami.sol,address public admin;
SWC-100-Function Default Visibility,calcManagementFee,L74,DAppSCAN-source/contracts/Ackee_Blockchain-Zunami_protocol/ZunamiProtocol-37dccabf5aa3697dce5eaf6457debb3ac7404fdd/contracts/Zunami.sol,Zunami.sol,function calcManagementFee(uint256 amount) public view virtual
SWC-129-Typographical Error,ManagerUpdated,L17,DAppSCAN-source/contracts/Blockchain Labs NZ-Beam/beam-11b086ca757f1612cd67c1bf6d7ab470591676b1/contracts/BeamToken.sol,BeamToken.sol,event ManagerUpdated(address newManager);
SWC-129-Typographical Error,setManager,L72,DAppSCAN-source/contracts/Blockchain Labs NZ-Beam/beam-11b086ca757f1612cd67c1bf6d7ab470591676b1/contracts/BeamToken.sol,BeamToken.sol,emit ManagerUpdated(manager);
SWC-100-Function Default Visibility,isBreakingCap,L38,DAppSCAN-source/contracts/Blockchain Labs NZ-BitHero/BitHeroToken-master/AllocatedCrowdsaleMixin.sol,AllocatedCrowdsaleMixin.sol,"function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {"
SWC-100-Function Default Visibility,setRequireCustomerId,L149,DAppSCAN-source/contracts/Blockchain Labs NZ-BitHero/BitHeroToken-master/Crowdsale.sol,Crowdsale.sol,function setRequireCustomerId(bool value) onlyOwner {
SWC-100-Function Default Visibility,setRequireSignedAddress,L161,DAppSCAN-source/contracts/Blockchain Labs NZ-BitHero/BitHeroToken-master/Crowdsale.sol,Crowdsale.sol,"function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {"
SWC-103-Floating Pragma,N/A,L1 - L467,DAppSCAN-source/contracts/Blockchain Labs NZ-BitHero/BitHeroToken-master/CrowdsaleBase.sol,CrowdsaleBase.sol,// SWC-103-Floating Pragma: L1 - L467
SWC-129-Typographical Error,setEarlyParicipantWhitelist,L414 - L417,DAppSCAN-source/contracts/Blockchain Labs NZ-BitHero/BitHeroToken-master/CrowdsaleBase.sol,CrowdsaleBase.sol,"function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {"
SWC-102-Outdated Compiler Version,N/A,L8,DAppSCAN-source/contracts/Blockchain Labs NZ-BitHero/BitHeroToken-master/DefaultFinalizeAgent.sol,DefaultFinalizeAgent.sol,pragma solidity ^0.4.6;
SWC-102-Outdated Compiler Version,N/A,L1,DAppSCAN-source/contracts/Blockchain Labs NZ-Ecomi/tge-contract-audit-17b96ff760471c174d8edbeacc6b8cd2cf2c6b82/contracts/OMICrowdsale.sol,OMICrowdsale.sol,pragma solidity ^0.4.18;
SWC-131-Presence of unused variables,N/A,L72 L75,DAppSCAN-source/contracts/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/Gifto_TGE.sol,Gifto_TGE.sol,uint public _minimumBuy = 3 * 10 ** 17;
SWC-131-Presence of unused variables,validValue,L116 - L121,DAppSCAN-source/contracts/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/Gifto_TGE.sol,Gifto_TGE.sol,modifier validValue(){
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Blockchain Labs NZ-Leverj/staking-e8716e4a11881fad181b5330206d8b0c27a58510/contracts/Fee.sol,Fee.sol,pragma solidity ^0.4.18;
SWC-100-Function Default Visibility,N/A,L2-24,DAppSCAN-source/contracts/Blockchain Labs NZ-SynchroLife/synchrocoin-contracts-master/contracts/Migrations.sol,Migrations.sol,pragma solidity ^0.4.4;
SWC-100-Function Default Visibility,proxyWithdraw,L118,DAppSCAN-source/contracts/Blockchain Labs NZ-SynchroLife/synchrocoin-contracts-master/contracts/SynchroCoin.sol,SynchroCoin.sol,function proxyWithdraw(address participant) public returns (bool success){
SWC-131-Presence of unused variables,N/A,L12,DAppSCAN-source/contracts/Blockchain Labs NZ-Zipper/zipt_token-0a3c4238353122cfc76b9fb01cd60b28b8b0c9e4/contracts/ZipToken.sol,ZipToken.sol,bool public filled = false;
SWC-135-Code With No Effects,deposit,L186,DAppSCAN-source/contracts/BlockSec-blocksec_aloe_1.1_signed/aloe-blend-fd1635d8928c74ed24550d3f0d9a63f284a7f872/contracts/AloeBlend.sol,AloeBlend.sol,"(uint160 sqrtPriceX96, , , , , , ) = UNI_POOL.slot0();"
SWC-114-Transaction Order Dependence,deposit,// SWC-114-Transaction Order Dependence,DAppSCAN-source/contracts/BlockSec-blocksec_alpaca_v1.0_signed/bsc-alpaca-contract-cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol,DeltaNeutralVault.sol,N/A
SWC-114-Transaction Order Dependence,withdraw,// SWC-114-Transaction Order Dependence,DAppSCAN-source/contracts/BlockSec-blocksec_alpaca_v1.0_signed/bsc-alpaca-contract-cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol,DeltaNeutralVault.sol,N/A
SWC-116-Block values as a proxy for time,getTokenPrice,// SWC-116-Block values as a proxy for time,DAppSCAN-source/contracts/BlockSec-blocksec_alpaca_v1.0_signed/bsc-alpaca-contract-cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/PriceHelper.sol,PriceHelper.sol,N/A
SWC-135-Code With No Effects,N/A,L64,DAppSCAN-source/contracts/BlockSec-blocksec_coordinape_v1.1_signed/coordinape-protocol-7a8e6173305696c72195fa4242126d284611270c/contracts/ApeProtocol/wrapper/beacon/ApeVault.sol,ApeVault.sol,mapping(address => bool) public hasAccess;
SWC-135-Code With No Effects,N/A,L71,DAppSCAN-source/contracts/BlockSec-blocksec_coordinape_v1.1_signed/coordinape-protocol-7a8e6173305696c72195fa4242126d284611270c/contracts/ApeProtocol/wrapper/beacon/ApeVault.sol,ApeVault.sol,ApeAllowanceModule public allowanceModule;
SWC-105-Unprotected Ether Withdrawal,apeWithdrawSimpleToken,L133-135,DAppSCAN-source/contracts/BlockSec-blocksec_coordinape_v1.1_signed/coordinape-protocol-7a8e6173305696c72195fa4242126d284611270c/contracts/ApeProtocol/wrapper/beacon/ApeVault.sol,ApeVault.sol,function apeWithdrawSimpleToken(uint256 _amount) public {
SWC-107-Reentrancy,deposit,L53-61,DAppSCAN-source/contracts/BlockSec-blocksec_impossible_finance_swap_v1.2/impossible-swap-core-29aaef89f996acdbee92b67c4d95fb608dc8b876/contracts/ImpossibleWrappedToken.sol,ImpossibleWrappedToken.sol,// wad = amount of wrapped tokens
SWC-107-Reentrancy,deposit,L65-73,DAppSCAN-source/contracts/BlockSec-blocksec_impossible_finance_swap_v1.2/impossible-swap-core-29aaef89f996acdbee92b67c4d95fb608dc8b876/contracts/ImpossibleWrappedToken.sol,ImpossibleWrappedToken.sol,// wad = amount of wrapped tokens
SWC-114-Transaction Order Dependence,deposit,L65-73,DAppSCAN-source/contracts/BlockSec-blocksec_impossible_finance_swap_v1.2/impossible-swap-core-29aaef89f996acdbee92b67c4d95fb608dc8b876/contracts/ImpossibleWrappedToken.sol,ImpossibleWrappedToken.sol,// wad = amount of wrapped tokens
SWC-112-Delegatecall to Untrusted Callee,ownerOf,L491-493,DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/ve.sol,ve.sol,function ownerOf(uint _tokenId) public view returns (address) {
SWC-104-Unchecked Call Return Value,safeTransferFrom,L675-697,DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/ve.sol,ve.sol,function safeTransferFrom(
SWC-107-Reentrancy,withdraw,L1097-1104,DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/ve.sol,ve.sol,"assert(IERC20(token).transfer(msg.sender, value));"
SWC-113-DoS with Failed Call,getBlockByTime,L119-134,DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol,VEReward.sol,function getBlockByTime(uint _time) public view returns (uint) {
SWC-128-DoS With Block Gas Limit,claimRewardMany,L269-275,DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol,VEReward.sol,"function claimRewardMany(uint[] calldata tokenIds, Interval[][] calldata intervals) public returns (uint[] memory rewards) {"
SWC-105-Unprotected Ether Withdrawal,distribute,L35,DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/pools/liquidation/Liquidator.sol,Liquidator.sol,"TransferHelper.safeTransfer(collateral, pair, IERC20Minimal(collateral).balanceOf(address(this)));"
SWC-119-Shadowing State Variables,getStatus,L72-89,DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol,Vault.sol,function getStatus()
SWC-101-Integer Overflow and Underflow,isValidCDP,L156-166,DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/VaultManager.sol,VaultManager.sol,"function isValidCDP(address collateral_, address debt_, uint256 cAmount_, uint256 dAmount_) public view override returns (bool) {"
SWC-108-State Variable Default Visibility,N/A,L156,DAppSCAN-source/contracts/Byterocket-AsyncArt v2[05.26.2020]/async-contracts-1bbca6bfe1a171f1bb8369ff129d5aac234a6664/contracts/AsyncArtwork_v2.sol,AsyncArtwork_v2.sol,mapping(uint256 => ControlToken) controlTokenMapping;
SWC-131-Presence of unused variables,useControlToken,L601,DAppSCAN-source/contracts/Byterocket-AsyncArt v2[05.26.2020]/async-contracts-1bbca6bfe1a171f1bb8369ff129d5aac234a6664/contracts/AsyncArtwork_v2.sol,AsyncArtwork_v2.sol,int256 previousValue = lever.currentValue;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Byterocket-Invictus Capital Fund Contract[01.27.2022]/TransparentUpgradeableProxy0x04Fd86C321E53D6D0070d30eAEFD1d93790EA3d2/@openzeppelin/contracts/proxy/Proxy.sol,Proxy.sol,pragma solidity ^0.8.0;
SWC-135-Code With No Effects,getAllPositionManagers,L87-90,DAppSCAN-source/contracts/Byterocket-Orbit DeFi[05.29.2022]/orbit-defi-541460999b7d8fa80c4a4a86383f583392436b67/contracts/PositionManagerFactory.sol,PositionManagerFactory.sol,function getAllPositionManagers() public view override returns (address[] memory) {
SWC-101-Integer Overflow and Underflow,zapIn,L53-54,DAppSCAN-source/contracts/Byterocket-Orbit DeFi[05.29.2022]/orbit-defi-541460999b7d8fa80c4a4a86383f583392436b67/contracts/actions/ZapIn.sol,ZapIn.sol,"uint256 amountInTo0 = (amountIn * 1e18) / (SwapHelper.getRatioFromRange(tickPool, tickLower, tickUpper) + 1e18);"
SWC-101-Integer Overflow and Underflow,N/A,L11-74,DAppSCAN-source/contracts/Byterocket-Orbit DeFi[05.29.2022]/orbit-defi-541460999b7d8fa80c4a4a86383f583392436b67/contracts/helpers/SwapHelper.sol,SwapHelper.sol,library SwapHelper {
SWC-101-Integer Overflow and Underflow,_calcTick,L131,DAppSCAN-source/contracts/Byterocket-Orbit DeFi[05.29.2022]/orbit-defi-541460999b7d8fa80c4a4a86383f583392436b67/contracts/modules/IdleLiquidityModule.sol,IdleLiquidityModule.sol,"return (((tick - tickDelta) / tickSpacing) * tickSpacing, ((tick + tickDelta) / tickSpacing) * tickSpacing);"
SWC-135-Code With No Effects,N/A,L27,DAppSCAN-source/contracts/Byterocket-RealityCards v1[05.19.2020]/RealityCards-Contracts-aad8ea70696d848e2fcb55b7932c7ba37b8f239e/contracts/RealityCards.sol,RealityCards.sol,uint256 private nftMintCount;
SWC-135-Code With No Effects,userRemainingDeposit,L198-204,DAppSCAN-source/contracts/Byterocket-RealityCards v1[05.19.2020]/RealityCards-Contracts-aad8ea70696d848e2fcb55b7932c7ba37b8f239e/contracts/RealityCards.sol,RealityCards.sol,function userRemainingDeposit(uint256 _tokenId) external view returns (uint256) {
SWC-135-Code With No Effects,rentalExpiryTime,L212-214,DAppSCAN-source/contracts/Byterocket-RealityCards v1[05.19.2020]/RealityCards-Contracts-aad8ea70696d848e2fcb55b7932c7ba37b8f239e/contracts/RealityCards.sol,RealityCards.sol,if (pps == 0) {
SWC-123-Requirement Violation,N/A,L467,DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,"require(now > _lockTime , ""Contract is locked until 7 days"");"
SWC-135-Code With No Effects,N/A,L702 - L703,DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,mapping (address => bool) private _isExcluded;
SWC-131-Presence of unused variables,N/A,L710,DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,bool public mintedByDxsale = true;
SWC-135-Code With No Effects,balanceOf,L794 - L795,DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,if (_isExcluded[account]) return _tOwned[account];
SWC-135-Code With No Effects,isExcludedFromReward,L828 - L831,DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,// SWC-135-Code With No Effects: L828 - L831
SWC-135-Code With No Effects,deliver,L837 - L844,DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,// SWC-135-Code With No Effects: L837 - L844
SWC-135-Code With No Effects,_transferBothExcluded,L865 - L874,DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,// SWC-135-Code With No Effects: L865 - L874
SWC-135-Code With No Effects,_getCurrentSupply,L941 - L951,DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,// SWC-135-Code With No Effects: L941 - L951
SWC-135-Code With No Effects,_takeLiquidity,L955 - L961,DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,function _takeLiquidity(uint256 tLiquidity) private {
SWC-135-Code With No Effects,_tokenTransfer,L1106 - L1124,DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,"function _tokenTransfer(address sender, address recipient, uint256 amount,bool takeFee) private {"
SWC-135-Code With No Effects,_transferToExcluded,L1137 - L1145,DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,"function _transferToExcluded(address sender, address recipient, uint256 tAmount) private {"
SWC-135-Code With No Effects,_transferFromExcluded,L1148 - L1156,DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol,"function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {"
SWC-135-Code With No Effects,N/A,L702 - L703,DAppSCAN-source/contracts/Callisto_Network-Big Doge Coin Security Audit/code/code.sol,code.sol,mapping (address => bool) private _isExcluded;
SWC-135-Code With No Effects,N/A,L710,DAppSCAN-source/contracts/Callisto_Network-Big Doge Coin Security Audit/code/code.sol,code.sol,bool public mintedByDxsale = true;
SWC-105-Unprotected Ether Withdrawal,transfer,L166 - L172,DAppSCAN-source/contracts/Callisto_Network-Fantom Token (FTM) Security Audit Report/code/Etherscan-0x4e15361fd6b4bb609fa63c81a2be19d873717870.sol,Etherscan-0x4e15361fd6b4bb609fa63c81a2be19d873717870.sol,"function transfer(address _to, uint _amount) public returns (bool) {"
SWC-135-Code With No Effects,,L73 - L75,DAppSCAN-source/contracts/Callisto_Network-IDEX Security Audit/idex-4a05eb28e570e9820066474ff2adc924ce7a27bd/MyToken.sol,MyToken.sol,function () {
SWC-135-Code With No Effects,transfer,L97,DAppSCAN-source/contracts/Callisto_Network-Jarvis+ Token (JAR) Security Audit/code/JarvisPlusToken_flat.sol,JarvisPlusToken_flat.sol,require(_value <= balances[msg.sender]);
SWC-135-Code With No Effects,transferFrom,L167 - L168,DAppSCAN-source/contracts/Callisto_Network-Jarvis+ Token (JAR) Security Audit/code/JarvisPlusToken_flat.sol,JarvisPlusToken_flat.sol,require(_value <= balances[_from]);
SWC-105-Unprotected Ether Withdrawal,transfer,L454- L457,DAppSCAN-source/contracts/Callisto_Network-Linear Token (LINA) Token Security Audit Report/code/BSCSCAN-2ae9952c1038dA3DafebA026B96053F24CBc03b3.sol,BSCSCAN-2ae9952c1038dA3DafebA026B96053F24CBc03b3.sol,"function transfer(address recipient, uint256 amount) public virtual override returns (bool) {"
SWC-104-Unchecked Call Return Value,transfer,L76,DAppSCAN-source/contracts/Callisto_Network-MaxiMine Token (MXM) Security Audit/code/code.sol,code.sol,// SWC-104-Unchecked Call Return Value: L76
SWC-111-Use of Deprecated Solidity Functions,assert,L23,DAppSCAN-source/contracts/Callisto_Network-McAfeeDex Security Audit/MCAFEEDEXCONTRACT-5db8389ce23ce11fb273c9573772287aa75ce43b/contract.sol,contract.sol,if (!assertion) throw;
SWC-111-Use of Deprecated Solidity Functions,create,L121,DAppSCAN-source/contracts/Callisto_Network-McAfeeDex Security Audit/MCAFEEDEXCONTRACT-5db8389ce23ce11fb273c9573772287aa75ce43b/contract.sol,contract.sol,if (msg.sender != minter) throw;
SWC-135-Code With No Effects,N/A,L157,DAppSCAN-source/contracts/Callisto_Network-McAfeeDex Security Audit/MCAFEEDEXCONTRACT-5db8389ce23ce11fb273c9573772287aa75ce43b/contract.sol,contract.sol,address public accountLevelsAddr; //the address of the AccountLevels contract
SWC-135-Code With No Effects,N/A,L161,DAppSCAN-source/contracts/Callisto_Network-McAfeeDex Security Audit/MCAFEEDEXCONTRACT-5db8389ce23ce11fb273c9573772287aa75ce43b/contract.sol,contract.sol,uint public feeRebate; //percentage times (1 ether)
SWC-107-Reentrancy,withdraw,L224,DAppSCAN-source/contracts/Callisto_Network-McAfeeDex Security Audit/MCAFEEDEXCONTRACT-5db8389ce23ce11fb273c9573772287aa75ce43b/contract.sol,contract.sol,"tokens[0][msg.sender] = safeSub(tokens[0][msg.sender], amount);"
SWC-105-Unprotected Ether Withdrawal,reclaimBNB,L94-197,DAppSCAN-source/contracts/Callisto_Network-Monsta Infinite Inception Security Audit Report/moni-smart-contracts-3303268d5456d51a5f7412be8cfca7e3caf73ed5/contracts/presale/MonstaPresale.sol,MonstaPresale.sol,function reclaimBNB() external onlyOwner {
SWC-105-Unprotected Ether Withdrawal,reclaimBNB,L94 - L96,DAppSCAN-source/contracts/Callisto_Network-Monsta Infinite Token Security Audit/moni-smart-contracts-3303268d5456d51a5f7412be8cfca7e3caf73ed5/contracts/presale/MonstaPresale.sol,MonstaPresale.sol,function reclaimBNB() external onlyOwner {
SWC-135-Code With No Effects,decimals,L332 - L334,DAppSCAN-source/contracts/Callisto_Network-Shield Protocol Token (SHIELD) Security Audit/smart-contract-f5c1a5d77c158f84889b65a4070f7b80c3cf6898/BinanceSmartChain_SHIELD.sol,BinanceSmartChain_SHIELD.sol,function decimals() external view override returns (uint256) {
SWC-135-Code With No Effects,symbol,L339 - L341,DAppSCAN-source/contracts/Callisto_Network-Shield Protocol Token (SHIELD) Security Audit/smart-contract-f5c1a5d77c158f84889b65a4070f7b80c3cf6898/BinanceSmartChain_SHIELD.sol,BinanceSmartChain_SHIELD.sol,function symbol() external view override returns (string memory) {
SWC-135-Code With No Effects,name,L346 - L348,DAppSCAN-source/contracts/Callisto_Network-Shield Protocol Token (SHIELD) Security Audit/smart-contract-f5c1a5d77c158f84889b65a4070f7b80c3cf6898/BinanceSmartChain_SHIELD.sol,BinanceSmartChain_SHIELD.sol,function name() external view override returns (string memory) {
SWC-113-DoS with Failed Call,includeInReward,L809 - L817,DAppSCAN-source/contracts/Callisto_Network-Wildfire Token Security Audit/Wildfirebeb20-main/wildfire.sol,wildfire.sol,for (uint256 i = 0; i < _excluded.length; i++) {
SWC-113-DoS with Failed Call,_getCurrentSupply,L898 - L902,DAppSCAN-source/contracts/Callisto_Network-Wildfire Token Security Audit/Wildfirebeb20-main/wildfire.sol,wildfire.sol,for (uint256 i = 0; i < _excluded.length; i++) {
SWC-105-Unprotected Ether Withdrawal,withdrawTokens,L279 - L282,DAppSCAN-source/contracts/Callisto_Network-Worthpad Security Audit Report/worth-71760542a40e580ad6c0c57c5ec5798072c0a3b0/WorthTokenSale.sol,WorthTokenSale.sol,"function withdrawTokens(address beneficiary, address _tokenAddr) external nonZeroAddress(beneficiary) onlyOwner _contractUp() _saleEnded() {"
SWC-135-Code With No Effects,lockTokens,L60,DAppSCAN-source/contracts/Callisto_Network-Worthpad Security Audit Report/worth-71760542a40e580ad6c0c57c5ec5798072c0a3b0/WorthTokenTimeLock.sol,WorthTokenTimeLock.sol,allDepositIds.push(_id);
SWC-114-Transaction Order Dependence,harvest,L104-134,DAppSCAN-source/contracts/Chainsecurity-Angle Protocol/angle-core-46e6d32837cbe97a4af0adb693e63afa0d01fc3e/contracts/genericLender/GenericAave.sol,GenericAave.sol,function harvest() external {
SWC-104-Unchecked Call Return Value,liquidate,L692,DAppSCAN-source/contracts/Chainsecurity-Angle Protocol  Borrowing Module/angle-borrow-0363b6a137a44e22ee06b3187ba74f7798c1af08/contracts/vaultManager/VaultManager.sol,VaultManager.sol,_repayDebt(
SWC-107-Reentrancy,liquidateBorrowAllowed,L465-501,DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/Comptroller.sol,Comptroller.sol,function liquidateBorrowAllowed(
SWC-107-Reentrancy,_setComptroller,L930-947,DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol,CToken.sol,function _setComptroller(ComptrollerInterface newComptroller) override public returns (uint) {
SWC-135-Code With No Effects,N/A,L137,DAppSCAN-source/contracts/Chainsecurity-MakerDAO  G-UNI LP Oracle/univ3-lp-oracle-0d25676e0956fc3a5359431c708106547c4fef26/src/GUniLPOracle.sol,GUniLPOracle.sol,uint256 constant WAD = 10 ** 18;
SWC-101-Integer Overflow and Underflow,convertTo18,L119,DAppSCAN-source/contracts/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/multiply/MultiplyProxyActions.sol,MultiplyProxyActions.sol,wad = amt.mul(10**(18 - IJoin(gemJoin).dec()));
SWC-104-Unchecked Call Return Value,increaseMultipleDepositCollateral,L172,DAppSCAN-source/contracts/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/multiply/MultiplyProxyActions.sol,MultiplyProxyActions.sol,IGem gem = IJoin(cdpData.gemJoin).gem();
SWC-107-Reentrancy,_relayTokens,L99-117,DAppSCAN-source/contracts/Chainsecurity-POA Network  OmniBridge/omnibridge-9e602a3719e32feabc18fc387b9474acfa28cfe2/contracts/upgradeable_contracts/components/common/TokensRelayer.sol,TokensRelayer.sol,function _relayTokens(
SWC-135-Code With No Effects,N/A,L57,DAppSCAN-source/contracts/Chainsecurity-Primitive Finance  Core engine smart contracts/rmm-core-c44f8ca1ee43772ec4ba56e031bdb6fb8aac0ca3/contracts/PrimitiveEngine.sol,PrimitiveEngine.sol,address public immutable override factory;
SWC-135-Code With No Effects,getRiskyGivenStable,L70-86,DAppSCAN-source/contracts/Chainsecurity-Primitive Finance  Core engine smart contracts/rmm-core-c44f8ca1ee43772ec4ba56e031bdb6fb8aac0ca3/contracts/libraries/ReplicationMath.sol,ReplicationMath.sol,function getRiskyGivenStable(
SWC-107-Reentrancy,N/A,L11,DAppSCAN-source/contracts/Chainsulting-1inch/liquidity-protocol-master/contracts/ReferralFeeReceiver.sol,ReferralFeeReceiver.sol,using UniERC20 for IERC20;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Chainsulting-ApeCoin/0x4d224452801ACEd8B2F0aebE155379bb5D594381/SimpeToken.sol,SimpeToken.sol,pragma solidity ^0.8.10;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Chainsulting-Curate-project/Curate/Curate.sol,Curate.sol,pragma solidity ^0.8.9;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Chainsulting-Curate-project2/Curate/Curate.sol,Curate.sol,pragma solidity ^0.8.9;
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Chainsulting-DIA-project1/code/yield.sol,yield.sol,pragma solidity ^0.5.12;
SWC-108-State Variable Default Visibility,N/A,L532 - L541,DAppSCAN-source/contracts/Chainsulting-DIA-project1/code/yield.sol,yield.sol,// SWC-108-State Variable Default Visibility: L532 - L541
SWC-128-DoS With Block Gas Limit,triggerWithdrawAll,L640 - L644,DAppSCAN-source/contracts/Chainsulting-DIA-project1/code/yield.sol,yield.sol,// SWC-128-DoS With Block Gas Limit: L640 - L644
SWC-110-Assert Violation,withdraw,L40,DAppSCAN-source/contracts/Chainsulting-DSLA Protocol-project1/Stacktical/DSLA Token Smart Contract/contracts/Crowdsale/Escrow.sol,Escrow.sol,assert(address(this).balance >= payment);
SWC-116-Block values as a proxy for time,constructor,L24,DAppSCAN-source/contracts/Chainsulting-DSLA Protocol-project1/Stacktical/DSLA Token Smart Contract/contracts/DSLA/LockupToken.sol,LockupToken.sol,require(_releaseDate > block.timestamp);
SWC-103-Floating Pragma,N/A,L6,DAppSCAN-source/contracts/Chainsulting-FIN/FinToken/FinToken.sol,FinToken.sol,pragma solidity ^0.4.21;
SWC-101-Integer Overflow and Underflow,N/A,L225,DAppSCAN-source/contracts/Chainsulting-FIN/FinToken/FinToken.sol,FinToken.sol,uint256 public constant INITIAL_SUPPLY = 2623304 * (10 ** uint256(decimals));
SWC-107-Reentrancy,_depositAngel,L290-291,DAppSCAN-source/contracts/Chainsulting-Furucombo-project2/trevi-b3f7fd332873321152db48c9d43fc23a60a29f1a/contracts/FountainBase.sol,FountainBase.sol,"angel.deposit(info.pid, amount, user);"
SWC-107-Reentrancy,_withdrawAngel,L295-L308,DAppSCAN-source/contracts/Chainsulting-Furucombo-project2/trevi-b3f7fd332873321152db48c9d43fc23a60a29f1a/contracts/FountainBase.sol,FountainBase.sol,function _withdrawAngel(
SWC-119-Shadowing State Variables,N/A,L13,DAppSCAN-source/contracts/Chainsulting-Furucombo-project2/trevi-b3f7fd332873321152db48c9d43fc23a60a29f1a/contracts/HarvestPermit.sol,HarvestPermit.sol,mapping(address => Counters.Counter) private _nonces;
SWC-119-Shadowing State Variables,N/A,L13,DAppSCAN-source/contracts/Chainsulting-Furucombo-project2/trevi-b3f7fd332873321152db48c9d43fc23a60a29f1a/contracts/JoinPermit.sol,JoinPermit.sol,mapping(address => Counters.Counter) private _nonces;
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/Chainsulting-Global Rockstar/openzeppelin-contracts-upgradeable-master/contracts/access/AccessControlCrossChainUpgradeable.sol,AccessControlCrossChainUpgradeable.sol,pragma solidity ^0.8.4;
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Chainsulting-GSPI Club-project1/openzeppelin-contracts-2.0.1/contracts/access/roles/CapperRole.sol,CapperRole.sol,pragma solidity ^0.4.24;
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/Chainsulting-GSPI Club-project2/openzeppelin-contracts-3.2.0/contracts/access/AccessControl.sol,AccessControl.sol,pragma solidity ^0.6.0;
SWC-102-Outdated Compiler Version,N/A,L4,DAppSCAN-source/contracts/Chainsulting-GSPI Club-project2/openzeppelin-contracts-3.2.0/contracts/access/AccessControl.sol,AccessControl.sol,pragma solidity ^0.6.0;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Chainsulting-GSPI Club-project3/code/spi_staking.sol,spi_staking.sol,pragma solidity ^0.8.3;
SWC-135-Code With No Effects,StakeClaimed,L36 ,DAppSCAN-source/contracts/Chainsulting-GSPI Club-project3/code/spi_staking.sol,spi_staking.sol,"event StakeClaimed(address user, uint256 amount);"
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/access/AccessControl.sol,AccessControl.sol,pragma solidity ^0.6.0;
SWC-103-Floating Pragma,N/A,L7,DAppSCAN-source/contracts/Chainsulting-NOM/FinToken/FinToken.sol,FinToken.sol,pragma solidity ^0.4.21;
SWC-101-Integer Overflow and Underflow,N/A,L226,DAppSCAN-source/contracts/Chainsulting-NOM/FinToken/FinToken.sol,FinToken.sol,uint256 public constant INITIAL_SUPPLY = 2623304 * (10 ** uint256(decimals));
SWC-103-Floating Pragma,N/A,// SWC-103-Floating Pragma,DAppSCAN-source/contracts/Chainsulting-Oiler Network-project2/oiler-staking-contracts-master/contracts/Staking.sol,Staking.sol,N/A
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Chainsulting-Shopping-project1/openzeppelin-contracts-2.0.1/contracts/access/roles/CapperRole.sol,CapperRole.sol,pragma solidity ^0.4.24;
SWC-102-Outdated Compiler Version,N/A,L4,DAppSCAN-source/contracts/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/access/AccessControl.sol,AccessControl.sol,pragma solidity ^0.6.0;
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/access/AccessControl.sol,AccessControl.sol,pragma solidity ^0.6.0;
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Chainsulting-SPICE/synthetix-develop/contracts/AddressResolver.sol,AddressResolver.sol,pragma solidity ^0.5.16;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Chainsulting-SWAPP Protocol-project1/openzeppelin-contracts-3.3.0/contracts/access/AccessControl.sol,AccessControl.sol,pragma solidity >=0.6.0 <0.8.0;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Chainsulting-SWAPP Protocol-project2/openzeppelin-contracts-4.2.0/contracts/access/AccessControl.sol,AccessControl.sol,pragma solidity ^0.8.0;
SWC-101-Integer Overflow and Underflow,N/A,L128,DAppSCAN-source/contracts/Chainsulting-Touch Social/Touch/Touch.sol,Touch.sol,uint256 public maximumTokenIssue = 1000000000 * 10**18;
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/access/Roles.sol,Roles.sol,pragma solidity ^0.5.0;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Coinbae-Barnbridge_Bond/YieldFarmBond0x3FdFb07472ea4771E1aD66FD3b87b265Cd4ec112/contracts/YieldFarm.sol,YieldFarm.sol,pragma solidity ^0.6.0;
SWC-128-DoS With Block Gas Limit,massHarvest,L76,DAppSCAN-source/contracts/Coinbae-Barnbridge_Bond/YieldFarmBond0x3FdFb07472ea4771E1aD66FD3b87b265Cd4ec112/contracts/YieldFarm.sol,YieldFarm.sol,totalDistributedValue += _harvest(i);
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Coinbae-Barnbridge_Staking_Pool/Staking0xb0Fa2BeEe3Cf36a7Ac7E99B885b48538Ab364853/contracts/Staking.sol,Staking.sol,pragma solidity ^0.6.0;
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Coinbae-Barnbridge_Vault/CommunityVault0xA3C299eEE1998F45c20010276684921EBE6423D9/contracts/CommunityVault.sol,CommunityVault.sol,pragma solidity ^0.6.0;
SWC-107-Reentrancy,setAllowance,L19,DAppSCAN-source/contracts/Coinbae-Barnbridge_Vault/CommunityVault0xA3C299eEE1998F45c20010276684921EBE6423D9/contracts/CommunityVault.sol,CommunityVault.sol,"_bond.approve(spender, amount);"
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Coinbae-Barnbridge_YieldFarming/YieldFarm0xB3F7abF8FA1Df0fF61C5AC38d35e20490419f4bb/contracts/YieldFarm.sol,YieldFarm.sol,pragma solidity ^0.6.0;
SWC-128-DoS With Block Gas Limit,massHarvest,L73 - L77,DAppSCAN-source/contracts/Coinbae-Barnbridge_YieldFarming/YieldFarm0xB3F7abF8FA1Df0fF61C5AC38d35e20490419f4bb/contracts/YieldFarm.sol,YieldFarm.sol,for (uint128 i = lastEpochIdHarvested[msg.sender] + 1; i <= epochId; i++) {
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Coinbae-Barnbridge_YieldFarmLP/YieldFarm0xB3F7abF8FA1Df0fF61C5AC38d35e20490419f4bb/contracts/YieldFarm.sol,YieldFarm.sol,pragma solidity ^0.6.0;
SWC-128-DoS With Block Gas Limit,massHarvest,L73 - L77,DAppSCAN-source/contracts/Coinbae-Barnbridge_YieldFarmLP/YieldFarm0xB3F7abF8FA1Df0fF61C5AC38d35e20490419f4bb/contracts/YieldFarm.sol,YieldFarm.sol,for (uint128 i = lastEpochIdHarvested[msg.sender] + 1; i <= epochId; i++) {
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Coinbae-Barnbridge_YieldFarmLP/YieldFarm0xB3F7abF8FA1Df0fF61C5AC38d35e20490419f4bb/contracts/YieldFarmLP.sol,YieldFarmLP.sol,pragma solidity ^0.6.0;
SWC-128-DoS With Block Gas Limit,massHarvest,L62 - L66,DAppSCAN-source/contracts/Coinbae-Barnbridge_YieldFarmLP/YieldFarm0xB3F7abF8FA1Df0fF61C5AC38d35e20490419f4bb/contracts/YieldFarmLP.sol,YieldFarmLP.sol,for (uint128 i = lastEpochIdHarvested[msg.sender] + 1; i <= epochId; i++) {
SWC-100-Function Default Visibility,setWallets,L70,DAppSCAN-source/contracts/Coinbae-Deus_Finance_DEAStaking/0x1D17d697cAAffE53bf3bFdE761c90D61F6ebdc41/DEAsingleStaking.sol,DEAsingleStaking.sol,"function setWallets(address _daoWallet, address _earlyFoundersWallet) public onlyOwner {"
SWC-100-Function Default Visibility,calculateSealed,L21,DAppSCAN-source/contracts/Coinbae-Deus_Finance_Vault/code/Vault.sol,Vault.sol,"function calculateSealed(address from, uint256 amount) public view returns (uint256){"
SWC-100-Function Default Visibility,calculateWithdrawAmount,L25,DAppSCAN-source/contracts/Coinbae-Deus_Finance_Vault/code/Vault.sol,Vault.sol,"function calculateWithdrawAmount(address to, uint256 amount) public view returns (uint256){"
SWC-100-Function Default Visibility,setTimeController,L79,DAppSCAN-source/contracts/Coinbae-Deus_Finance_Vault/code/Vault.sol,Vault.sol,function setTimeController(address _timeController) public onlyOwner {
SWC-100-Function Default Visibility,setBlocks,L84,DAppSCAN-source/contracts/Coinbae-Deus_Finance_Vault/code/Vault.sol,Vault.sol,"function setBlocks(uint256 _startBlock, uint256 _endLockBlock) public onlyOwner {"
SWC-100-Function Default Visibility,lockFor,L96,DAppSCAN-source/contracts/Coinbae-Deus_Finance_Vault/code/Vault.sol,Vault.sol,"function lockFor(uint256 amount, address _user) public returns (uint256) {"
SWC-100-Function Default Visibility,lock,L112,DAppSCAN-source/contracts/Coinbae-Deus_Finance_Vault/code/Vault.sol,Vault.sol,function lock(uint256 amount) external returns (uint256) {
SWC-100-Function Default Visibility,withdraw,L122,DAppSCAN-source/contracts/Coinbae-Deus_Finance_Vault/code/Vault.sol,Vault.sol,function withdraw(uint256 amount) public returns (uint256) {
SWC-100-Function Default Visibility,withdrawAllLockedTokens,L140,DAppSCAN-source/contracts/Coinbae-Deus_Finance_Vault/code/Vault.sol,Vault.sol,function withdrawAllLockedTokens(address to) public onlyOwner {
SWC-100-Function Default Visibility,withdrawLockedTokens,L149,DAppSCAN-source/contracts/Coinbae-Deus_Finance_Vault/code/Vault.sol,Vault.sol,"function withdrawLockedTokens(address to, uint256 amount) public onlyOwner {"
SWC-119-Shadowing State Variables,owner,L394,DAppSCAN-source/contracts/Coinbae-Grumpee.Finance_Token/code/etherscan-0xdad57280919b81268e13591462fa80ef7d92b10c.sol,etherscan-0xdad57280919b81268e13591462fa80ef7d92b10c.sol,function owner() public view returns (address) {
SWC-119-Shadowing State Variables,allowance,L487,DAppSCAN-source/contracts/Coinbae-Grumpee.Finance_Token/code/etherscan-0xdad57280919b81268e13591462fa80ef7d92b10c.sol,etherscan-0xdad57280919b81268e13591462fa80ef7d92b10c.sol,"function allowance(address owner, address spender) public view override returns (uint256) {"
SWC-119-Shadowing State Variables,_transfer,L587,DAppSCAN-source/contracts/Coinbae-Grumpee.Finance_Token/code/etherscan-0xdad57280919b81268e13591462fa80ef7d92b10c.sol,etherscan-0xdad57280919b81268e13591462fa80ef7d92b10c.sol,"function _transfer(address sender, address recipient, uint256 amount) private {"
SWC-116-Block values as a proxy for time,stakingRateMax,L509,DAppSCAN-source/contracts/Coinbae-Hakka_Finance_wHakka/code/wHakka.sol,wHakka.sol,if(timeElapsed > 0) {
SWC-107-Reentrancy,stake,L556 - L573,DAppSCAN-source/contracts/Coinbae-Hakka_Finance_wHakka/code/wHakka.sol,wHakka.sol,// SWC-107-Reentrancy: L556 - L573
SWC-107-Reentrancy,unstake,L576 - L592,DAppSCAN-source/contracts/Coinbae-Hakka_Finance_wHakka/code/wHakka.sol,wHakka.sol,// SWC-107-Reentrancy: L576 - L592
SWC-116-Block values as a proxy for time,unstake,L580,DAppSCAN-source/contracts/Coinbae-Hakka_Finance_wHakka/code/wHakka.sol,wHakka.sol,"require(block.timestamp >= v.unlockTime, ""locked"");"
SWC-107-Reentrancy,add,L105 - L127,DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol,MasterChef.sol,function add(
SWC-107-Reentrancy,set,L131 - L143,DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol,MasterChef.sol,function set(
SWC-107-Reentrancy,deposit,L227 - L266,DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol,MasterChef.sol,// Deposit LP tokens to MasterChef for Pud allocation.
SWC-107-Reentrancy,deposit,L247 - L251,DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol,MasterChef.sol,pool.lpToken.safeTransferFrom(
SWC-107-Reentrancy,withdraw,L272 - L306,DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol,MasterChef.sol,"function withdraw(uint256 _pid, uint256 _shares) public {"
SWC-107-Reentrancy,emergencyWithdraw,L310 - L329,DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol,MasterChef.sol,function emergencyWithdraw(uint256 _pid) public {
SWC-104-Unchecked Call Return Value,safePudTransfer,L333 - L340,DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol,MasterChef.sol,"function safePudTransfer(address _to, uint256 _amount) internal {"
SWC-107-Reentrancy,balance,L378 - L381,DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol,MasterChef.sol,function balance(uint256 _pid) public view returns (uint256) {
SWC-104-Unchecked Call Return Value,setPoolStrategy,L384 - L389,DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol,MasterChef.sol,"function setPoolStrategy(uint256 _pid,address _strategy) public onlyOwner {"
SWC-119-Shadowing State Variables,N/A,L280,DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/lib/erc20.sol,erc20.sol,_name = name;
SWC-119-Shadowing State Variables,N/A,L282,DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/lib/erc20.sol,erc20.sol,_symbol = symbol;
SWC-119-Shadowing State Variables,N/A,L280,DAppSCAN-source/contracts/Coinbae-Pud.Fi Strategy_Bacdai/StrategyBasisBacDaiLp0x31dfcB1C5dF01A27F8b0b5F9cD1585FE92C7970e/contracts/lib/erc20.sol,erc20.sol,_name = name;
SWC-119-Shadowing State Variables,N/A,L282,DAppSCAN-source/contracts/Coinbae-Pud.Fi Strategy_Bacdai/StrategyBasisBacDaiLp0x31dfcB1C5dF01A27F8b0b5F9cD1585FE92C7970e/contracts/lib/erc20.sol,erc20.sol,_symbol = symbol;
SWC-104-Unchecked Call Return Value,_swapUniswap,L237 - L268,DAppSCAN-source/contracts/Coinbae-Pud.Fi Strategy_Bacdai/StrategyBasisBacDaiLp0x31dfcB1C5dF01A27F8b0b5F9cD1585FE92C7970e/contracts/strategies/strategy-base.sol,strategy-base.sol,function _swapUniswap(
SWC-104-Unchecked Call Return Value,_swapUniswapWithPath,L271 - L288,DAppSCAN-source/contracts/Coinbae-Pud.Fi Strategy_Bacdai/StrategyBasisBacDaiLp0x31dfcB1C5dF01A27F8b0b5F9cD1585FE92C7970e/contracts/strategies/strategy-base.sol,strategy-base.sol,function _swapUniswapWithPath(
SWC-104-Unchecked Call Return Value,_swapSushiswap,L291 - L322,DAppSCAN-source/contracts/Coinbae-Pud.Fi Strategy_Bacdai/StrategyBasisBacDaiLp0x31dfcB1C5dF01A27F8b0b5F9cD1585FE92C7970e/contracts/strategies/strategy-base.sol,strategy-base.sol,function _swapSushiswap(
SWC-104-Unchecked Call Return Value,_swapSushiswapWithPath,L325 - L342,DAppSCAN-source/contracts/Coinbae-Pud.Fi Strategy_Bacdai/StrategyBasisBacDaiLp0x31dfcB1C5dF01A27F8b0b5F9cD1585FE92C7970e/contracts/strategies/strategy-base.sol,strategy-base.sol,function _swapSushiswapWithPath(
SWC-104-Unchecked Call Return Value,harvest,L78 - L152,DAppSCAN-source/contracts/Coinbae-Pud.Fi Strategy_Bacdai/StrategyBasisBacDaiLp0x31dfcB1C5dF01A27F8b0b5F9cD1585FE92C7970e/contracts/strategies/strategy-basis-farm-base.sol,strategy-basis-farm-base.sol,function harvest() public override onlyBenevolent {
SWC-107-Reentrancy,transfer,L53 - L64,DAppSCAN-source/contracts/Coinbae-SpaceMonkey/SpaceMonkey0x9298f766581650e81357f5C66C91cc003f2b75Aa/root/workspace/GXC/contracts/SPMK/SpaceMonkey.sol,SpaceMonkey.sol,"function transfer(address recipient, uint256 amount, bytes calldata data) external returns (bool) {"
SWC-119-Shadowing State Variables,allowance,L67,DAppSCAN-source/contracts/Coinbae-SpaceMonkey/SpaceMonkey0x9298f766581650e81357f5C66C91cc003f2b75Aa/root/workspace/GXC/contracts/SPMK/SpaceMonkey.sol,SpaceMonkey.sol,"function allowance(address owner, address spender)"
SWC-119-Shadowing State Variables,_approve,L194,DAppSCAN-source/contracts/Coinbae-SpaceMonkey/SpaceMonkey0x9298f766581650e81357f5C66C91cc003f2b75Aa/root/workspace/GXC/contracts/SPMK/SpaceMonkey.sol,SpaceMonkey.sol,function _approve(
SWC-119-Shadowing State Variables,assert,L52 - L56,DAppSCAN-source/contracts/Coinbae-TapCoins_Token_Contract/code/Etherscan-0x9F599410D207f3D2828a8712e5e543AC2E040382.sol,Etherscan-0x9F599410D207f3D2828a8712e5e543AC2E040382.sol,function assert(bool assertion) internal {
SWC-107-Reentrancy,setUpgradeAgent,L373 - L394,DAppSCAN-source/contracts/Coinbae-TapCoins_Token_Contract/code/Etherscan-0x9F599410D207f3D2828a8712e5e543AC2E040382.sol,Etherscan-0x9F599410D207f3D2828a8712e5e543AC2E040382.sol,function setUpgradeAgent(address agent) external {
SWC-101-Integer Overflow and Underflow,fund,L129-134,DAppSCAN-source/contracts/Coinfabrik-Avalaunch Audit Allocation Staking and Cooldown feature/xava-protocol-master/contracts/AllocationStaking.sol,AllocationStaking.sol,function fund(uint256 _amount) public {
SWC-101-Integer Overflow and Underflow,totalPending,L207-214,DAppSCAN-source/contracts/Coinfabrik-Avalaunch Audit Allocation Staking and Cooldown feature/xava-protocol-master/contracts/AllocationStaking.sol,AllocationStaking.sol,function totalPending() external view returns (uint256) {
SWC-101-Integer Overflow and Underflow,erc20Transfer,L472-475,DAppSCAN-source/contracts/Coinfabrik-Avalaunch Audit Allocation Staking and Cooldown feature/xava-protocol-master/contracts/AllocationStaking.sol,AllocationStaking.sol,"function erc20Transfer(address _to, uint256 _amount) internal {"
SWC-113-DoS with Failed Call,removeAdmin,L43-68,DAppSCAN-source/contracts/Coinfabrik-Avalaunch Audit Allocation Staking and Sales/xava-protocol-fd252f8b9b0283d245d9d561130fe789ff08dfe9/contracts/Admin.sol,Admin.sol,function removeAdmin(
SWC-113-DoS with Failed Call,postponeSale,L294,DAppSCAN-source/contracts/Coinfabrik-Avalaunch Audit Allocation Staking and Sales/xava-protocol-fd252f8b9b0283d245d9d561130fe789ff08dfe9/contracts/sales/AvalaunchSale.sol,AvalaunchSale.sol,"require(block.timestamp < roundIdToRound[roundIds[0]].startTime, ""1st round already started."");"
SWC-113-DoS with Failed Call,depositTokens,L346,DAppSCAN-source/contracts/Coinfabrik-Avalaunch Audit Allocation Staking and Sales/xava-protocol-fd252f8b9b0283d245d9d561130fe789ff08dfe9/contracts/sales/AvalaunchSale.sol,AvalaunchSale.sol,"require(sale.totalTokensSold == 0 && sale.token.balanceOf(address(this)) == 0, ""Deposit can be done only once"");"
SWC-102-Outdated Compiler Version,N/A,L4,DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/AvalaunchCollateral.sol,AvalaunchCollateral.sol,pragma solidity ^0.6.12;
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/Coinfabrik-Avalaunch XAVA Protocol Audit/xava-protocol-fd9b97ccd963819a282fa5c21bf0545d180f8797/contracts/AvalaunchCollateral.sol,AvalaunchCollateral.sol,pragma solidity ^0.6.12;
SWC-101-Integer Overflow and Underflow,buyBBITokens,L223,DAppSCAN-source/contracts/Coinfabrik-Beluga Pay (BBI) Security Audit/contractBBIT-master/bbi.sol,bbi.sol,"uint tokens = (SafeMath.mul(_value, 960));"
SWC-105-Unprotected Ether Withdrawal,,L243 - L245,DAppSCAN-source/contracts/Coinfabrik-Beluga Pay (BBI) Security Audit/contractBBIT-master/bbi.sol,bbi.sol,//  SWC-105-Unprotected Ether Withdrawal: L243 - L245
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/Coinfabrik-Bitpara Smart Contract Audit/bitpara-master/bitpara.sol,bitpara.sol,pragma solidity ^0.4.18;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Coinfabrik-Bitpara Smart Contract Audit/bitpara-master/bitpara.sol,bitpara.sol,pragma solidity ^0.4.18;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Coinfabrik-Casper CST Token Sale Security Audit/presale-master/contracts/CasperToken.sol,CasperToken.sol,pragma solidity 0.4.24;
SWC-101-Integer Overflow and Underflow,purchaseWithPromoter,L460-492,DAppSCAN-source/contracts/Coinfabrik-Casper CST Token Sale Security Audit/presale-master/contracts/CasperToken.sol,CasperToken.sol,// SWC-101-Integer Overflow and Underflow: L460-492
SWC-102-Outdated Compiler Version,N/A,L6,DAppSCAN-source/contracts/Coinfabrik-DMToken Security Audit V2 2019 Updated/code/code.sol,code.sol,pragma solidity 0.4.18;
SWC-104-Unchecked Call Return Value,storageGetTeamMemberIndexByAddress ,L48,DAppSCAN-source/contracts/Coinfabrik-DreamTeam Smart Contracts Audit for Players Compensation/smart-contracts-c1efcabf8a56a4d0a1fa5185a095052c110bdd87/contracts/storage/TeamsStorageController.sol,TeamsStorageController.sol,"addr = StorageInterface(db).getAddress(keccak256(Storage.teams, teamId, i));"
SWC-101-Integer Overflow and Underflow,multiMint ,L375-376,DAppSCAN-source/contracts/Coinfabrik-DreamTeam Token Audit/smart-contracts-616ed2538526001d25b75680e4d3bd8f3c4deac2/contracts/token/DTT.sol,DTT.sol,balanceOf[recipients[i]] += amounts[i];
SWC-101-Integer Overflow and Underflow,lastMint ,L399,DAppSCAN-source/contracts/Coinfabrik-DreamTeam Token Audit/smart-contracts-616ed2538526001d25b75680e4d3bd8f3c4deac2/contracts/token/DTT.sol,DTT.sol,balanceOf[tokenDistributor] += remaining;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Coinfabrik-EasyPool Smart Contract Security Audit/EasyPool-master/contracts/Migrations.sol,Migrations.sol,pragma solidity ^0.4.23;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Coinfabrik-EasyPool Smart Contract Security Audit v2/EasyPool-master/contracts/library/ProPoolLib.sol,ProPoolLib.sol,pragma solidity ^0.4.24;
SWC-114-Transaction Order Dependence,N/A,L120,DAppSCAN-source/contracts/Coinfabrik-EasyPool Smart Contract Security Audit v2/EasyPool-master/contracts/library/ProPoolLib.sol,ProPoolLib.sol,bool lockPresale;
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/Coinfabrik-EMDX – Protocol Audit/perpetual-protocol-emdx-main/src/Ark.sol,Ark.sol,pragma solidity 0.6.9;
SWC-113-DoS with Failed Call,withdrawForLoss,L55,DAppSCAN-source/contracts/Coinfabrik-EMDX – Protocol Audit/perpetual-protocol-emdx-main/src/Ark.sol,Ark.sol,"require(_balanceOf(_quoteToken, address(this)).toUint() >= _amount.toUint(), ""insufficient funds"");"
SWC-113-DoS with Failed Call,updateScore,L139-199,DAppSCAN-source/contracts/Coinfabrik-EMDX – Token Contracts Audit/token-contracts-main/contracts/Vesting.sol,Vesting.sol,function updateScore(uint8 _newScore)
SWC-101-Integer Overflow and Underflow,updateScore,L172-180,DAppSCAN-source/contracts/Coinfabrik-EMDX – Token Contracts Audit/token-contracts-main/contracts/Vesting.sol,Vesting.sol,LockVesting memory lock = locks[beneficiaries[i]];
SWC-113-DoS with Failed Call,_handleSaleFunds,L151,"DAppSCAN-source/contracts/Coinfabrik-MintingFactoryV2, BaseUpgradableMarketplace & KODAV3UpgradableGatedMarketplace/known-origin-contracts-v3-d592c5f4fa4e0b6fc65a1fce43e302706aedf607/contracts/marketplace/BaseUpgradableMarketplace.sol",BaseUpgradableMarketplace.sol,"(bool koCommissionSuccess,) = platformAccount.call{value : koCommission}("""");"
SWC-113-DoS with Failed Call,_handleSaleFunds,L155,"DAppSCAN-source/contracts/Coinfabrik-MintingFactoryV2, BaseUpgradableMarketplace & KODAV3UpgradableGatedMarketplace/known-origin-contracts-v3-d592c5f4fa4e0b6fc65a1fce43e302706aedf607/contracts/marketplace/BaseUpgradableMarketplace.sol",BaseUpgradableMarketplace.sol,"(bool success,) = _fundsReceiver.call{value : msg.value - koCommission}("""");"
SWC-102-Outdated Compiler Version,N/A,L3,"DAppSCAN-source/contracts/Coinfabrik-MintingFactoryV2, BaseUpgradableMarketplace & KODAV3UpgradableGatedMarketplace/known-origin-contracts-v3-d592c5f4fa4e0b6fc65a1fce43e302706aedf607/contracts/minter/MintingFactoryV2.sol",MintingFactoryV2.sol,pragma solidity 0.8.4;
SWC-107-Reentrancy,mintBatchEdition,L93 - L112,"DAppSCAN-source/contracts/Coinfabrik-MintingFactoryV2, BaseUpgradableMarketplace & KODAV3UpgradableGatedMarketplace/known-origin-contracts-v3-d592c5f4fa4e0b6fc65a1fce43e302706aedf607/contracts/minter/MintingFactoryV2.sol",MintingFactoryV2.sol,function mintBatchEdition(
SWC-101-Integer Overflow and Underflow,holdersByIndices,L266,DAppSCAN-source/contracts/Coinfabrik-Nahmii Security Audit/nahmii-contracts-f1942e422411679f660b6d30fd1452451169bf92/contracts/RevenueToken.sol,RevenueToken.sol,length = up - low + 1;
SWC-128-DoS With Block Gas Limit,closeAccrualPeriod,L291,DAppSCAN-source/contracts/Coinfabrik-Nahmii Security Audit/nahmii-contracts-f1942e422411679f660b6d30fd1452451169bf92/contracts/TokenHolderRevenueFund.sol,TokenHolderRevenueFund.sol,for (uint256 i = 0; i < currencies.length; i++) {
SWC-135-Code With No Effects,finalize,L360,DAppSCAN-source/contracts/Coinfabrik-Polymath Core Audit/polymath-core-bdb055769dd87a09327c6200aed5d994ab0237e8/contracts/modules/STO/USDTiered/USDTieredSTO.sol,USDTieredSTO.sol,if (preMintAllowed) {
SWC-128-DoS With Block Gas Limit,tokenOfOwnerByIndex,L46,DAppSCAN-source/contracts/Coinfabrik-RCN Network Smart Contract Audit/rcn-network-3ded36151ad55543d16c354e70161852de4061d0/contracts/NanoLoanEngine.sol,NanoLoanEngine.sol,for (loanId = 0; loanId <= totalLoans; loanId++) {
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Coinfabrik-Rightmesh Token Sale Smart Contract Audit (Master)/solidity-f24ea6c5787b2d40423f4dc312d832592b1cd335/rightmesh/contracts/MeshToken.sol,MeshToken.sol,pragma solidity ^0.4.17;
SWC-135-Code With No Effects,N/A,L8 - L40,DAppSCAN-source/contracts/Coinfabrik-Security Audit for Patientory (PTOY) Token ICO/smart-contracts-master/contracts/SafeMathLib.sol,SafeMathLib.sol,pragma solidity ^0.4.6;
SWC-135-Code With No Effects,N/A,L2 - L45,DAppSCAN-source/contracts/Coinfabrik-Security Audit – Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/contracts/ISendToken.sol,ISendToken.sol,pragma solidity ^0.4.18;
SWC-135-Code With No Effects,N/A,L2,DAppSCAN-source/contracts/Coinfabrik-Smart Contract Audit REAL Estate Crypto Token/real_contract-master/contracts/REAL.sol,REAL.sol,pragma solidity ^0.4.11;
SWC-115-Authorization through tx.origin,leverage,L160,DAppSCAN-source/contracts/Coinfabrik-Timvi Smart Contract Audit/Timvi-9324706d1160996f7847e1989c8567168261382e/contracts/services/bond/BondService.sol,BondService.sol,"return createBond(tx.origin, address(0), _percent, _expiration, _yearFee);"
SWC-115-Authorization through tx.origin,exchange,L172,DAppSCAN-source/contracts/Coinfabrik-Timvi Smart Contract Audit/Timvi-9324706d1160996f7847e1989c8567168261382e/contracts/services/bond/BondService.sol,BondService.sol,"return createBond(address(0), tx.origin, 0, _expiration, _yearFee);"
SWC-113-DoS with Failed Call,multiFill,L175-190,DAppSCAN-source/contracts/Coinfabrik-Timvi Smart Contract Audit/Timvi-9324706d1160996f7847e1989c8567168261382e/contracts/services/gate/Gate.sol,Gate.sol,for (uint256 i = 0; i < _ids.length; i++) {
SWC-115-Authorization through tx.origin,create,L129,DAppSCAN-source/contracts/Coinfabrik-Timvi Smart Contract Audit/Timvi-9324706d1160996f7847e1989c8567168261382e/contracts/services/leverage-exchange/ExchangeService.sol,ExchangeService.sol,"tx.origin,"
SWC-115-Authorization through tx.origin,create,L131,DAppSCAN-source/contracts/Coinfabrik-Timvi Smart Contract Audit/Timvi-9324706d1160996f7847e1989c8567168261382e/contracts/services/leverage-exchange/LeverageService.sol,LeverageService.sol,"tx.origin,"
SWC-107-Reentrancy,processReward,L743 - L769,DAppSCAN-source/contracts/Coinfabrik-Woonkly Security Audit (DEX STAKE)/STAKESmartContractPreRelease-main/woonklyPOS.sol,woonklyPOS.sol,"function processReward(address sc, uint256 amount)"
SWC-113-DoS with Failed Call,_withdrawAllrewardsCOIN,L874 - L886,DAppSCAN-source/contracts/Coinfabrik-Woonkly Security Audit (DEX STAKE)/STAKESmartContractPreRelease-main/woonklyPOS.sol,woonklyPOS.sol,for (uint256 i = 0; i < (last + 1); i++) {
SWC-135-Code With No Effects,N/A,// SWC-135-Code With No Effects,DAppSCAN-source/contracts/Coinfabrik-Worldbit Token Sale Smart Contract Audit/ico-445cc0c28894a85cb58f54631666deafdd35d859/contracts/Ownable.sol,Ownable.sol,N/A
SWC-101-Integer Overflow and Underflow,TokenTranchePricing,L45-69,DAppSCAN-source/contracts/Coinfabrik-Worldbit Token Sale Smart Contract Audit/ico-445cc0c28894a85cb58f54631666deafdd35d859/contracts/TokenTranchePricing.sol,TokenTranchePricing.sol,function TokenTranchePricing(uint[] init_tranches) public {
SWC-102-Outdated Compiler Version,N/A,L5,DAppSCAN-source/contracts/Coinfabrik-YFFII Smart Contract Audit/code/code.sol,code.sol,pragma solidity ^0.5.16;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Coinspect-Incognito Audit/bridge-eth-4879219669a38d601265582f815596b6775855b6/bridge/contracts/incognito_proxy.sol,incognito_proxy.sol,pragma solidity ^0.5.12;
SWC-100-Function Default Visibility,claim,L299 - L303,DAppSCAN-source/contracts/Coinspect-Incognito Audit/bridge-eth-4879219669a38d601265582f815596b6775855b6/bridge/contracts/transparentUpgraded.sol,transparentUpgraded.sol,function claim() external {
SWC-101-Integer Overflow and Underflow,submitBurnProof,L409,DAppSCAN-source/contracts/Coinspect-Incognito Audit/bridge-eth-4879219669a38d601265582f815596b6775855b6/bridge/contracts/vault.sol,vault.sol,data.amount = data.amount * (10 ** (uint(decimals) - 9));
SWC-114-Transaction Order Dependence,execute,L513 - L548,DAppSCAN-source/contracts/Coinspect-Incognito Audit/bridge-eth-4879219669a38d601265582f815596b6775855b6/bridge/contracts/vault.sol,vault.sol,function execute(
SWC-105-Unprotected Ether Withdrawal,execute,L513 - L548,DAppSCAN-source/contracts/Coinspect-Incognito Audit/bridge-eth-4879219669a38d601265582f815596b6775855b6/bridge/contracts/vault.sol,vault.sol,function execute(
SWC-105-Unprotected Ether Withdrawal,closeTrove,L321 - L351,DAppSCAN-source/contracts/Coinspect-Liquity Audit/dev-dd7f59b980e7dab1cebc84c017db3a2c4caa522c/packages/contracts/contracts/BorrowerOperations.sol,BorrowerOperations.sol,function closeTrove() external override {
SWC-107-Reentrancy,exitTempusAMMAndRedeem,L352-386,DAppSCAN-source/contracts/Coinspect-Tempus Audit/tempus-protocol-ee5964bd416770e00639a4053b45f346e4bf8b93/contracts/TempusController.sol,TempusController.sol,function exitTempusAMMAndRedeem(
SWC-107-Reentrancy,completeExitAndRedeem,L395-436,DAppSCAN-source/contracts/Coinspect-Tempus Audit/tempus-protocol-ee5964bd416770e00639a4053b45f346e4bf8b93/contracts/TempusController.sol,TempusController.sol,"function completeExitAndRedeem(ITempusAMM tempusAMM, bool toBackingToken) external {"
SWC-107-Reentrancy,refundsAttachedEth,L100-107,DAppSCAN-source/contracts/consensys-0x_Exchange_v4/protocol-475b608338561a1dce3199bfb9fb59ee9372149b/contracts/zero-ex/contracts/src/features/MetaTransactionsFeature.sol,MetaTransactionsFeature.sol,modifier refundsAttachedEth() {
SWC-107-Reentrancy,sellToUniswap,L203-206,DAppSCAN-source/contracts/consensys-0x_Exchange_v4/protocol-475b608338561a1dce3199bfb9fb59ee9372149b/contracts/zero-ex/contracts/src/features/UniswapFeature.sol,UniswapFeature.sol,"mstore(0xB00, UNISWAP_PAIR_RESERVES_CALL_SELECTOR_32)"
SWC-135-Code With No Effects,N/A,L21,DAppSCAN-source/contracts/consensys-0x_Protocol_v2/0x-monorepo-a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/AssetProxy/ERC20Proxy.sol,ERC20Proxy.sol,"import ""../../utils/LibBytes/LibBytes.sol"";"
SWC-102-Outdated Compiler Version,N/A,L19,DAppSCAN-source/contracts/consensys-0x_Protocol_v2/0x-monorepo-a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/AssetProxyOwner/AssetProxyOwner.sol,AssetProxyOwner.sol,pragma solidity 0.4.10;
SWC-135-Code With No Effects,N/A,L32,DAppSCAN-source/contracts/consensys-0x_Protocol_v2/0x-monorepo-a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/Exchange/MixinAssetProxyDispatcher.sol,MixinAssetProxyDispatcher.sol,using LibBytes for bytes;
SWC-122-Lack of Proper Signature Verification,preSign,L52-L59,DAppSCAN-source/contracts/consensys-0x_Protocol_v2/0x-monorepo-a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/Exchange/MixinSignatureValidator.sol,MixinSignatureValidator.sol,require(
SWC-119-Shadowing State Variables,N/A,L40,DAppSCAN-source/contracts/consensys-0x_v3_Staking/0x-monorepo-b8e01d7be535196a3145a431291183ecfbb333c6/contracts/dev-utils/contracts/src/LibAssetData.sol,LibAssetData.sol,IExchange internal _EXCHANGE;
SWC-135-Code With No Effects,,L37-40,DAppSCAN-source/contracts/consensys-0x_v3_Staking/0x-monorepo-b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/Staking.sol,Staking.sol,function ()
SWC-135-Code With No Effects,N/A,L62,DAppSCAN-source/contracts/consensys-0x_v3_Staking/0x-monorepo-b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/interfaces/IStructs.sol,IStructs.sol,bool isInitialized;
SWC-135-Code With No Effects,N/A,L115,DAppSCAN-source/contracts/consensys-0x_v3_Staking/0x-monorepo-b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/interfaces/IStructs.sol,IStructs.sol,bool initialized;
SWC-101-Integer Overflow and Underflow,_add,L361-378,DAppSCAN-source/contracts/consensys-0x_v3_Staking/0x-monorepo-b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/libs/LibFixedMath.sol,LibFixedMath.sol,"function _add(int256 a, int256 b) private pure returns (int256 c) {"
SWC-112-Delegatecall to Untrusted Callee,N/A,L1-350,DAppSCAN-source/contracts/consensys-0x_v3_Staking/0x-monorepo-b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/staking_pools/MixinStakingPool.sol,MixinStakingPool.sol,// SWC-112-Delegatecall to Untrusted Callee: L1-350
SWC-116-Block values as a proxy for time,_goToNextEpoch,L71,DAppSCAN-source/contracts/consensys-0x_v3_Staking/0x-monorepo-b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/sys/MixinScheduler.sol,MixinScheduler.sol,if (epochEndTime > currentBlockTimestamp) {
SWC-105-Unprotected Ether Withdrawal,rescueFunds,L331-341,DAppSCAN-source/contracts/consensys-1inch_Liquidity_Protocol/liquidity-protocol-d3652c992073efed6367ff93f9e8a18dcbd80e9c/contracts/Mooniswap.sol,Mooniswap.sol,"function rescueFunds(IERC20 token, uint256 amount) external nonReentrant onlyOwner {"
SWC-105-Unprotected Ether Withdrawal,updateReward,L38-50,DAppSCAN-source/contracts/consensys-1inch_Liquidity_Protocol/liquidity-protocol-d3652c992073efed6367ff93f9e8a18dcbd80e9c/contracts/ReferralFeeReceiver.sol,ReferralFeeReceiver.sol,"function updateReward(address referral, uint256 amount) external override {"
SWC-124-Write to Arbitrary Storage Location,notifyFor,L50,DAppSCAN-source/contracts/consensys-1inch_Liquidity_Protocol/liquidity-protocol-d3652c992073efed6367ff93f9e8a18dcbd80e9c/contracts/inch/GovernanceMothership.sol,GovernanceMothership.sol,"_notifyFor(account, balanceOf(msg.sender));"
SWC-107-Reentrancy,deposit,L92-119,DAppSCAN-source/contracts/consensys-Aave_Protocol_V2/aave-protocol-v2-f756f44a8d6a328cd545335e46e7128939db88c4/contracts/lendingpool/LendingPool.sol,LendingPool.sol,function deposit(
SWC-104-Unchecked Call Return Value,flashLoan,L579,DAppSCAN-source/contracts/consensys-Aave_Protocol_V2/aave-protocol-v2-f756f44a8d6a328cd545335e46e7128939db88c4/contracts/lendingpool/LendingPool.sol,LendingPool.sol,// SWC-104-Unchecked Call Return Value: L579
SWC-105-Unprotected Ether Withdrawal,swapLiquidity,L490-517,DAppSCAN-source/contracts/consensys-Aave_Protocol_V2/aave-protocol-v2-f756f44a8d6a328cd545335e46e7128939db88c4/contracts/lendingpool/LendingPoolCollateralManager.sol,LendingPoolCollateralManager.sol,vars.fromReserveAToken.burn(
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol,Amp.sol,pragma solidity 0.6.9;
SWC-104-Unchecked Call Return Value,swap,L619,DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol,Amp.sol,"swapToken.transferFrom(_from, swapTokenGraveyard, amount);"
SWC-107-Reentrancy,_transferByPartition,L1131-L1201,DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol,Amp.sol,* @dev Transfer tokens from a specific partition.
SWC-128-DoS With Block Gas Limit,_decodeWithdrawalOperatorData,L1463-L1470,DAppSCAN-source/contracts/consensys-Amp/flexa-collateral-manager-4203e96d1138632a991d072d0c232fd8ba69c9e1/contracts/FlexaCollateralManager.sol,FlexaCollateralManager.sol,for (uint256 i = 116; i <= _operatorData.length; i = i + 32) {
SWC-108-State Variable Default Visibility,_setupCollaterals,L335,DAppSCAN-source/contracts/consensys-AragonBlack_Fundraising/fundraising-5ad1332955bab9d36cfad345ae92b7ad7dc0bdbe/templates/multisig/contracts/FundraisingMultisigTemplate.sol,FundraisingMultisigTemplate.sol,"acl.createPermission(this, controller, controller.ADD_COLLATERAL_TOKEN_ROLE(), this);"
SWC-135-Code With No Effects,getTimestamp,L37-L39,DAppSCAN-source/contracts/consensys-AragonOS_and_Aragon_Apps/aragonOS-a68479107f564e6be98a6b877b78f635fca96dbe/contracts/common/TimeHelpers.sol,TimeHelpers.sol,function getTimestamp() internal view returns (uint256) {
SWC-101-Integer Overflow and Underflow,validateJoinSplit,L75-L78,DAppSCAN-source/contracts/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/joinSplit/JoinSplit.sol,JoinSplit.sol,function validateJoinSplit() {
SWC-101-Integer Overflow and Underflow,bmul,L68-69,DAppSCAN-source/contracts/consensys-Balancer_Finance/balancer-core-5d70da92b1bebaa515254d00a9e064ecac9bd18e/contracts/BNum.sol,BNum.sol,uint c0 = a * b;
SWC-108-State Variable Default Visibility,N/A,L2-L725,DAppSCAN-source/contracts/consensys-Bounties_Network/StandardBounties-3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol,StandardBounties.sol,// SWC-103-Floating Pragma: L3
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/consensys-Bounties_Network/StandardBounties-3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol,StandardBounties.sol,pragma solidity 0.5.0;
SWC-108-State Variable Default Visibility,N/A,L48-L49,DAppSCAN-source/contracts/consensys-Bounties_Network/StandardBounties-3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol,StandardBounties.sol,address owner; // The address of the individual who's allowed to set the metaTxRelayer address
SWC-108-State Variable Default Visibility,contribute,L246-L265,DAppSCAN-source/contracts/consensys-Bounties_Network/StandardBounties-3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol,StandardBounties.sol,bounties[_bountyId].contributions.push(
SWC-101-Integer Overflow and Underflow,contribute,L249,DAppSCAN-source/contracts/consensys-Bounties_Network/StandardBounties-3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol,StandardBounties.sol,bounties[_bountyId].balance += _amount; // Increments the balance of the bounty
SWC-101-Integer Overflow and Underflow,N/A,L2-308,DAppSCAN-source/contracts/consensys-Brickblock/smart-contracts-f1f5b04722b9569e1d4c0b62ac4c490c0a785fd8/contracts/AccessToken.sol,AccessToken.sol,pragma solidity 0.4.23;
SWC-135-Code With No Effects,,L302-307,DAppSCAN-source/contracts/consensys-Brickblock/smart-contracts-f1f5b04722b9569e1d4c0b62ac4c490c0a785fd8/contracts/AccessToken.sol,AccessToken.sol,function()
SWC-105-Unprotected Ether Withdrawal,withdrawEthFunds,L84-95,DAppSCAN-source/contracts/consensys-Brickblock/smart-contracts-f1f5b04722b9569e1d4c0b62ac4c490c0a785fd8/contracts/BrickblockAccount.sol,BrickblockAccount.sol,function withdrawEthFunds(
SWC-135-Code With No Effects,sendQuery,L54-55,DAppSCAN-source/contracts/consensys-Brickblock/smart-contracts-f1f5b04722b9569e1d4c0b62ac4c490c0a785fd8/contracts/ExchangeRateProvider.sol,ExchangeRateProvider.sol,"uint256 _callInterval,"
SWC-107-Reentrancy,removeLiquidity,L229 - L254,DAppSCAN-source/contracts/consensys-Connext NXTP — Noncustodial Xchain Transfer Protocol/nxtp-0656436d654cfe0313fa3c2bbc81aa86232ade16/packages/contracts/contracts/TransactionManager.sol,TransactionManager.sol,function removeLiquidity(
SWC-128-DoS With Block Gas Limit,getBorrowETH,L387,DAppSCAN-source/contracts/consensys-Definer/defi-saving-880e9aaa883b4d9b68ed9ff3c47e9347345526cc/contracts/Accounts.sol,Accounts.sol,for(uint i = 0; i < tokenNum; i++) {
SWC-104-Unchecked Call Return Value,enterMarket,L27-138,DAppSCAN-source/contracts/consensys-DeFi_Saver/defisaver-v3-contracts-cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/actions/compound/helpers/CompHelper.sol,CompHelper.sol,function enterMarket(address _cTokenAddr) public {
SWC-107-Reentrancy,executeOperation,L106-137,DAppSCAN-source/contracts/consensys-DeFi_Saver/defisaver-v3-contracts-cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/actions/flashloan/FLAaveV2.sol,FLAaveV2.sol,function executeOperation(
SWC-101-Integer Overflow and Underflow,takeOrder,L42-50,DAppSCAN-source/contracts/consensys-DeFi_Saver/defisaver-v3-contracts-cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/exchangeV3/offchainWrappersV3/ZeroxWrapper.sol,ZeroxWrapper.sol,uint256 tokensBefore = _exData.destAddr.getBalance(address(this));
SWC-101-Integer Overflow and Underflow,getSellRate,L101-109,DAppSCAN-source/contracts/consensys-DeFi_Saver/defisaver-v3-contracts-cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/exchangeV3/wrappersV3/KyberWrapperV3.sol,KyberWrapperV3.sol,"function getSellRate(address _srcAddr, address _destAddr, uint _srcAmount, bytes memory) public override view returns (uint rate) {"
SWC-135-Code With No Effects,N/A,L3-39,DAppSCAN-source/contracts/consensys-DeFi_Saver/defisaver-v3-contracts-cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/utils/ZrxAllowlist.sol,ZrxAllowlist.sol,pragma solidity ^0.7.0;
SWC-114-Transaction Order Dependence,makeCommitment,L46-L49,DAppSCAN-source/contracts/consensys-ENS_Permanent_Registrar/ethregistrar-e52abfc2799ac361364aca6135fc20f9175a29fd/contracts/ETHRegistrarController.sol,ETHRegistrarController.sol,"function makeCommitment(string memory name, bytes32 secret) pure public returns(bytes32) {"
SWC-104-Unchecked Call Return Value,register,L56-L65,DAppSCAN-source/contracts/consensys-ENS_Permanent_Registrar/ethregistrar-e52abfc2799ac361364aca6135fc20f9175a29fd/contracts/ETHRegistrarController.sol,ETHRegistrarController.sol,"function register(string calldata name, address owner, uint duration, bytes32 secret) external payable {"
SWC-101-Integer Overflow and Underflow,price,L27-L29,DAppSCAN-source/contracts/consensys-ENS_Permanent_Registrar/ethregistrar-e52abfc2799ac361364aca6135fc20f9175a29fd/contracts/SimplePriceOracle.sol,SimplePriceOracle.sol,"function price(string calldata /*name*/, uint /*expires*/, uint duration) external view returns(uint) {"
SWC-101-Integer Overflow and Underflow,price,L58-L64,DAppSCAN-source/contracts/consensys-ENS_Permanent_Registrar/ethregistrar-e52abfc2799ac361364aca6135fc20f9175a29fd/contracts/StablePriceOracle.sol,StablePriceOracle.sol,"function price(string calldata name, uint /*expires*/, uint duration) view external returns(uint) {"
SWC-110-Assert Violation,_queueRewards,L198,DAppSCAN-source/contracts/consensys-Fei_Labs_Flywheel_v2_xTRIBE_xERC4626/flywheel-v2-733d0e1f18090796f07d3f4c208d1ee1f89819c7/src/rewards/FlywheelGaugeRewards.sol,FlywheelGaugeRewards.sol,uint112 completedRewards = queuedRewards.storedCycle == lastCycle ? queuedRewards.cycleRewards : 0;
SWC-110-Assert Violation,setMaxGauges,L500-L505,DAppSCAN-source/contracts/consensys-Fei_Labs_Flywheel_v2_xTRIBE_xERC4626/flywheel-v2-733d0e1f18090796f07d3f4c208d1ee1f89819c7/src/token/ERC20Gauges.sol,ERC20Gauges.sol,function setMaxGauges(uint256 newMax) external requiresAuth {
SWC-110-Assert Violation,_undelegate,L252-261,DAppSCAN-source/contracts/consensys-Fei_Labs_Flywheel_v2_xTRIBE_xERC4626/flywheel-v2-733d0e1f18090796f07d3f4c208d1ee1f89819c7/src/token/ERC20MultiVotes.sol,ERC20MultiVotes.sol,function _undelegate(
SWC-105-Unprotected Ether Withdrawal,emitVotingBalances,L90-L100,DAppSCAN-source/contracts/consensys-Fei_Labs_Flywheel_v2_xTRIBE_xERC4626/xTRIBE-44d5a278c4c9655f59fdc64b08d8cebb941a2204/src/xTRIBE.sol,xTRIBE.sol,function emitVotingBalances(address[] calldata accounts) external {
SWC-101-Integer Overflow and Underflow,getAmountsToRedeem,L132,DAppSCAN-source/contracts/consensys-Fei_Protocol/fei-protocol-core-ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/genesis/GenesisGroup.sol,GenesisGroup.sol,uint totalGenesisTribe = tribeBalance() - totalCommittedTribe;
SWC-104-Unchecked Call Return Value,_swapEth,L123,DAppSCAN-source/contracts/consensys-Fei_Protocol/fei-protocol-core-ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/pcv/EthUniswapPCVController.sol,EthUniswapPCVController.sol,"weth.transfer(address(pair), amount);"
SWC-104-Unchecked Call Return Value,_deposit,L121,DAppSCAN-source/contracts/consensys-Fei_Protocol/fei-protocol-core-ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/pool/Pool.sol,Pool.sol,"stakedToken.transferFrom(from, address(this), amount);"
SWC-110-Assert Violation,N/A,L22,DAppSCAN-source/contracts/consensys-Fei_Protocol/fei-protocol-core-ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/router/UniswapSingleEthRouter.sol,UniswapSingleEthRouter.sol,assert(msg.sender == address(WETH)); // only accept ETH via fallback from the WETH contract
SWC-101-Integer Overflow and Underflow,getBuyIncentive,L128-149,DAppSCAN-source/contracts/consensys-Fei_Protocol/fei-protocol-core-ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/token/UniswapIncentive.sol,UniswapIncentive.sol,function getBuyIncentive(uint amount) public view override returns(
SWC-101-Integer Overflow and Underflow,pcvStats,L323,DAppSCAN-source/contracts/consensys-Fei_Protocol_v2_Phase_1/fei-protocol-core-5e3e2ab889f06831f4fe2e8460066ded40ccf0a8/contracts/oracle/CollateralizationOracle.sol,CollateralizationOracle.sol,protocolControlledValue += _oraclePrice.mul(_totalTokenBalance).asUint256();
SWC-101-Integer Overflow and Underflow,pcvStats,L327,DAppSCAN-source/contracts/consensys-Fei_Protocol_v2_Phase_1/fei-protocol-core-5e3e2ab889f06831f4fe2e8460066ded40ccf0a8/contracts/oracle/CollateralizationOracle.sol,CollateralizationOracle.sol,userCirculatingFei = fei().totalSupply() - _protocolControlledFei;
SWC-114-Transaction Order Dependence,init,L108-118,DAppSCAN-source/contracts/consensys-Fei_Protocol_v2_Phase_1/fei-protocol-core-5e3e2ab889f06831f4fe2e8460066ded40ccf0a8/contracts/pcv/balancer/BalancerLBPSwapper.sol,BalancerLBPSwapper.sol,function init(IWeightedPool _pool) external {
SWC-105-Unprotected Ether Withdrawal,swap,L174-258,DAppSCAN-source/contracts/consensys-Fei_Protocol_v2_Phase_1/fei-protocol-core-5e3e2ab889f06831f4fe2e8460066ded40ccf0a8/contracts/pcv/balancer/BalancerLBPSwapper.sol,BalancerLBPSwapper.sol,function swap() external override afterTime whenNotPaused {
SWC-105-Unprotected Ether Withdrawal,deposit,L81-142,DAppSCAN-source/contracts/consensys-Gamma/hypervisor-41fd4abf79864478523e87924d4e80d80df04879/contracts/Hypervisor.sol,Hypervisor.sol,function deposit(
SWC-107-Reentrancy,withdraw,L175-216,DAppSCAN-source/contracts/consensys-Gamma/hypervisor-41fd4abf79864478523e87924d4e80d80df04879/contracts/Hypervisor.sol,Hypervisor.sol,function withdraw(
SWC-135-Code With No Effects,uniswapV3MintCallback,L415,DAppSCAN-source/contracts/consensys-Gamma/hypervisor-41fd4abf79864478523e87924d4e80d80df04879/contracts/Hypervisor.sol,Hypervisor.sol,"address payer = abi.decode(data, (address));"
SWC-105-Unprotected Ether Withdrawal,deposit,L67-126,DAppSCAN-source/contracts/consensys-Gamma/hypervisor-41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol,UniProxy.sol,function deposit(
SWC-107-Reentrancy,deposit,L75-82,DAppSCAN-source/contracts/consensys-Gamma/hypervisor-41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol,UniProxy.sol,// SWC-107-Reentrancy: L75-82
SWC-135-Code With No Effects,properDepositRatio,L259-276,DAppSCAN-source/contracts/consensys-Gamma/hypervisor-41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol,UniProxy.sol,// SWC-135-Code With No Effects: L259-276
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol,GovernorAlpha.sol,pragma solidity ^0.5.16;
SWC-135-Code With No Effects,claimTokens,L105-141,DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/TokenDistributor.sol,TokenDistributor.sol,function claimTokens(
SWC-133-Hash Collisions With Multiple Variable Length Arguments,_hashLeaf,L259,DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/TokenDistributor.sol,TokenDistributor.sol,// SWC-133-Hash Collisions With Multiple Variable Length Arguments: L259
SWC-107-Reentrancy,convertFundsFromInput,L80-90,DAppSCAN-source/contracts/consensys-GrowthDeFi WHEAT/wheat-v1-core-8360ac0a537589bb974e8a5a169bb3e7c95d2857/contracts/Exchange.sol,Exchange.sol,// SWC-107-Reentrancy: L80-90
SWC-128-DoS With Block Gas Limit,_requestFlashLoan,L64-70,DAppSCAN-source/contracts/consensys-Growth_Defi_V1/growthdefi-v1-core-761f0a7af73a082ac64498061749db4466673542/contracts/modules/DydxFlashLoanAbstraction.sol,DydxFlashLoanAbstraction.sol,for (uint256 _i = 0; _i < _numMarkets; _i++) {
SWC-107-Reentrancy,_deposit,L242-258,DAppSCAN-source/contracts/consensys-Idle_Finance/idle-tranches-d94ee7194e8cb17db13b16c338f3e780b62f5435/contracts/IdleCDO.sol,IdleCDO.sol,"function _deposit(uint256 _amount, address _tranche) internal returns (uint256 _minted) {"
SWC-128-DoS With Block Gas Limit,viewTaskABILegacy,L114,DAppSCAN-source/contracts/consensys-iExec_PoCo/PoCo-a4dfe7891ac60489809cdd4d9c491c8f2e107a82/contracts/modules/delegates/IexecAccessorsABILegacyDelegate.sol,IexecAccessorsABILegacyDelegate.sol,"task.contributors,"
SWC-131-Presence of unused variables,N/A,L20,DAppSCAN-source/contracts/consensys-MCDEX_Mai_Protocol_V2/mai-protocol-v2-4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/exchange/Exchange.sol,Exchange.sol,"enum OrderStatus {EXPIRED, CANCELLED, FILLABLE, FULLY_FILLED}"
SWC-131-Presence of unused variables,min,L90-96,DAppSCAN-source/contracts/consensys-MCDEX_Mai_Protocol_V2/mai-protocol-v2-4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/lib/LibMath.sol,LibMath.sol,"function min(int256 x, int256 y) internal pure returns (int256 z) {"
SWC-131-Presence of unused variables,N/A,L17,DAppSCAN-source/contracts/consensys-MCDEX_Mai_Protocol_V2/mai-protocol-v2-4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/liquidity/AMM.sol,AMM.sol,uint256 private constant ONE_WAD_U = 10**18;
SWC-104-Unchecked Call Return Value,mintShareTokenTo,L500-502,DAppSCAN-source/contracts/consensys-MCDEX_Mai_Protocol_V2/mai-protocol-v2-4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/liquidity/AMM.sol,AMM.sol,"function mintShareTokenTo(address guy, uint256 amount) internal {"
SWC-101-Integer Overflow and Underflow,price,L18,DAppSCAN-source/contracts/consensys-MCDEX_Mai_Protocol_V2/mai-protocol-v2-4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/oracle/ChainlinkAdapter.sol,ChainlinkAdapter.sol,newPrice = (feeder.latestAnswer() * chainlinkDecimalsAdapter).toUint256();
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/consensys-MCDEX_Mai_Protocol_V2/mai-protocol-v2-4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Brokerage.sol,Brokerage.sol,pragma solidity ^0.5.2;
SWC-135-Code With No Effects,N/A,L4-5,DAppSCAN-source/contracts/consensys-MCDEX_Mai_Protocol_V2/mai-protocol-v2-4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Perpetual.sol,Perpetual.sol,"import ""@openzeppelin/contracts/token/ERC20/IERC20.sol"";"
SWC-119-Shadowing State Variables,constructor,L34-41,DAppSCAN-source/contracts/consensys-MCDEX_Mai_Protocol_V2/mai-protocol-v2-4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Perpetual.sol,Perpetual.sol,"constructor(address globalConfig, address devAddress, address collateral, uint256 collateralDecimals)"
SWC-105-Unprotected Ether Withdrawal,liquidateFrom,L270-289,DAppSCAN-source/contracts/consensys-MCDEX_Mai_Protocol_V2/mai-protocol-v2-4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Perpetual.sol,Perpetual.sol,"function liquidateFrom(address from, address guy, uint256 maxAmount) public returns (uint256, uint256) {"
SWC-101-Integer Overflow and Underflow,N/A,L2-L230,DAppSCAN-source/contracts/consensys-Modular_Interactive_Crowdsale/ethereum-libraries-73abc22623e0841b8ea67a5089002f4867102672/ArrayUtilsLib/Array256Lib.sol,Array256Lib.sol,pragma solidity ^0.4.18;
SWC-101-Integer Overflow and Underflow,N/A,L1-L106,DAppSCAN-source/contracts/consensys-Modular_Interactive_Crowdsale/ethereum-libraries-73abc22623e0841b8ea67a5089002f4867102672/BasicMathLib/BasicMathLib.sol,BasicMathLib.sol,// SWC-101-Integer Overflow and Underflow: L1-L106
SWC-106-Unprotected SELFDESTRUCT Instruction,withdrawOwnerEth,L204-L208,DAppSCAN-source/contracts/consensys-Modular_Interactive_Crowdsale/ethereum-libraries-73abc22623e0841b8ea67a5089002f4867102672/CrowdsaleLib/CrowdsaleLib.sol,CrowdsaleLib.sol,function withdrawOwnerEth(CrowdsaleStorage storage self) public returns (bool) {
SWC-100-Function Default Visibility,N/A,L1-L655,DAppSCAN-source/contracts/consensys-Modular_Interactive_Crowdsale/ethereum-libraries-73abc22623e0841b8ea67a5089002f4867102672/CrowdsaleLib/IICOLib/truffle/contracts/InteractiveCrowdsaleLib.sol,InteractiveCrowdsaleLib.sol,// SWC-100-Function Default Visibility: L1-L655
SWC-101-Integer Overflow and Underflow,withdrawBid,L392-L395,DAppSCAN-source/contracts/consensys-Modular_Interactive_Crowdsale/ethereum-libraries-73abc22623e0841b8ea67a5089002f4867102672/CrowdsaleLib/IICOLib/truffle/contracts/InteractiveCrowdsaleLib.sol,InteractiveCrowdsaleLib.sol,self.valuationSums[self.personalCaps[msg.sender]] -= refundWei;
SWC-104-Unchecked Call Return Value,setCanceled,L543-550,DAppSCAN-source/contracts/consensys-Modular_Interactive_Crowdsale/ethereum-libraries-73abc22623e0841b8ea67a5089002f4867102672/CrowdsaleLib/IICOLib/truffle/contracts/InteractiveCrowdsaleLib.sol,InteractiveCrowdsaleLib.sol,function setCanceled(InteractiveCrowdsaleStorage storage self) internal returns(bool){
SWC-135-Code With No Effects,InteractiveCrowdsaleTestContract,L22,DAppSCAN-source/contracts/consensys-Modular_Interactive_Crowdsale/ethereum-libraries-73abc22623e0841b8ea67a5089002f4867102672/CrowdsaleLib/IICOLib/truffle/contracts/InteractiveCrowdsaleTestContract.sol,InteractiveCrowdsaleTestContract.sol,"uint256[] saleData,"
SWC-116-Block values as a proxy for time,setupStartStandardExitData,L124,DAppSCAN-source/contracts/consensys-OmiseGo_MoreVP/plasma-contracts-e13aaf759c979cf6516c1d8de865c9e324bc2db6/plasma_framework/contracts/src/exits/payment/controllers/PaymentStartStandardExit.sol,PaymentStartStandardExit.sol,// SWC-116-Block values as a proxy for time: L124
SWC-135-Code With No Effects,N/A,L7,DAppSCAN-source/contracts/consensys-OmiseGo_MoreVP/plasma-contracts-e13aaf759c979cf6516c1d8de865c9e324bc2db6/plasma_framework/contracts/src/framework/PlasmaFramework.sol,PlasmaFramework.sol,"import ""./registries/VaultRegistry.sol"";"
SWC-135-Code With No Effects,N/A,L10,DAppSCAN-source/contracts/consensys-OmiseGo_MoreVP/plasma-contracts-e13aaf759c979cf6516c1d8de865c9e324bc2db6/plasma_framework/contracts/src/framework/PlasmaFramework.sol,PlasmaFramework.sol,"contract PlasmaFramework is VaultRegistry, ExitGameRegistry, ExitGameController, BlockController {"
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/consensys-Paxos/simple-multisig-master/contracts/SimpleMultiSig.sol,SimpleMultiSig.sol,pragma solidity ^0.4.24;
SWC-135-Code With No Effects,initialize ,L81,DAppSCAN-source/contracts/consensys-PoolTogether/pool-contracts-956b9e9dfd41dacd4040c08b5061354cc11897fc/contracts/token-faucet/TokenFaucet.sol,TokenFaucet.sol,"require(_dripRatePerSecond > 0, ""TokenFaucet/dripRate-gt-zero"");"
SWC-135-Code With No Effects,drip,L127,DAppSCAN-source/contracts/consensys-PoolTogether/pool-contracts-956b9e9dfd41dacd4040c08b5061354cc11897fc/contracts/token-faucet/TokenFaucet.sol,TokenFaucet.sol,if (measureTotalSupply > 0 && availableTotalSupply > 0 && newSeconds > 0) {
SWC-100-Function Default Visibility,transferEther,L64-L68,DAppSCAN-source/contracts/consensys-PoolTogether_LootBox_and_MultipleWinners_Strategy/loot-box-2cbea5a85d53c555e28791df5b264d7b32779eea/contracts/LootBox.sol,LootBox.sol,"function transferEther(address payable to, uint256 amount) public {"
SWC-107-Reentrancy,depositTo,L275-282,DAppSCAN-source/contracts/consensys-PoolTogether_Pods/pods-v3-contracts-879dc8b911fc506dd6bead1f36eade919ccfea57/contracts/Pod.sol,Pod.sol,"uint256 shares = _deposit(to, tokenAmount);"
SWC-104-Unchecked Call Return Value,depositTo,L279,DAppSCAN-source/contracts/consensys-PoolTogether_Pods/pods-v3-contracts-879dc8b911fc506dd6bead1f36eade919ccfea57/contracts/Pod.sol,Pod.sol,IERC20Upgradeable(token).transferFrom(
SWC-105-Unprotected Ether Withdrawal,initialize,L82-88,DAppSCAN-source/contracts/consensys-PoolTogether_Pods/pods-v3-contracts-879dc8b911fc506dd6bead1f36eade919ccfea57/contracts/TokenDrop.sol,TokenDrop.sol,"function initialize(address _measure, address _asset) external {"
SWC-107-Reentrancy,claim,L141-155,DAppSCAN-source/contracts/consensys-PoolTogether_Pods/pods-v3-contracts-879dc8b911fc506dd6bead1f36eade919ccfea57/contracts/TokenDrop.sol,TokenDrop.sol,function claim(address user) external returns (uint256) {
SWC-107-Reentrancy,supplyTokenTo,L118-L129,DAppSCAN-source/contracts/consensys-PoolTogether_Sushi_and_Yearn_V2_Yield_Sources/pooltogether-yearnv2-yield-source-a34857f1555908a6263d2ebd189f0cb40e1858da/contracts/yield-source/YearnV2YieldSource.sol,YearnV2YieldSource.sol,"function supplyTokenTo(uint256 _amount, address to) override external {"
SWC-128-DoS With Block Gas Limit,withdrawUnstakedTokens,L370-404,DAppSCAN-source/contracts/consensys-pSTAKE Finance/pStake-smartContracts-ca3e035454dc565a762a1cc03fdd99c7bf52da37/contracts/LiquidStakingV2.sol,LiquidStakingV2.sol,function withdrawUnstakedTokens(address staker)
SWC-128-DoS With Block Gas Limit,setRewardRate,L125-140,DAppSCAN-source/contracts/consensys-pSTAKE Finance/pStake-smartContracts-ca3e035454dc565a762a1cc03fdd99c7bf52da37/contracts/STokensV2.sol,STokensV2.sol,function setRewardRate(uint256 rewardRate)
SWC-113-DoS with Failed Call,init,L230-299,DAppSCAN-source/contracts/consensys-rICO/rICO-smart-contracts-77517a4dceed53ff7c5a7f7580cb805831a7f8d5/ReversibleICO.sol,ReversibleICO.sol,function init(
SWC-119-Shadowing State Variables,acceptContributions,L948,DAppSCAN-source/contracts/consensys-rICO/rICO-smart-contracts-77517a4dceed53ff7c5a7f7580cb805831a7f8d5/ReversibleICO.sol,ReversibleICO.sol,ParticipantStageDetails storage stages = participantStats.stages[stageId];
SWC-131-Presence of unused variables,MemberJoined,L21-22,DAppSCAN-source/contracts/consensys-Rocketpool/rocketpool-2.5-Tokenomics-updates/contracts/contract/dao/node/RocketDAONodeTrusted.sol,RocketDAONodeTrusted.sol,"event MemberJoined(address indexed _nodeAddress, uint256 _rplBondAmount, uint256 time);"
SWC-128-DoS With Block Gas Limit,assignDeposits,L116-129,DAppSCAN-source/contracts/consensys-Rocketpool/rocketpool-2.5-Tokenomics-updates/contracts/contract/deposit/RocketDepositPool.sol,RocketDepositPool.sol,for (uint256 i = 0; i < rocketDAOProtocolSettingsDeposit.getMaximumDepositAssignments(); ++i) {
SWC-104-Unchecked Call Return Value,N/A,L150,DAppSCAN-source/contracts/consensys-Rocketpool/rocketpool-2.5-Tokenomics-updates/contracts/contract/node/RocketNodeStaking.sol,RocketNodeStaking.sol,"rocketVault.depositToken(""rocketNodeStaking"", rplTokenAddress, _amount);"
SWC-114-Transaction Order Dependence,withdrawRPL,L166,DAppSCAN-source/contracts/consensys-Rocketpool/rocketpool-2.5-Tokenomics-updates/contracts/contract/node/RocketNodeStaking.sol,RocketNodeStaking.sol,// SWC-114-Transaction Order Dependence: L166
SWC-114-Transaction Order Dependence,burn,L107-124,DAppSCAN-source/contracts/consensys-Rocketpool/rocketpool-2.5-Tokenomics-updates/contracts/contract/token/RocketTokenRETH.sol,RocketTokenRETH.sol,function burn(uint256 _rethAmount) override external {
SWC-135-Code With No Effects,estimateBounty,L142-159,DAppSCAN-source/contracts/consensys-Skale_Network/skale-manager-cf4a07a5198b387fd128e1863a26bbfc789856c4/contracts/BountyV2.sol,BountyV2.sol,function estimateBounty(uint /* nodeIndex */) external pure returns (uint) {
SWC-135-Code With No Effects,_setNodeLeft,L800,DAppSCAN-source/contracts/consensys-Skale_Network/skale-manager-cf4a07a5198b387fd128e1863a26bbfc789856c4/contracts/Nodes.sol,Nodes.sol,if (nodes[nodeIndex].status == NodeStatus.Active) {
SWC-128-DoS With Block Gas Limit,N/A,L532,DAppSCAN-source/contracts/consensys-Skale_Network/skale-manager-cf4a07a5198b387fd128e1863a26bbfc789856c4/contracts/SchainsInternal.sol,SchainsInternal.sol,for (uint i = 0; i < nodesInGroup.length; ++i) {
SWC-101-Integer Overflow and Underflow,N/A,L74-76,DAppSCAN-source/contracts/consensys-Skale_Token/skale-manager-50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/DelegationRequestManager.sol,DelegationRequestManager.sol,"uint holderBalance = SkaleToken(contractManager.getContract(""SkaleToken"")).balanceOf(holder);"
SWC-135-Code With No Effects,getAllDelegationRequests,L152-158,DAppSCAN-source/contracts/consensys-Skale_Token/skale-manager-50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/DelegationService.sol,DelegationService.sol,function getAllDelegationRequests() external returns(uint[] memory) {
SWC-128-DoS With Block Gas Limit,N/A,L310-316,DAppSCAN-source/contracts/consensys-Skale_Token/skale-manager-50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/DelegationService.sol,DelegationService.sol,for (uint i = 0; i < shares.length; ++i) {
SWC-107-Reentrancy,tokensReceived,L55-68,DAppSCAN-source/contracts/consensys-Skale_Token/skale-manager-50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/SkaleBalances.sol,SkaleBalances.sol,function tokensReceived(
SWC-128-DoS With Block Gas Limit,N/A,L65,DAppSCAN-source/contracts/consensys-Skale_Token/skale-manager-50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/TokenState.sol,TokenState.sol,for (uint i = 0; i < delegationIds.length; ++i) {
SWC-105-Unprotected Ether Withdrawal,endingDelegatedToUnlocked,L259-265,DAppSCAN-source/contracts/consensys-Skale_Token/skale-manager-50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/TokenState.sol,TokenState.sol,if (_isPurchased[delegationId]) {
SWC-107-Reentrancy,_burn,L399-422,DAppSCAN-source/contracts/consensys-Skale_Token/skale-manager-50c8f4e037f6bf578d62bd752516b17237b55811/contracts/ERC777/LockableERC777.sol,LockableERC777.sol,function _burn(
SWC-107-Reentrancy,_buy,L279-285,DAppSCAN-source/contracts/consensys-Skyweaver/Skyweaver-contracts-bde0c184db6168bf86656a48b12d5747950b54d9/contracts/shop/EternalHeroesFactory.sol,EternalHeroesFactory.sol,uint256 refundAmount = _arcAmount.sub(total_cost);
SWC-135-Code With No Effects,onlyActiveState,L125-133,DAppSCAN-source/contracts/consensys-Slockit_Incubed3/in3-contracts-e25c758a115aef0c0640bc446027259aa7cb1a52/contracts/NodeRegistry.sol,NodeRegistry.sol,modifier onlyActiveState(address _signer) {
SWC-114-Transaction Order Dependence,convict,L152-159,DAppSCAN-source/contracts/consensys-Slockit_Incubed3/in3-contracts-e25c758a115aef0c0640bc446027259aa7cb1a52/contracts/NodeRegistry.sol,NodeRegistry.sol,"function convict(uint _blockNumber, bytes32 _hash) external {"
SWC-101-Integer Overflow and Underflow,proposeReparameterization,L130,DAppSCAN-source/contracts/consensys-TCR/tcr-b206561249ed1779f10aa4ba390ffee676148134/contracts/Parameterizer.sol,Parameterizer.sol,"appExpiry: now + get(""pApplyStageLen""),"
SWC-101-Integer Overflow and Underflow,proposeReparameterization,L135,DAppSCAN-source/contracts/consensys-TCR/tcr-b206561249ed1779f10aa4ba390ffee676148134/contracts/Parameterizer.sol,Parameterizer.sol,// SWC-101-Integer Overflow and Underflow: L135
SWC-101-Integer Overflow and Underflow,challengeReparameterization,L165,DAppSCAN-source/contracts/consensys-TCR/tcr-b206561249ed1779f10aa4ba390ffee676148134/contracts/Parameterizer.sol,Parameterizer.sol,"challenger: msg.sender,"
SWC-101-Integer Overflow and Underflow,withdrawVotingRights,L87,DAppSCAN-source/contracts/consensys-TCR/tcr-b206561249ed1779f10aa4ba390ffee676148134/contracts/PLCRVoting.sol,PLCRVoting.sol,uint availableTokens = voteTokenBalance[msg.sender] - getLockedTokens(msg.sender);
SWC-101-Integer Overflow and Underflow,startPoll,L211,DAppSCAN-source/contracts/consensys-TCR/tcr-b206561249ed1779f10aa4ba390ffee676148134/contracts/PLCRVoting.sol,PLCRVoting.sol,// SWC-101-Integer Overflow and Underflow: L211
SWC-101-Integer Overflow and Underflow,hasBeenRevealed,L294 - L298,DAppSCAN-source/contracts/consensys-TCR/tcr-b206561249ed1779f10aa4ba390ffee676148134/contracts/PLCRVoting.sol,PLCRVoting.sol,// SWC-101-Integer Overflow and Underflow: L294 - L298
SWC-101-Integer Overflow and Underflow,apply,L98,DAppSCAN-source/contracts/consensys-TCR/tcr-b206561249ed1779f10aa4ba390ffee676148134/contracts/Registry.sol,Registry.sol,"listing.applicationExpiry = block.timestamp + parameterizer.get(""applyStageLen"");"
SWC-120-Weak Sources of Randomness from Chain Attributes,relayEntry,L452-L494,DAppSCAN-source/contracts/consensys-Thesis_tBTC_and_Keep/keep-core-b76b418f04bc94030d10aff18220d8e560a2ab09/contracts/solidity/contracts/KeepRandomBeaconOperator.sol,KeepRandomBeaconOperator.sol,function relayEntry(bytes memory _groupSignature) public nonReentrant {
SWC-114-Transaction Order Dependence,sponsorProposal,L266-305,DAppSCAN-source/contracts/consensys-The_LAO/moloch-4bc443f4dad60279b47978fc6987bb978d3dfc58/contracts/Moloch.sol,Moloch.sol,function sponsorProposal(uint256 proposalId) public nonReentrant onlyDelegate {
SWC-105-Unprotected Ether Withdrawal,processProposal,L408-413,DAppSCAN-source/contracts/consensys-The_LAO/moloch-4bc443f4dad60279b47978fc6987bb978d3dfc58/contracts/Moloch.sol,Moloch.sol,if (!emergencyProcessing) {
SWC-101-Integer Overflow and Underflow,max,L638-640,DAppSCAN-source/contracts/consensys-The_LAO/moloch-4bc443f4dad60279b47978fc6987bb978d3dfc58/contracts/Moloch.sol,Moloch.sol,"function max(uint256 x, uint256 y) internal pure returns (uint256) {"
SWC-121-Missing Protection against Signature Replay Attacks,_validateWithdrawSignature,L308-330,DAppSCAN-source/contracts/consensys-Umbra_Smart_Contracts/umbra-protocol-fa2e17367d66a85f20c77299ded5942d9ab64fe0/contracts/contracts/Umbra.sol,Umbra.sol,function _validateWithdrawSignature(
SWC-135-Code With No Effects,zDeposit,L44-52,DAppSCAN-source/contracts/consensys-Zer0_zAuction/zAuction-50d3b6ce6d7ee00e7181d5b2a9a2eedcdd3fdb72/contracts/zAuctionAccountant.sol,zAuctionAccountant.sol,function zDeposit(address to) external payable onlyZauction {
SWC-114-Transaction Order Dependence,SetZauction,L60-68,DAppSCAN-source/contracts/consensys-Zer0_zAuction/zAuction-50d3b6ce6d7ee00e7181d5b2a9a2eedcdd3fdb72/contracts/zAuctionAccountant.sol,zAuctionAccountant.sol,function SetZauction(address zauctionaddress) external onlyAdmin{
SWC-114-Transaction Order Dependence,reduceWeight,L124-L132,DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol,DynamicLiquidTokenConverter.sol,// SWC-107-Reentrancy: L125-L130
SWC-107-Reentrancy,reduceWeight,L125-L130,DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol,DynamicLiquidTokenConverter.sol,function reduceWeight(IERC20Token _reserveToken)
SWC-135-Code With No Effects,N/A,L7,DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverterFactory.sol,DynamicLiquidTokenConverterFactory.sol,"import ""../../interfaces/ITypedConverterFactory.sol"";"
SWC-135-Code With No Effects,N/A,L8-11,DAppSCAN-source/contracts/consensys-Zer0_zNS/zNS-b05e503ea1ee87dbe62b1d58426aaa518068e395/contracts/Registrar.sol,Registrar.sol,// SWC-135-Code With No Effects: L8-11
SWC-135-Code With No Effects,addController,L51-67,DAppSCAN-source/contracts/consensys-Zer0_zNS/zNS-b05e503ea1ee87dbe62b1d58426aaa518068e395/contracts/Registrar.sol,Registrar.sol,// SWC-135-Code With No Effects: L51-67
SWC-105-Unprotected Ether Withdrawal,approveDomainBid,L92-101,DAppSCAN-source/contracts/consensys-Zer0_zNS/zNS-b05e503ea1ee87dbe62b1d58426aaa518068e395/contracts/StakingController.sol,StakingController.sol,// SWC-105-Unprotected Ether Withdrawal: L92-101
SWC-122-Lack of Proper Signature Verification,fulfillDomainBid,L121-153,DAppSCAN-source/contracts/consensys-Zer0_zNS/zNS-b05e503ea1ee87dbe62b1d58426aaa518068e395/contracts/StakingController.sol,StakingController.sol,"uint256 royaltyAmount,"
SWC-117-Signature Malleability,fulfillDomainBid,L135,DAppSCAN-source/contracts/consensys-Zer0_zNS/zNS-b05e503ea1ee87dbe62b1d58426aaa518068e395/contracts/StakingController.sol,StakingController.sol,// SWC-117-Signature Malleability: L135
SWC-108-State Variable Default Visibility,N/A,L23,DAppSCAN-source/contracts/Cystack-AOC BEP-20 - v1.3/AOC_BEP0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol,OwnableUpgradeable.sol,address private _owner;
SWC-118-Incorrect Constructor Name,initialize,L115 - L126,DAppSCAN-source/contracts/Cystack-AOC BEP-20 - v1.3/AOC_BEP0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605/contracts/AOC_BEP.sol,AOC_BEP.sol,"_mint(_msgSender(), (1000 * 10**9 * 10**18)); //mint the initial total supply"
SWC-135-Code With No Effects,withdrawBNBFromContract,L362,DAppSCAN-source/contracts/Cystack-AOC BEP-20 - v1.3/AOC_BEP0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605/contracts/AOC_BEP.sol,AOC_BEP.sol,"function withdrawBNBFromContract(address payable recipient, uint256 amount) external onlyOwner payable {"
SWC-105-Unprotected Ether Withdrawal,withdrawBNBFromContract,L362,DAppSCAN-source/contracts/Cystack-AOC BEP-20 - v1.3/AOC_BEP0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605/contracts/AOC_BEP.sol,AOC_BEP.sol,"function withdrawBNBFromContract(address payable recipient, uint256 amount) external onlyOwner payable {"
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Cystack-AOC BEP-20 - v1.3/AOC_BEP0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605/contracts/library/DateTime.sol,DateTime.sol,pragma solidity ^0.8.0;
SWC-118-Incorrect Constructor Name,initialize,L116,DAppSCAN-source/contracts/Cystack-AOC ERC-20 V2 - v1.2/AOC_ERC200x41cc978FaE6f34B25553A498D1e245FDF944FF3E/contracts/AOC_ERC20.sol,AOC_ERC20.sol,ltafPercentage = 60;
SWC-100-Function Default Visibility,withdraw,L138,DAppSCAN-source/contracts/Hacken-A2DAO/vesting-bd6b23f7d4d6052f8eae6c15ec5d9b6ebd82867f/Staking.sol,Staking.sol,"function withdraw(uint256 _pid, uint256 _amount) public override nonReentrant updateReward(_pid, msg.sender) {"
SWC-100-Function Default Visibility,totalStaked,L203,DAppSCAN-source/contracts/Hacken-A2DAO/vesting-bd6b23f7d4d6052f8eae6c15ec5d9b6ebd82867f/Staking.sol,Staking.sol,function totalStaked(uint256 _pid) public view returns (uint256) {
SWC-100-Function Default Visibility,userStaked,L208,DAppSCAN-source/contracts/Hacken-A2DAO/vesting-bd6b23f7d4d6052f8eae6c15ec5d9b6ebd82867f/Staking.sol,Staking.sol,"function userStaked(uint256 _pid, address _user) public view returns (uint256) {"
SWC-100-Function Default Visibility,userRewards,L213,DAppSCAN-source/contracts/Hacken-A2DAO/vesting-bd6b23f7d4d6052f8eae6c15ec5d9b6ebd82867f/Staking.sol,Staking.sol,"function userRewards(uint256 _pid, address _account) public view returns (uint256) {"
SWC-135-Code With No Effects,getOwner,L244 - L246,DAppSCAN-source/contracts/Hacken-Amoss/code/Amoss.sol,Amoss.sol,function getOwner() external override view returns (address){
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol,ArgonFreelancers.sol,pragma solidity ^0.4.24;
SWC-102-Outdated Compiler Version,N/A,L8,DAppSCAN-source/contracts/Hacken-Arkania Protocol/Code-4fe28aed2e2549ba649ed2edb6a11ef7d2ac73fd/Ania.sol,Ania.sol,pragma solidity ^0.8.0;
SWC-103-Floating Pragma,N/A,L8,DAppSCAN-source/contracts/Hacken-Arkania Protocol/Code-4fe28aed2e2549ba649ed2edb6a11ef7d2ac73fd/Ania.sol,Ania.sol,pragma solidity ^0.8.0;
SWC-102-Outdated Compiler Version,N/A,L4,DAppSCAN-source/contracts/Hacken-Arkania Protocol/Code-4fe28aed2e2549ba649ed2edb6a11ef7d2ac73fd/AniaLottery.sol,AniaLottery.sol,pragma solidity ^0.8.2;
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/Hacken-Arkania Protocol/Code-4fe28aed2e2549ba649ed2edb6a11ef7d2ac73fd/AniaLottery.sol,AniaLottery.sol,pragma solidity ^0.8.2;
SWC-105-Unprotected Ether Withdrawal,withdraw,L119 - L121,DAppSCAN-source/contracts/Hacken-Arkania Protocol/Code-4fe28aed2e2549ba649ed2edb6a11ef7d2ac73fd/AniaLottery.sol,AniaLottery.sol,function withdraw() public payable onlyOwner {
SWC-102-Outdated Compiler Version,N/A,L4,DAppSCAN-source/contracts/Hacken-Arkania Protocol/Code-4fe28aed2e2549ba649ed2edb6a11ef7d2ac73fd/AniaStake.sol,AniaStake.sol,pragma solidity ^0.8.2;
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/Hacken-Arkania Protocol/Code-4fe28aed2e2549ba649ed2edb6a11ef7d2ac73fd/AniaStake.sol,AniaStake.sol,pragma solidity ^0.8.2;
SWC-128-DoS With Block Gas Limit,N/A,L185 - L194    ,DAppSCAN-source/contracts/Hacken-Arkania Protocol/Code-4fe28aed2e2549ba649ed2edb6a11ef7d2ac73fd/AniaStake.sol,AniaStake.sol,for (uint256 i = 0; i < users.length; i++) {
SWC-128-DoS With Block Gas Limit,executeAddPools,L189,DAppSCAN-source/contracts/Hacken-Binosaur/binosaur-427e02b518bac3968c917a733bd5ed3b98679ca1/MasterChef.sol,MasterChef.sol,for (uint256 pid = 0; pid < length; ++pid) {
SWC-128-DoS With Block Gas Limit,executeUpdateAllocPoint,L259,DAppSCAN-source/contracts/Hacken-Binosaur/binosaur-427e02b518bac3968c917a733bd5ed3b98679ca1/MasterChef.sol,MasterChef.sol,for (uint256 index = 0; index < length; ++index) {
SWC-128-DoS With Block Gas Limit,end,L393 - L401,DAppSCAN-source/contracts/Hacken-Bitcoin SB-V2/code/BSB_StakingSmartStakers.sol,BSB_StakingSmartStakers.sol,for(uint i = 0; i < holders.length(); i = i.add(1)){
SWC-128-DoS With Block Gas Limit,getRewardsLeft,L416 - L418,DAppSCAN-source/contracts/Hacken-Bitcoin SB-V2/code/BSB_StakingSmartStakers.sol,BSB_StakingSmartStakers.sol,for(uint i = 0; i < holders.length(); i = i.add(1)){
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Hacken-Bolide-V1/contracts-9ca0cf09d7707bcbd942f0000f11059c5fb9c026/farming/contracts/libs/Migrations.sol,Migrations.sol,pragma solidity ^0.8.0;
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Hacken-Bolide-V2/contracts-9ca0cf09d7707bcbd942f0000f11059c5fb9c026/farming/contracts/libs/Migrations.sol,Migrations.sol,pragma solidity ^0.8.0;
SWC-108-State Variable Default Visibility,initialize,L63 - L76,DAppSCAN-source/contracts/Hacken-Bolide-V2/contracts-9ca0cf09d7707bcbd942f0000f11059c5fb9c026/strategies/low_risk/contracts/Storage.sol,Storage.sol,mapping(uint256 => EarnBLID) private earnBLID;
SWC-108-State Variable Default Visibility,N/A,L112,DAppSCAN-source/contracts/Hacken-Bolide-V3/contracts-9ca0cf09d7707bcbd942f0000f11059c5fb9c026/token/contracts/Bolide.sol,Bolide.sol,uint256 timestampCreated;
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Hacken-Bolide-V3/contracts-aaf0ab6601b2cdd45c1064ec5978b05f5a0436aa/farming/contracts/MasterChef.sol,MasterChef.sol,pragma solidity ^0.8.0;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Hacken-Bolide-V3/contracts-aaf0ab6601b2cdd45c1064ec5978b05f5a0436aa/vesting/contracts/TreasuryVester.sol,TreasuryVester.sol,pragma solidity 0.6.12;
SWC-128-DoS With Block Gas Limit,_massUpdatePools,L196-201,DAppSCAN-source/contracts/Hacken-BullRun Finance/contracts-9d9ced16b56f977c17afee231e745c7a9e55c84e/BullMasterchef.sol,BullMasterchef.sol,function _massUpdatePools() private {
SWC-105-Unprotected Ether Withdrawal,setValidators,L99-120,DAppSCAN-source/contracts/Hacken-Centrality/bridge-contracts-047cecbfc86f10cdc3310c6ebb399de2e7c737a3/CENNZnetBridge.sol,CENNZnetBridge.sol,function setValidators(
SWC-100-Function Default Visibility,getLockedAmount,L55,DAppSCAN-source/contracts/Hacken-CGU/CGUToken0x747D74dB20cc422F39ab54EDB2A3Ce21f3C98AF1/contracts/CGUToken.sol,CGUToken.sol,function getLockedAmount(address account) public view returns (uint256) {
SWC-100-Function Default Visibility,transferAndCall,L80,DAppSCAN-source/contracts/Hacken-CGU/CGUToken0x747D74dB20cc422F39ab54EDB2A3Ce21f3C98AF1/contracts/CGUToken.sol,CGUToken.sol,// SWC-100-Function Default Visibility: L80
SWC-116-Block values as a proxy for time,checkLocks,L242,DAppSCAN-source/contracts/Hacken-Chimeras/chim-chain-094d95aaed7adc95fafb60ebad6c64c7588f3cd2/ChimVesting.sol,ChimVesting.sol,afterReleaseTime = block.timestamp.sub(_releaseTime);
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Hacken-Codex on Althash/Codex-Rewards-Platform-d364d0ef9258dd468f8202a352c58724d6b65638/contracts/CDEX_rewards.sol,CDEX_rewards.sol,pragma solidity ^0.4.21;
SWC-104-Unchecked Call Return Value,stake,L362 - L391,DAppSCAN-source/contracts/Hacken-Codex on Althash/Codex-Rewards-Platform-d364d0ef9258dd468f8202a352c58724d6b65638/contracts/CDEX_rewards.sol,CDEX_rewards.sol,/// @param amount The amount of tokens to be staked by the user.
SWC-104-Unchecked Call Return Value,withdraw,L395 - L420,DAppSCAN-source/contracts/Hacken-Codex on Althash/Codex-Rewards-Platform-d364d0ef9258dd468f8202a352c58724d6b65638/contracts/CDEX_rewards.sol,CDEX_rewards.sol,/// @param amount The amount of tokens to be withdrawn.
SWC-104-Unchecked Call Return Value,withdraw,L418,DAppSCAN-source/contracts/Hacken-Codex on Althash/Codex-Rewards-Platform-d364d0ef9258dd468f8202a352c58724d6b65638/contracts/CDEX_rewards.sol,CDEX_rewards.sol,"CDEXToken.transfer(msg.sender, amount);"
SWC-104-Unchecked Call Return Value,getReward,L424 - L456,DAppSCAN-source/contracts/Hacken-Codex on Althash/Codex-Rewards-Platform-d364d0ef9258dd468f8202a352c58724d6b65638/contracts/CDEX_rewards.sol,CDEX_rewards.sol,// SWC-104-Unchecked Call Return Value: L424 - L456
SWC-104-Unchecked Call Return Value,depositTokens,L486 - L498,DAppSCAN-source/contracts/Hacken-Codex on Althash/Codex-Rewards-Platform-d364d0ef9258dd468f8202a352c58724d6b65638/contracts/CDEX_rewards.sol,CDEX_rewards.sol,///        is in the integer format (without the 8 zeroes).
SWC-135-Code With No Effects,Recovered,L615,DAppSCAN-source/contracts/Hacken-Codex on Althash/Codex-Rewards-Platform-d364d0ef9258dd468f8202a352c58724d6b65638/contracts/CDEX_rewards.sol,CDEX_rewards.sol,"event Recovered(address token, uint256 amount);"
SWC-128-DoS With Block Gas Limit,whitelistAddresses,L1795,DAppSCAN-source/contracts/Hacken-Constellation Network/LatticeStakingPool0x74299A718b2c44483a27325d7725F0B2646DE3B1/LatticeStakingPool0x74299A718b2c44483a27325d7725F0B2646DE3B1.sol,LatticeStakingPool0x74299A718b2c44483a27325d7725F0B2646DE3B1.sol,for (uint i=0; i < _newAddressesToWhitelist.length; i++) {
SWC-100-Function Default Visibility,notifyRewardAmounts,L52,DAppSCAN-source/contracts/Hacken-Crodex/contracts-33725cd8d7aa018022a54aaa0e7fa29a89a4c2a4/staking/StakingRewardsFactory.sol,StakingRewardsFactory.sol,function notifyRewardAmounts() public {
SWC-135-Code With No Effects,N/A,L7,DAppSCAN-source/contracts/Hacken-Deflyball-V2/code/Token.sol,Token.sol,import '@openzeppelin/contracts/security/Pausable.sol';
SWC-103-Floating Pragma,N/A,L7,DAppSCAN-source/contracts/Hacken-DeHealth HLT Network/code/DeHealthToken.sol,DeHealthToken.sol,pragma solidity ^0.8.0;
SWC-103-Floating Pragma,N/A,L7,DAppSCAN-source/contracts/Hacken-DeHealth HLT Network/code/DProxy.sol,DProxy.sol,pragma solidity ^0.8.6;
SWC-103-Floating Pragma,N/A,L1,DAppSCAN-source/contracts/Hacken-Diamond Back/DiamondBack-contract-025f40496c88a1c7dda9c3bf294761397c9925d1/MyToken.sol,MyToken.sol,pragma solidity ^0.8.2;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Hacken-Edain Technologies AG/edain-smartcontracts-9f0c4a5ffb97f23c7b5462420ad1f663301f69ba/contracts/EDAINStaking.sol,EDAINStaking.sol,pragma solidity ^0.8.2;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Hacken-Edain Technologies AG/edain-smartcontracts-9f0c4a5ffb97f23c7b5462420ad1f663301f69ba/contracts/EDAINToken.sol,EDAINToken.sol,pragma solidity ^0.8.2;
SWC-131-Presence of unused variables,allowedTxTypes,L184,DAppSCAN-source/contracts/Hacken-Etherlite/pos-contracts-e56317bd80a0368a1d9106361c188b589a419b94/contracts/TxPermission.sol,TxPermission.sol,"uint256 _value, // SWC-131-Presence of unused variables: L184"
SWC-131-Presence of unused variables,isInitialized,L313-L314,DAppSCAN-source/contracts/Hacken-Etherlite/pos-contracts-e56317bd80a0368a1d9106361c188b589a419b94/contracts/TxPermission.sol,TxPermission.sol,uint32 internal constant CREATE = 0x04;
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Hacken-Fidometa-V1/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,pragma solidity 0.8.11;
SWC-119-Shadowing State Variables,_approve,L512 - L521,DAppSCAN-source/contracts/Hacken-Fidometa-V1/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,function _approve(
SWC-135-Code With No Effects,setCharges,L555 - L587,DAppSCAN-source/contracts/Hacken-Fidometa-V1/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,function setCharges(
SWC-128-DoS With Block Gas Limit,_getCurrentSupply,L775 - L782,DAppSCAN-source/contracts/Hacken-Fidometa-V1/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,for (uint256 i = 0; i < cacheLength; i++) {
SWC-135-Code With No Effects,takeCharges,L788 - L832,DAppSCAN-source/contracts/Hacken-Fidometa-V1/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,* @dev take charges as per percentage
SWC-135-Code With No Effects,_tokenTransfer,L978 - L980,DAppSCAN-source/contracts/Hacken-Fidometa-V1/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,} else {
SWC-101-Integer Overflow and Underflow,unlock,L1009-L1010,DAppSCAN-source/contracts/Hacken-Fidometa-V1/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,uint256 timePassed = block.timestamp -
SWC-135-Code With No Effects,transferWithLock,L1043 - L1046,DAppSCAN-source/contracts/Hacken-Fidometa-V1/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,require(
SWC-135-Code With No Effects,_transferFromExcluded,L1060 - L1070,DAppSCAN-source/contracts/Hacken-Fidometa-V1/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Hacken-Fidometa-V2/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,pragma solidity 0.8.11;
SWC-119-Shadowing State Variables,_approve,L513 - L515,DAppSCAN-source/contracts/Hacken-Fidometa-V2/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,"address owner,"
SWC-135-Code With No Effects,setCharges,L555 - L587,DAppSCAN-source/contracts/Hacken-Fidometa-V2/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,function setCharges(
SWC-128-DoS With Block Gas Limit,_getCurrentSupply,L775 - L782,DAppSCAN-source/contracts/Hacken-Fidometa-V2/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,for (uint256 i = 0; i < cacheLength; i++) {
SWC-135-Code With No Effects,takeCharges,L789 - L832,DAppSCAN-source/contracts/Hacken-Fidometa-V2/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,*/
SWC-135-Code With No Effects,_tokenTransfer,L978 - L980,DAppSCAN-source/contracts/Hacken-Fidometa-V2/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,} else {
SWC-101-Integer Overflow and Underflow,unlock,L1009 - L1010,DAppSCAN-source/contracts/Hacken-Fidometa-V2/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,uint256 timePassed = block.timestamp -
SWC-135-Code With No Effects,transferWithLock,L1047 - L1050,DAppSCAN-source/contracts/Hacken-Fidometa-V2/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,require(
SWC-135-Code With No Effects,_transferFromExcluded,L1062 - L1071,DAppSCAN-source/contracts/Hacken-Fidometa-V2/Smart_Contract-66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol,FidoMeta.sol,function _transferFromExcluded(
SWC-135-Code With No Effects,constructor,L55,DAppSCAN-source/contracts/Hacken-FoilNetwork/tge-seed-round-smart-contract-D3522A4628CE735058E57852AB1425600D296FC8/Lockup.sol,Lockup.sol,"require(_foilWallet != address(0), ""The wallet address can not zero."");"
SWC-100-Function Default Visibility,setAdmin,L85,DAppSCAN-source/contracts/Hacken-Forbitspace/forbitspaceX-bep20-19fc2b037b743e9f795709c72f004efe1109aaaf/contracts/libraries/Payment.sol,Payment.sol,function setAdmin(address newAdmin) public override onlyOwner {
SWC-135-Code With No Effects,_msgData,L25 - L27,DAppSCAN-source/contracts/Hacken-Galeon/code/code.sol,code.sol,function _msgData() internal view virtual returns (bytes calldata) {
SWC-128-DoS With Block Gas Limit,tokenOfOwnerByIndex,L102 - L125,DAppSCAN-source/contracts/Hacken-Game of Silks/code/ERC721A.sol,ERC721A.sol,"function tokenOfOwnerByIndex(address owner, uint256 index)"
SWC-135-Code With No Effects,_numberMinted,L153 - L159,DAppSCAN-source/contracts/Hacken-Game of Silks/code/ERC721A.sol,ERC721A.sol,function _numberMinted(address owner) internal view returns (uint256) {
SWC-135-Code With No Effects,_setOwnersExplicit,L457 - L476,DAppSCAN-source/contracts/Hacken-Game of Silks/code/ERC721A.sol,ERC721A.sol,function _setOwnersExplicit(uint256 quantity) internal {
SWC-100-Function Default Visibility,claim,L202 - L205,DAppSCAN-source/contracts/Hacken-GOGOcoin/gogo-contracts-0204c6d60f7aaa5c195573fbd0e8388c9bc4a2ef/contracts/gov/GovStaking.sol,GovStaking.sol,function claim() public nonReentrant whenNotPaused {
SWC-100-Function Default Visibility,claimAll,L208 - L212,DAppSCAN-source/contracts/Hacken-GOGOcoin/gogo-contracts-0204c6d60f7aaa5c195573fbd0e8388c9bc4a2ef/contracts/gov/GovStaking.sol,GovStaking.sol,function claimAll() public nonReentrant whenNotPaused {
SWC-100-Function Default Visibility,earned,L288 - l299,DAppSCAN-source/contracts/Hacken-GOGOcoin/gogo-contracts-0204c6d60f7aaa5c195573fbd0e8388c9bc4a2ef/contracts/gov/GovStaking.sol,GovStaking.sol,function earned() public view returns (uint256) {
SWC-135-Code With No Effects,N/A,L7,DAppSCAN-source/contracts/Hacken-GOGOcoin/gogo-contracts-0204c6d60f7aaa5c195573fbd0e8388c9bc4a2ef/contracts/gov/GovStakingStorage.sol,GovStakingStorage.sol,"import ""hardhat/console.sol"";"
SWC-120-Weak Sources of Randomness from Chain Attributes,AttemptToDistrubuteBonusPools,L96,DAppSCAN-source/contracts/Hacken-Green House/GHS-af12003ab8ff8b614e0e49cfd688f7e41df21ed0/contracts/GreenHouse.sol,GreenHouse.sol,_bonusPoolLastDistributedAt = block.timestamp;
SWC-120-Weak Sources of Randomness from Chain Attributes,AttemptToDistrubuteBonusPools,L98,DAppSCAN-source/contracts/Hacken-Green House/GHS-af12003ab8ff8b614e0e49cfd688f7e41df21ed0/contracts/GreenHouse.sol,GreenHouse.sol,_monthlyPoolLastDistributedAt = block.timestamp;
SWC-120-Weak Sources of Randomness from Chain Attributes,bonusRewardPoolCountdown,L209,DAppSCAN-source/contracts/Hacken-Green House/GHS-af12003ab8ff8b614e0e49cfd688f7e41df21ed0/contracts/GreenHouse.sol,GreenHouse.sol,uint256 timeSinceLastDistributed = block.timestamp - _bonusPoolLastDistributedAt;
SWC-120-Weak Sources of Randomness from Chain Attributes,monthlyRewardPoolCountdown,L216,DAppSCAN-source/contracts/Hacken-Green House/GHS-af12003ab8ff8b614e0e49cfd688f7e41df21ed0/contracts/GreenHouse.sol,GreenHouse.sol,uint256 timeSinceLastDistributed = block.timestamp - _monthlyPoolLastDistributedAt;
SWC-120-Weak Sources of Randomness from Chain Attributes,_maybeDistributeMonthlyRewardPool,L386,DAppSCAN-source/contracts/Hacken-Green House/GHS-af12003ab8ff8b614e0e49cfd688f7e41df21ed0/contracts/GreenHouse.sol,GreenHouse.sol,monthlyRewardPool -= amountToDistribute;
SWC-120-Weak Sources of Randomness from Chain Attributes,_maybeDistributeBonusRewardPool,L400,DAppSCAN-source/contracts/Hacken-Green House/GHS-af12003ab8ff8b614e0e49cfd688f7e41df21ed0/contracts/GreenHouse.sol,GreenHouse.sol,_bonusPoolLastDistributedAt = block.timestamp;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Hacken-Ground Zero/code/IDO.sol,IDO.sol,pragma solidity ^0.8.4;
SWC-135-Code With No Effects,N/A,L12 - L13,DAppSCAN-source/contracts/Hacken-Ground Zero/code/IDO.sol,IDO.sol,"import ""@openzeppelin/contracts/token/ERC1155/presets/ERC1155PresetMinterPauser.sol"";"
SWC-105-Unprotected Ether Withdrawal,claim,L86 - L110,DAppSCAN-source/contracts/Hacken-Ground Zero/code/IDO.sol,IDO.sol,function claim() external {
SWC-107-Reentrancy,claim,L86 - L110,DAppSCAN-source/contracts/Hacken-Ground Zero/code/IDO.sol,IDO.sol,function claim() external {
SWC-104-Unchecked Call Return Value,claim,L97,DAppSCAN-source/contracts/Hacken-Ground Zero/code/IDO.sol,IDO.sol,((pool[msg.sender].amountToClaim - pool[msg.sender].claimedAmount) >= allowedAmountToClaim)
SWC-105-Unprotected Ether Withdrawal,claimTheInvestments,L149 - L154,DAppSCAN-source/contracts/Hacken-Ground Zero/code/IDO.sol,IDO.sol,"function claimTheInvestments(IERC20 token, uint256 amount) external onlyOwner {"
SWC-104-Unchecked Call Return Value,claimTheInvestments,L153,DAppSCAN-source/contracts/Hacken-Ground Zero/code/IDO.sol,IDO.sol,"token.transfer(msg.sender, amount);"
SWC-100-Function Default Visibility,sortTokens,L49-53,DAppSCAN-source/contracts/Hacken-Hedgey Finance-V1/treasury_pools_core-7eb9dc8de364a1ab3b53ba0ad3194f380c03e94b/HedgeyAnySwap.sol,HedgeyAnySwap.sol,"function sortTokens(address tokenA, address tokenB) internal view returns (address token0, address token1) {"
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Hacken-Hedgey Finance-V3/NFT_OTC_Core-b43c40d0a44e72d96a2d68dec1bcab7748571807/CeloFuturesNFT.sol,CeloFuturesNFT.sol,pragma solidity 0.8.7;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Hacken-Hedgey Finance-V3/NFT_OTC_Core-b43c40d0a44e72d96a2d68dec1bcab7748571807/CeloHedgeyOTC.sol,CeloHedgeyOTC.sol,pragma solidity 0.8.7;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Hacken-Hedgey Finance-V3/NFT_OTC_Core-b43c40d0a44e72d96a2d68dec1bcab7748571807/FuturesNFT.sol,FuturesNFT.sol,pragma solidity 0.8.7;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Hacken-Hedgey Finance-V3/NFT_OTC_Core-b43c40d0a44e72d96a2d68dec1bcab7748571807/HedgeyOTC.sol,HedgeyOTC.sol,pragma solidity 0.8.7;
SWC-128-DoS With Block Gas Limit,distributeRewards,L32-34,DAppSCAN-source/contracts/Hacken-Hyksos/hyksos-contracts-audit/HyksosBase.sol,HyksosBase.sol,"function distributeRewards(uint256 _id, uint256 _reward, uint256 _nftWorkValue) internal {"
SWC-104-Unchecked Call Return Value,payErc20,L35-37,DAppSCAN-source/contracts/Hacken-Hyksos/hyksos-contracts-audit/HyksosCyberkongz.sol,HyksosCyberkongz.sol,"function payErc20(address _receiver, uint256 _amount) internal override {"
SWC-104-Unchecked Call Return Value,depositErc20,L39-46,DAppSCAN-source/contracts/Hacken-Hyksos/hyksos-contracts-audit/HyksosCyberkongz.sol,HyksosCyberkongz.sol,function depositErc20(uint256 _amount) external override {
SWC-104-Unchecked Call Return Value,withdrawErc20,L48-54,DAppSCAN-source/contracts/Hacken-Hyksos/hyksos-contracts-audit/HyksosCyberkongz.sol,HyksosCyberkongz.sol,function withdrawErc20(uint256 _amount) external override {
SWC-100-Function Default Visibility,setSignerPublicKey,L42,DAppSCAN-source/contracts/Hacken-Kingdom Raids/kr-nft-6dafe413dd90e5b1c1e85a5b8ec6c8fc71fd87af/kr-nft-6dafe413dd90e5b1c1e85a5b8ec6c8fc71fd87af/contracts/Summon.sol,Summon.sol,function setSignerPublicKey(address newSignerPublicKey) public onlyOwner {
SWC-100-Function Default Visibility,setAcceptedToken,L53,DAppSCAN-source/contracts/Hacken-Kingdom Raids/kr-nft-6dafe413dd90e5b1c1e85a5b8ec6c8fc71fd87af/kr-nft-6dafe413dd90e5b1c1e85a5b8ec6c8fc71fd87af/contracts/Summon.sol,Summon.sol,function setAcceptedToken(address newAcceptedTokenAddress)
SWC-100-Function Default Visibility,setHeroSmartContractAddress,L67,DAppSCAN-source/contracts/Hacken-Kingdom Raids/kr-nft-6dafe413dd90e5b1c1e85a5b8ec6c8fc71fd87af/kr-nft-6dafe413dd90e5b1c1e85a5b8ec6c8fc71fd87af/contracts/Summon.sol,Summon.sol,public
SWC-100-Function Default Visibility,setFee,L79,DAppSCAN-source/contracts/Hacken-Kingdom Raids/kr-nft-6dafe413dd90e5b1c1e85a5b8ec6c8fc71fd87af/kr-nft-6dafe413dd90e5b1c1e85a5b8ec6c8fc71fd87af/contracts/Summon.sol,Summon.sol,function setFee(uint256 newFee) public onlyOwner {
SWC-100-Function Default Visibility,setSupplyLimit,L42,DAppSCAN-source/contracts/Hacken-Kingdom Raids/kr-nft-6dafe413dd90e5b1c1e85a5b8ec6c8fc71fd87af/kr-nft-6dafe413dd90e5b1c1e85a5b8ec6c8fc71fd87af/contracts/Hero/Hero.sol,Hero.sol,function setSupplyLimit(uint256 _newLimit) public onlyOwner {
SWC-126-Insufficient Gas Griefing,handleProposalCancellation,L66-79,DAppSCAN-source/contracts/Hacken-Kyber Network-V1/dao_sc-616906abeed505f8d29186e147eb6736a914f49a/EpochVotingPowerStrategy.sol,EpochVotingPowerStrategy.sol,function handleProposalCancellation(uint256 proposalId) external override onlyGovernance {
SWC-128-DoS With Block Gas Limit,handleWithdrawal,L100-112,DAppSCAN-source/contracts/Hacken-Kyber Network-V1/dao_sc-616906abeed505f8d29186e147eb6736a914f49a/EpochVotingPowerStrategy.sol,EpochVotingPowerStrategy.sol,//  SWC-128-DoS With Block Gas Limit: L100-112
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Hacken-Kyte.One/kyte-core-contracts-d5685ad1298cafe91bed5d96f34496ec93c50b3c/TokenVesting.sol,TokenVesting.sol,pragma solidity ^0.8.0;
SWC-128-DoS With Block Gas Limit,getAllVestingScheduleForHolder,L286-302,DAppSCAN-source/contracts/Hacken-Kyte.One/kyte-core-contracts-d5685ad1298cafe91bed5d96f34496ec93c50b3c/TokenVesting.sol,TokenVesting.sol,function getAllVestingScheduleForHolder(address holder)
SWC-105-Unprotected Ether Withdrawal,burn,L131-140,DAppSCAN-source/contracts/Hacken-LunaFi/lunafi-smart-contracts-6ff9a601e9bc72326b8e89f69daaa3105ed6afb0/claimToken.sol,claimToken.sol,function burn( uint256 tokens) external  {
SWC-105-Unprotected Ether Withdrawal,mint,L144-156,DAppSCAN-source/contracts/Hacken-LunaFi/lunafi-smart-contracts-6ff9a601e9bc72326b8e89f69daaa3105ed6afb0/claimToken.sol,claimToken.sol,"function mint(address account, uint256 tokens) external onlyAdmin {"
SWC-108-State Variable Default Visibility,N/A,L21,DAppSCAN-source/contracts/Hacken-Mafagafo/mafa-contracts-14914a188ec2f9df7e8da8864c7cbfbec351eb47/contracts/Mafacoin.sol,Mafacoin.sol,address deadAddress = 0x000000000000000000000000000000000000dEaD;
SWC-108-State Variable Default Visibility,N/A,L40,DAppSCAN-source/contracts/Hacken-Mafagafo/mafa-contracts-14914a188ec2f9df7e8da8864c7cbfbec351eb47/contracts/Mafacoin.sol,Mafacoin.sol,mapping(address => bool) isBlacklisted;
SWC-116-Block values as a proxy for time,_canExecuteOrder,L86,DAppSCAN-source/contracts/Hacken-Mate/mate-contracts-8d013762e0373e2bb3d0e0c4fc606b9bd4daacbe/MateCore.sol,MateCore.sol,"if (block.timestamp > order.expiration) return (false, ""Expired order"");"
SWC-116-Block values as a proxy for time,_executeOrder,L166,DAppSCAN-source/contracts/Hacken-Mate/mate-contracts-8d013762e0373e2bb3d0e0c4fc606b9bd4daacbe/MateCore.sol,MateCore.sol,"require(block.timestamp <= order.expiration, ""Expired order"");"
SWC-116-Block values as a proxy for time,_executeOrder,L225,DAppSCAN-source/contracts/Hacken-Mate/mate-contracts-8d013762e0373e2bb3d0e0c4fc606b9bd4daacbe/MateCore.sol,MateCore.sol,block.timestamp
SWC-116-Block values as a proxy for time,placeOrder,L76,DAppSCAN-source/contracts/Hacken-Mate/mate-contracts-8d013762e0373e2bb3d0e0c4fc606b9bd4daacbe/OrderBook.sol,OrderBook.sol,"require(_expiration > block.timestamp, ""Invalid expiration timestamp""); // SWC-116-Block values as a proxy for time:L76"
SWC-116-Block values as a proxy for time,placeOrder,L105,DAppSCAN-source/contracts/Hacken-Mate/mate-contracts-8d013762e0373e2bb3d0e0c4fc606b9bd4daacbe/OrderBook.sol,OrderBook.sol,order.createdAt = block.timestamp; // SWC-116-Block values as a proxy for time:L105
SWC-116-Block values as a proxy for time,cancelExpiredOrders,L145,DAppSCAN-source/contracts/Hacken-Mate/mate-contracts-8d013762e0373e2bb3d0e0c4fc606b9bd4daacbe/OrderBook.sol,OrderBook.sol,if (order.expiration <= block.timestamp) {
SWC-116-Block values as a proxy for time,_swap,L38,DAppSCAN-source/contracts/Hacken-Mate/mate-contracts-8d013762e0373e2bb3d0e0c4fc606b9bd4daacbe/UniswapHandler.sol,UniswapHandler.sol,block.timestamp + 120
SWC-128-DoS With Block Gas Limit,createMultipleVesting,L322 - L329,DAppSCAN-source/contracts/Hacken-MetagamZ/MetagamZ-bbcc0341d584ddbfe46d0e9e5ae957a100158b6b/Vesting/Vesting.sol,Vesting.sol,for (uint256 i = 0; i < _receivers.length; i++) {
SWC-113-DoS with Failed Call,createMultipleVesting,L322 - L329,DAppSCAN-source/contracts/Hacken-MetagamZ/MetagamZ-bbcc0341d584ddbfe46d0e9e5ae957a100158b6b/Vesting/Vesting.sol,Vesting.sol,for (uint256 i = 0; i < _receivers.length; i++) {
SWC-128-DoS With Block Gas Limit,massUpdatePools,L1499,DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol,MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol,for (uint256 pid = 0; pid < length; ++pid) {
SWC-108-State Variable Default Visibility,N/A,L40-44,DAppSCAN-source/contracts/Hacken-Nasdex/NasDex-b575cab1663d4f5689c4650c42abb0d67adf879d/MasterChef.sol,MasterChef.sol,// The NSDX TOKEN!
SWC-101-Integer Overflow and Underflow,_swapsCall_internal,L156-178,DAppSCAN-source/contracts/Hacken-Nimbus-V2/nim-smartcontract-12a41a194f39670637d79ef2c5bcc6a70d617781/SwapsUser.sol,SwapsUser.sol,function _swapsCall_internal(
SWC-100-Function Default Visibility,renounceOwnership,L206 - L212,DAppSCAN-source/contracts/Hacken-Oracula/Oracula0x85f3ec4EC49aB6a5901278176235957ef521970d/Oracula0x85f3ec4EC49aB6a5901278176235957ef521970d.sol,Oracula0x85f3ec4EC49aB6a5901278176235957ef521970d.sol,function renounceOwnership() public virtual onlyOwner {
SWC-100-Function Default Visibility,transferOwnership,L219 - L227,DAppSCAN-source/contracts/Hacken-Oracula/Oracula0x85f3ec4EC49aB6a5901278176235957ef521970d/Oracula0x85f3ec4EC49aB6a5901278176235957ef521970d.sol,Oracula0x85f3ec4EC49aB6a5901278176235957ef521970d.sol,function transferOwnership(address newOwner) public virtual onlyOwner {
SWC-108-State Variable Default Visibility,N/A,L860 - L884,DAppSCAN-source/contracts/Hacken-Oracula/Oracula0x85f3ec4EC49aB6a5901278176235957ef521970d/Oracula0x85f3ec4EC49aB6a5901278176235957ef521970d.sol,Oracula0x85f3ec4EC49aB6a5901278176235957ef521970d.sol,
SWC-100-Function Default Visibility,buildBalanceActions,L96,DAppSCAN-source/contracts/Hacken-Overnight/ovnstable-core-e76b55af45a5125a99c4d32da8702123d0662ea7/contracts/Balancer.sol,Balancer.sol,function buildBalanceActions() public returns (IActionBuilder.ExchangeAction[] memory) {
SWC-100-Function Default Visibility,buildBalanceActions,L102,DAppSCAN-source/contracts/Hacken-Overnight/ovnstable-core-e76b55af45a5125a99c4d32da8702123d0662ea7/contracts/Balancer.sol,Balancer.sol,"function buildBalanceActions(IERC20 withdrawToken, uint256 withdrawAmount)"
SWC-126-Insufficient Gas Griefing,swapETHForExactTokens,L351-389,DAppSCAN-source/contracts/Hacken-Pera Finance/peraplatform-main/TradeFarming.sol,TradeFarming.sol,function swapETHForExactTokens(
SWC-128-DoS With Block Gas Limit,massUpdatePools,L185,DAppSCAN-source/contracts/Hacken-PolkaBridge/PolkaBridge-DEX-21b662c48caf08242bfa01621bbbafc957e4ff31/farming/Contracts/PolkaBridgeFarm.sol,PolkaBridgeFarm.sol,for (uint256 pid = 0; pid < length; ++pid) {
SWC-107-Reentrancy,claimReward,L269-293,DAppSCAN-source/contracts/Hacken-Powerbomb-V1/powerbomb-lite-0f86ff1eecdd723be733a9b33ff4ffa3bbdadcee/hardhat/contracts/PowerBombAvaxCurve.sol,PowerBombAvaxCurve.sol,function claimReward(address account) public virtual {
SWC-131-Presence of unused variables,N/A,uint public ibRewardTokenBaseAmt; // SWC-131-Presence of unused variables,DAppSCAN-source/contracts/Hacken-Powerbomb-V1/powerbomb-lite-0f86ff1eecdd723be733a9b33ff4ffa3bbdadcee/hardhat/contracts/PowerBombOneCurve.sol,PowerBombOneCurve.sol,N/A
SWC-135-Code With No Effects,_harvest,L126,DAppSCAN-source/contracts/Hacken-Powerbomb-V1/powerbomb-lite-de68879c3326452fa3fb8a87fdac3e91965f541c/hardhat/contracts/PowerBombFtmCurveGeist.sol,PowerBombFtmCurveGeist.sol,isDeposit; // To silence warning
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Hacken-QANplatform/qanx-token-ebf0352af6ccb8d991827a0fba3ac5cfe9ca6b70/QANX.sol,QANX.sol,pragma solidity ^0.8.0;
SWC-135-Code With No Effects,N/A,L10,DAppSCAN-source/contracts/Hacken-RedFox-V4/eth-bridge-contract-12b635b1a4425ee3cecd642b37423ddfadf8087b/ETHWAXBRIDGE.sol,ETHWAXBRIDGE.sol,"import ""./interfaces/ERC20Interface.sol"";"
SWC-135-Code With No Effects,N/A,"import ""./interfaces/ERC20Interface.sol""; // SWC-135-Code With No Effects",DAppSCAN-source/contracts/Hacken-RedFox-V5/eth-bridge-contract-f0486c5e158bd29bc6280bc3844f7d689d4b7b19/contracts/ETHWAXBRIDGE.sol,ETHWAXBRIDGE.sol,N/A
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Hacken-RedFox-V6/nft-factory-6a2464ffd5ef95cae612a05c36885b4814fffe34/RFOXFactoryStandard.sol,RFOXFactoryStandard.sol,pragma solidity ^0.8.0;
SWC-116-Block values as a proxy for time,startStaking,L58-L60,DAppSCAN-source/contracts/Hacken-Retreeb/staking-platform-de6c61f7559d9405ff6a764e8c0becdae8630ff7/StakingPlatform.sol,StakingPlatform.sol,// SWC-116-Block values as a proxy for time:L58-L60
SWC-116-Block values as a proxy for time,deposit,L72,DAppSCAN-source/contracts/Hacken-Retreeb/staking-platform-de6c61f7559d9405ff6a764e8c0becdae8630ff7/StakingPlatform.sol,StakingPlatform.sol,"endPeriod == 0 || endPeriod > block.timestamp,"
SWC-116-Block values as a proxy for time,deposit,L82,DAppSCAN-source/contracts/Hacken-Retreeb/staking-platform-de6c61f7559d9405ff6a764e8c0becdae8630ff7/StakingPlatform.sol,StakingPlatform.sol,userStartTime[_msgSender()] = block.timestamp;
SWC-116-Block values as a proxy for time,withdraw,L99,DAppSCAN-source/contracts/Hacken-Retreeb/staking-platform-de6c61f7559d9405ff6a764e8c0becdae8630ff7/StakingPlatform.sol,StakingPlatform.sol,"block.timestamp >= lockupPeriod,"
SWC-116-Block values as a proxy for time,withdrawResidualBalance,L125,DAppSCAN-source/contracts/Hacken-Retreeb/staking-platform-de6c61f7559d9405ff6a764e8c0becdae8630ff7/StakingPlatform.sol,StakingPlatform.sol,"block.timestamp >= endPeriod + (365 * 1 days),"
SWC-116-Block values as a proxy for time,_percentageTimeRemaining,L214,DAppSCAN-source/contracts/Hacken-Retreeb/staking-platform-de6c61f7559d9405ff6a764e8c0becdae8630ff7/StakingPlatform.sol,StakingPlatform.sol,if (endPeriod > block.timestamp) { // SWC-116-Block values as a proxy for time : L214
SWC-116-Block values as a proxy for time,_percentageTimeRemaining,L216-L217,DAppSCAN-source/contracts/Hacken-Retreeb/staking-platform-de6c61f7559d9405ff6a764e8c0becdae8630ff7/StakingPlatform.sol,StakingPlatform.sol,uint timeRemaining = stakingDuration - // SWC-116-Block values as a proxy for time : L216-L217
SWC-116-Block values as a proxy for time,_updateRewards,L250-L252,DAppSCAN-source/contracts/Hacken-Retreeb/staking-platform-de6c61f7559d9405ff6a764e8c0becdae8630ff7/StakingPlatform.sol,StakingPlatform.sol,userStartTime[_msgSender()] = (block.timestamp >= endPeriod) // SWC-116-Block values as a proxy for time : L250-L252
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Hacken-RichQUACK/code/Staking.sol,Staking.sol,pragma solidity 0.8.11;
SWC-135-Code With No Effects,N/A,L27,DAppSCAN-source/contracts/Hacken-RichQUACK/code/Staking.sol,Staking.sol,// SWC-135-Code With No Effects: L27
SWC-116-Block values as a proxy for time,startPool,L125,DAppSCAN-source/contracts/Hacken-RichQUACK/code/Staking.sol,Staking.sol,poolStartTime = block.timestamp;
SWC-116-Block values as a proxy for time,endPool,L134,DAppSCAN-source/contracts/Hacken-RichQUACK/code/Staking.sol,Staking.sol,poolEndTime = block.timestamp;
SWC-116-Block values as a proxy for time,deposit,L176,DAppSCAN-source/contracts/Hacken-RichQUACK/code/Staking.sol,Staking.sol,stake.enteredAt[lockUp] = block.timestamp;
SWC-116-Block values as a proxy for time,N/A,L77,DAppSCAN-source/contracts/Hacken-Samurai Legends/contract_samurai-legends-tokens-aff9f451dffc6854f29375ac21f8cedba8ee1101/contracts/SamuraiLegendsStaking.sol,SamuraiLegendsStaking.sol,uint32 private _rewardUpdatedAt = uint32(block.timestamp);
SWC-116-Block values as a proxy for time,lastTimeRewardActiveAt,L156,DAppSCAN-source/contracts/Hacken-Samurai Legends/contract_samurai-legends-tokens-aff9f451dffc6854f29375ac21f8cedba8ee1101/contracts/SamuraiLegendsStaking.sol,SamuraiLegendsStaking.sol,return rewardFinishedAt > block.timestamp ? block.timestamp : rewardFinishedAt;
SWC-116-Block values as a proxy for time,createPending,L251,DAppSCAN-source/contracts/Hacken-Samurai Legends/contract_samurai-legends-tokens-aff9f451dffc6854f29375ac21f8cedba8ee1101/contracts/SamuraiLegendsStaking.sol,SamuraiLegendsStaking.sol,"createdAt: uint32(block.timestamp),"
SWC-116-Block values as a proxy for time,getClaimablePendingPortion,L333,DAppSCAN-source/contracts/Hacken-Samurai Legends/contract_samurai-legends-tokens-aff9f451dffc6854f29375ac21f8cedba8ee1101/contracts/SamuraiLegendsStaking.sol,SamuraiLegendsStaking.sol,return (block.timestamp - pendingAmount.createdAt) / pendingAmount.pendingPeriod.period; // 0 1 2 3 4
SWC-116-Block values as a proxy for time,addReward,L408,DAppSCAN-source/contracts/Hacken-Samurai Legends/contract_samurai-legends-tokens-aff9f451dffc6854f29375ac21f8cedba8ee1101/contracts/SamuraiLegendsStaking.sol,SamuraiLegendsStaking.sol,if (block.timestamp > rewardFinishedAt) { // Reward duration finished
SWC-102-Outdated Compiler Version,N/A,L14,DAppSCAN-source/contracts/Hacken-Seedefi Fund/code/InitializableERC20.sol,InitializableERC20.sol,pragma solidity 0.6.9;
SWC-100-Function Default Visibility,init,L97,DAppSCAN-source/contracts/Hacken-Seedefi Fund/code/InitializableERC20.sol,InitializableERC20.sol,) public {
SWC-100-Function Default Visibility,transfer,L109,DAppSCAN-source/contracts/Hacken-Seedefi Fund/code/InitializableERC20.sol,InitializableERC20.sol,"function transfer(address to, uint256 amount) public returns (bool) {"
SWC-100-Function Default Visibility,balanceOf,L120,DAppSCAN-source/contracts/Hacken-Seedefi Fund/code/InitializableERC20.sol,InitializableERC20.sol,function balanceOf(address owner) public view returns (uint256 balance) {
SWC-100-Function Default Visibility,transferFrom,L125,DAppSCAN-source/contracts/Hacken-Seedefi Fund/code/InitializableERC20.sol,InitializableERC20.sol,function transferFrom(
SWC-100-Function Default Visibility,approve,L142,DAppSCAN-source/contracts/Hacken-Seedefi Fund/code/InitializableERC20.sol,InitializableERC20.sol,"function approve(address spender, uint256 amount) public returns (bool) {"
SWC-100-Function Default Visibility,allowance,L149,DAppSCAN-source/contracts/Hacken-Seedefi Fund/code/InitializableERC20.sol,InitializableERC20.sol,"function allowance(address owner, address spender) public view returns (uint256) {"
SWC-102-Outdated Compiler Version,N/A,L13,DAppSCAN-source/contracts/Hacken-Sekuritance/TokenMintERC20Token0x887168120cb89Fb06F3E74Dc4AF20D67dF0977f6/TokenMintERC20Token0x887168120cb89Fb06F3E74Dc4AF20D67dF0977f6.sol,TokenMintERC20Token0x887168120cb89Fb06F3E74Dc4AF20D67dF0977f6.sol,pragma solidity ^0.5.0;
SWC-103-Floating Pragma,N/A,L12,DAppSCAN-source/contracts/Hacken-SnapEx/code/SnapToken.sol,SnapToken.sol,pragma solidity ^0.5.0;
SWC-102-Outdated Compiler Version,N/A,L12,DAppSCAN-source/contracts/Hacken-SnapEx/code/SnapToken.sol,SnapToken.sol,pragma solidity ^0.5.0;
SWC-103-Floating Pragma,N/A,L8,DAppSCAN-source/contracts/Hacken-SOAR-V1/code/SOAR.sol,SOAR.sol,pragma solidity ^0.6.2;
SWC-135-Code With No Effects,addLiquidity,L1144,DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol,SpaceDogeCoin.sol,"function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {"
SWC-135-Code With No Effects,_tokenTransfer,L1172,DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol,SpaceDogeCoin.sol,"_transferBothExcluded(sender, recipient, amount);"
SWC-113-DoS with Failed Call,playTournamentRound,L211,DAppSCAN-source/contracts/Hacken-Splash/splash-core-b38add0749f450a528197909005f6666cf609960/src/gameplay/PaidTournaments.sol,PaidTournaments.sol,for (uint256 i = 0; i < remainingMatches; i++) {
SWC-128-DoS With Block Gas Limit,batchTransfer,L20-21,DAppSCAN-source/contracts/Hacken-StudentCoin/stc-erc20-v2-412905ffa414c34b75fa4c52e5993318b2a5f067/STCERC20.sol,STCERC20.sol,for(uint256 i = 0; i < n; i++)
SWC-116-Block values as a proxy for time,adminWithdraw,L444,DAppSCAN-source/contracts/Hacken-Talent Protocol/contracts-70acb4924503fad6416ffa44b117ab51bef3fd21/Staking.sol,Staking.sol,"require(disabled || block.timestamp < end, ""not disabled, and not end of staking either"");"
SWC-116-Block values as a proxy for time,_checkpoint,L601,DAppSCAN-source/contracts/Hacken-Talent Protocol/contracts-70acb4924503fad6416ffa44b117ab51bef3fd21/Staking.sol,Staking.sol,stake.lastCheckpointAt = block.timestamp; // SWC-116-Block values as a proxy for time: L601
SWC-116-Block values as a proxy for time,_updateS,L650-L651,DAppSCAN-source/contracts/Hacken-Talent Protocol/contracts-70acb4924503fad6416ffa44b117ab51bef3fd21/Staking.sol,Staking.sol,"S = S + (calculateGlobalReward(SAt, block.timestamp)) / totalAdjustedShares;"
SWC-116-Block values as a proxy for time,onlyWhileStakingEnabled,L748-L749,DAppSCAN-source/contracts/Hacken-Talent Protocol/contracts-70acb4924503fad6416ffa44b117ab51bef3fd21/Staking.sol,Staking.sol,"require(block.timestamp >= start, ""staking period not yet started"");"
SWC-104-Unchecked Call Return Value,_stake,L82,DAppSCAN-source/contracts/Hacken-Tenderize/tender-core-1fd606141625171fe792045ae9233890262d2d62/contracts/tenderizer/integrations/graph/Graph.sol,Graph.sol,"steak.approve(address(graph), amount);"
SWC-104-Unchecked Call Return Value,_stake,L86,DAppSCAN-source/contracts/Hacken-Tenderize/tender-core-1fd606141625171fe792045ae9233890262d2d62/contracts/tenderizer/integrations/graph/Graph.sol,Graph.sol,"graph.delegate(_node, amount);"
SWC-104-Unchecked Call Return Value,_withdraw,L136,DAppSCAN-source/contracts/Hacken-Tenderize/tender-core-1fd606141625171fe792045ae9233890262d2d62/contracts/tenderizer/integrations/graph/Graph.sol,Graph.sol,"try steak.transfer(_account, amount) {} catch {"
SWC-104-Unchecked Call Return Value,_withdraw,L122,DAppSCAN-source/contracts/Hacken-Tenderize/tender-core-1fd606141625171fe792045ae9233890262d2d62/contracts/tenderizer/integrations/livepeer/Livepeer.sol,Livepeer.sol,"steak.transfer(_account, amount);"
SWC-104-Unchecked Call Return Value,_claimSecondaryRewards,L162 - L164,DAppSCAN-source/contracts/Hacken-Tenderize/tender-core-1fd606141625171fe792045ae9233890262d2d62/contracts/tenderizer/integrations/livepeer/Livepeer.sol,Livepeer.sol,// SWC-104-Unchecked Call Return Value: L162 - L164
SWC-135-Code With No Effects,_stake,L88 - L90,DAppSCAN-source/contracts/Hacken-Tenderize/tender-core-1fd606141625171fe792045ae9233890262d2d62/contracts/tenderizer/integrations/matic/Matic.sol,Matic.sol,if (_node != address(0)) {
SWC-104-Unchecked Call Return Value,_stake,L94,DAppSCAN-source/contracts/Hacken-Tenderize/tender-core-1fd606141625171fe792045ae9233890262d2d62/contracts/tenderizer/integrations/matic/Matic.sol,Matic.sol,"steak.approve(maticStakeManager, amount);"
SWC-104-Unchecked Call Return Value,_withdraw,L148,DAppSCAN-source/contracts/Hacken-Tenderize/tender-core-1fd606141625171fe792045ae9233890262d2d62/contracts/tenderizer/integrations/matic/Matic.sol,Matic.sol,"steak.transfer(_account, amount);"
SWC-104-Unchecked Call Return Value,deposit,L80,DAppSCAN-source/contracts/Hacken-The Next War/Contracts-334fe81ea7282ac4f768de077c37a7932c0302de/contracts/Staking.sol,Staking.sol,"lpToken.transferFrom(msg.sender, address(this), amount);"
SWC-104-Unchecked Call Return Value,N/A,L135,DAppSCAN-source/contracts/Hacken-The Next War/Contracts-334fe81ea7282ac4f768de077c37a7932c0302de/contracts/Staking.sol,Staking.sol,"lpToken.transfer(msg.sender, _amount);"
SWC-104-Unchecked Call Return Value,payTngReward,L177,DAppSCAN-source/contracts/Hacken-The Next War/Contracts-334fe81ea7282ac4f768de077c37a7932c0302de/contracts/Staking.sol,Staking.sol,"tngToken.transfer(_to, _pendingTng);"
SWC-104-Unchecked Call Return Value,N/A,L209,DAppSCAN-source/contracts/Hacken-The Next War/Contracts-334fe81ea7282ac4f768de077c37a7932c0302de/contracts/Staking.sol,Staking.sol,"IERC20(_token).transfer(_to, _contractBalance);"
SWC-119-Shadowing State Variables,N/A,L13 - L16,DAppSCAN-source/contracts/Hacken-The Next War/Contracts-334fe81ea7282ac4f768de077c37a7932c0302de/contracts/TncToken.sol,TncToken.sol,"string memory name,"
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Hacken-thrivecoin/thc-smart-contracts-sol-db78d6b4cf6dcb9e49e7a1f146851f77fa872bbf/contracts/ERC20Blockable.sol,ERC20Blockable.sol,pragma solidity ^0.8.0;
SWC-100-Function Default Visibility,pause,L23,DAppSCAN-source/contracts/Hacken-Torekko/TRKContract-4f5cc91756b418cd0eb9eb733ca1c417698fc478/TRKContractWithoutMintFn.sol,TRKContractWithoutMintFn.sol,function pause() public onlyOwner whenNotPaused {
SWC-100-Function Default Visibility,unpause,L31,DAppSCAN-source/contracts/Hacken-Torekko/TRKContract-4f5cc91756b418cd0eb9eb733ca1c417698fc478/TRKContractWithoutMintFn.sol,TRKContractWithoutMintFn.sol,function unpause() public onlyOwner whenPaused {
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/Hacken-Travelcare/TravelCare0x826e5Ec70DbC5607fF9218011FBb97F9a8D97953/contracts/TravelCare.sol,TravelCare.sol,pragma solidity 0.8.11;
SWC-104-Unchecked Call Return Value,ownerSetPoolRewards,L132,DAppSCAN-source/contracts/Hacken-TrustSwap-V1/code/StakingPool.sol,StakingPool.sol,"rewardToken.transferFrom(msg.sender, this, _rewardAmount);"
SWC-104-Unchecked Call Return Value,withdrawStaking,L262,DAppSCAN-source/contracts/Hacken-TrustSwap-V1/code/StakingPool.sol,StakingPool.sol,"rewardToken.transfer(msg.sender, rewardAmount);"
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/Hacken-Valhalla/Solidity-70de7d9daccb6d812b2ab96f20fb4aa2605e2601/erc20/ERC20.sol,ERC20.sol,pragma solidity ^0.8.0;
SWC-102-Outdated Compiler Version,N/A,L4,DAppSCAN-source/contracts/Hacken-Valhalla/Solidity-70de7d9daccb6d812b2ab96f20fb4aa2605e2601/erc20/ERC20.sol,ERC20.sol,pragma solidity ^0.8.0;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Hacken-VYNKSAFE/code/main.sol,main.sol,pragma solidity ^0.8.0;
SWC-104-Unchecked Call Return Value,stake,L154,DAppSCAN-source/contracts/Hacken-VYNKSAFE/code/main.sol,main.sol,"(, uint256 busdAdded, uint256 liquidityAmount) = router.addLiquidity("
SWC-104-Unchecked Call Return Value,unStake,L201,DAppSCAN-source/contracts/Hacken-VYNKSAFE/code/main.sol,main.sol,"(, , uint256 up) = data.returnData(); // SWC-104-Unchecked Call Return Value: L201"
SWC-135-Code With No Effects,unStake,L215 - L218,DAppSCAN-source/contracts/Hacken-VYNKSAFE/code/main.sol,main.sol,// SWC-135-Code With No Effects: L215 - L218
SWC-102-Outdated Compiler Version,N/A,L11,DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWSale.sol,WOWSale.sol,pragma solidity 0.7.5;
SWC-102-Outdated Compiler Version,N/A,L11,DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWToken.sol,WOWToken.sol,pragma solidity 0.7.5;
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Hacken-ZIXXAR INTERNATIONAL DISTRIBUTION SRL/staking-smart-contracts-e6ba771bba2a1e2c438202e246c963da2f3aa00f/Staking.sol,Staking.sol,pragma solidity ^0.8.7;
SWC-131-Presence of unused variables,N/A,"L28, L29",DAppSCAN-source/contracts/HAECHI_AUDIT-Badger/badger-system-537ef9c44196893cb9760beca2dcc501952e9a4a/Controller.sol,Controller.sol,uint256 public split = 500;
SWC-104-Unchecked Call Return Value,pwr,L196 - L210,DAppSCAN-source/contracts/HAECHI_AUDIT-Eco_Defi/ECOPToken/ECOPToken.sol,ECOPToken.sol,"function pwr(uint256 x, uint256 y)"
SWC-113-DoS with Failed Call,bid,L262 - L278,DAppSCAN-source/contracts/HAECHI_AUDIT-Fractional/contracts-37f9428fe9a5596c93ed9dfccb7be41afc0646ee/src/ERC721TokenVault.sol,ERC721TokenVault.sol,function bid() external payable {
SWC-131-Presence of unused variables,N/A,L16,DAppSCAN-source/contracts/HAECHI_AUDIT-Fractional/contracts-37f9428fe9a5596c93ed9dfccb7be41afc0646ee/src/IndexERC721.sol,IndexERC721.sol,Counters.Counter private _tokenIdTracker;
SWC-131-Presence of unused variables,N/A,L20,DAppSCAN-source/contracts/HAECHI_AUDIT-Fractional/contracts-37f9428fe9a5596c93ed9dfccb7be41afc0646ee/src/IndexERC721.sol,IndexERC721.sol,mapping(address=>mapping(uint256=>uint256)) public tokenToIndexOwner;
SWC-135-Code With No Effects,checkTick,L193-198,DAppSCAN-source/contracts/HAECHI_AUDIT-Lixir/lixir-contracts-1423c9d8112f103d782bec2bff0558c6be1ca4cc/LixirStrategySimpleGWAP.sol,LixirStrategySimpleGWAP.sol,int24 diff =
SWC-135-Code With No Effects,N/A,L15-18,DAppSCAN-source/contracts/HAECHI_AUDIT-Lixir/lixir-contracts-1423c9d8112f103d782bec2bff0558c6be1ca4cc/LixirVault.sol,LixirVault.sol,import '@openzeppelin/contracts/utils/Pausable.sol';
SWC-135-Code With No Effects,getMETARate,L77,DAppSCAN-source/contracts/HAECHI_AUDIT-MetaSpace/code/BoringHelper.sol,BoringHelper.sol,IERC20 token0;
SWC-131-Presence of unused variables,N/A,L34,DAppSCAN-source/contracts/HAECHI_AUDIT-Pickle_Finance/protocol-9b0f330a16bc35c964211feae3b335ab398c01b6/src/controller-v3.sol,controller-v3.sol,mapping(address => mapping(address => address)) public strategyConverters;
SWC-135-Code With No Effects,N/A,L8,DAppSCAN-source/contracts/HAECHI_AUDIT-Pickle_Finance/protocol-9b0f330a16bc35c964211feae3b335ab398c01b6/src/strategies/curve/strategy-curve-scrv-v3_1.sol,strategy-curve-scrv-v3_1.sol,"import ""./scrv-voter.sol"";"
SWC-104-Unchecked Call Return Value,govExecute,L221,DAppSCAN-source/contracts/HAECHI_AUDIT-Stacker_Venture/StackerVC_VentureFund001-fund-2/FarmBossV1.sol,FarmBossV1.sol,"return _execute(_target, _value, _data);"
SWC-129-Typographical Error,seedusdt,L444,DAppSCAN-source/contracts/ImmuneBytes-Aqar Chain-Audit Report/code/aq.sol,aq.sol,"require(seedrun = true,""seed round is not started or over"");"
SWC-129-Typographical Error,seedbnb,L467,DAppSCAN-source/contracts/ImmuneBytes-Aqar Chain-Audit Report/code/aq.sol,aq.sol,"require(seedrun = true,""seed round is not started or over"");"
SWC-129-Typographical Error,privateusdt,L484,DAppSCAN-source/contracts/ImmuneBytes-Aqar Chain-Audit Report/code/aq.sol,aq.sol,"require(privaterun=true,""Private sale haven't started yet"");"
SWC-129-Typographical Error,privatebnb,L505,DAppSCAN-source/contracts/ImmuneBytes-Aqar Chain-Audit Report/code/aq.sol,aq.sol,"require(privaterun=true,""Private sale haven't started yet"");"
SWC-129-Typographical Error,publicusdt,L525,DAppSCAN-source/contracts/ImmuneBytes-Aqar Chain-Audit Report/code/aq.sol,aq.sol,"require(publicrun=true,""Public sale haven't started yet"");"
SWC-129-Typographical Error,publicbnb,L546,DAppSCAN-source/contracts/ImmuneBytes-Aqar Chain-Audit Report/code/aq.sol,aq.sol,"require(publicrun=true,""Public sale haven't started yet"");"
SWC-123-Requirement Violation,publicbnb,L548,DAppSCAN-source/contracts/ImmuneBytes-Aqar Chain-Audit Report/code/aq.sol,aq.sol,"require(privateamount<=1000000000000000000000000,""private round token sale completed"");"
SWC-129-Typographical Error,claim,L563,DAppSCAN-source/contracts/ImmuneBytes-Aqar Chain-Audit Report/code/aq.sol,aq.sol,"require(claimbool = true,""claiming amount should be true"");"
SWC-129-Typographical Error,seedusdt,L444,DAppSCAN-source/contracts/ImmuneBytes-Aqar Chain-Final Audit Report/code/aq.sol,aq.sol,"require(seedrun = true,""seed round is not started or over"");"
SWC-129-Typographical Error,seedbnb,L467,DAppSCAN-source/contracts/ImmuneBytes-Aqar Chain-Final Audit Report/code/aq.sol,aq.sol,"require(seedrun = true,""seed round is not started or over"");"
SWC-123-Requirement Violation,publicbnb,L542,DAppSCAN-source/contracts/ImmuneBytes-Aqar Chain-Final Audit Report/code/aq.sol,aq.sol,"require(publicrun=true,""Public sale haven't started yet"");"
SWC-129-Typographical Error,claim,L559,DAppSCAN-source/contracts/ImmuneBytes-Aqar Chain-Final Audit Report/code/aq.sol,aq.sol,"require(claimbool = true,""claiming amount should be true"");"
SWC-107-Reentrancy,deposit,L262,DAppSCAN-source/contracts/ImmuneBytes-Bird Money(MasterChef)-Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol,MasterChef.sol,"function deposit(uint256 _pid, uint256 _amount) public {"
SWC-107-Reentrancy,emergencyWithdraw,L311,DAppSCAN-source/contracts/ImmuneBytes-Bird Money(MasterChef)-Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol,MasterChef.sol,function emergencyWithdraw(uint256 _pid) public {
SWC-107-Reentrancy,deposit,L261-284,DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol,MasterChef.sol,"function deposit(uint256 _pid, uint256 _amount) public {"
SWC-107-Reentrancy,withdraw,L287-306,DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol,MasterChef.sol,"function withdraw(uint256 _pid, uint256 _amount) public {"
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/ImmuneBytes-BonFi(Legendary)- Final Audit Report/code/Legendary_v9.sol,Legendary_v9.sol,pragma solidity ^0.5.0;
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/ImmuneBytes-BonFi(Legendary)-Audit Report/code/Legendary_v9.sol,Legendary_v9.sol,pragma solidity ^0.5.0;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/ImmuneBytes-BonFi(Liquidity)-Audit Report/code/Liquidity_v9(1).sol,Liquidity_v9(1).sol,pragma solidity ^0.5.0;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/ImmuneBytes-BonFi(Liquidity)-Final Audit Report/code/Liquidity_v9(1).sol,Liquidity_v9(1).sol,pragma solidity ^0.5.0;
SWC-128-DoS With Block Gas Limit,stake,L1077,DAppSCAN-source/contracts/ImmuneBytes-HaggleX-Audit Report/Hag-token-9c2d7821bf5740afc4437c9a2bd3ace7ec883137/HaggleToken.sol,HaggleToken.sol,_staking[_msgSender()].push(temp);
SWC-128-DoS With Block Gas Limit,stake,L1077,DAppSCAN-source/contracts/ImmuneBytes-HaggleX-Final Audit Report/Hag-token-9c2d7821bf5740afc4437c9a2bd3ace7ec883137/HaggleToken.sol,HaggleToken.sol,_staking[_msgSender()].push(temp);
SWC-105-Unprotected Ether Withdrawal,transfer,L60-66,DAppSCAN-source/contracts/ImmuneBytes-LeadWallet Audit Report/LEAD-Stake-DApp-Backend-298d3157c32147bf5432b376e39b436381d5e8e8/ERC20.sol,ERC20.sol,"function transfer(address to, uint value) public override returns(bool) {"
SWC-105-Unprotected Ether Withdrawal,adminWithdraw,L322-329,DAppSCAN-source/contracts/ImmuneBytes-LeadWallet Audit Report/LEAD-Stake-DApp-Backend-298d3157c32147bf5432b376e39b436381d5e8e8/LeadStake.sol,LeadStake.sol,"function adminWithdraw(address _address, uint _amount) external onlyOwner {"
SWC-105-Unprotected Ether Withdrawal,transfer,L60-66,DAppSCAN-source/contracts/ImmuneBytes-LeadWallet Final Audit Report/LEAD-Stake-DApp-Backend-298d3157c32147bf5432b376e39b436381d5e8e8/ERC20.sol,ERC20.sol,"function transfer(address to, uint value) public override returns(bool) {"
SWC-105-Unprotected Ether Withdrawal,adminWithdraw,L322-329,DAppSCAN-source/contracts/ImmuneBytes-LeadWallet Final Audit Report/LEAD-Stake-DApp-Backend-298d3157c32147bf5432b376e39b436381d5e8e8/LeadStake.sol,LeadStake.sol,"function adminWithdraw(address _address, uint _amount) external onlyOwner {"
SWC-135-Code With No Effects,onlyPools,L94,DAppSCAN-source/contracts/ImmuneBytes-MahaDAO (ArthController.sol)-Audit Report/code/ArthController.sol,ArthController.sol,modifier onlyPools() {
SWC-135-Code With No Effects,onlyByOwnerGovernanceOrPool,L118-L126,DAppSCAN-source/contracts/ImmuneBytes-MahaDAO (ArthController.sol)-Audit Report/code/ArthController.sol,ArthController.sol,modifier onlyByOwnerGovernanceOrPool() {
SWC-135-Code With No Effects,hasStarted,L74-77,DAppSCAN-source/contracts/ImmuneBytes-MahaDAO (Genesis.sol)-Audit Report/arthcoin-v2-95fac3e9dca2af67c974f2f87c2c385c4bc03df2/contracts/Genesis/Genesis.sol,Genesis.sol,modifier hasStarted() {
SWC-131-Presence of unused variables,N/A,L18,DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol,NFYTradingPlatform.sol,bytes32 constant ETH = 'ETH';
SWC-129-Typographical Error,geUnlockTime,L455,DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol,Pluteus (1).sol,return _lockTime;
SWC-129-Typographical Error,geUnlockTime,L455,DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Final Audit Report/code/Pluteus (1).sol,Pluteus (1).sol,return _lockTime;
SWC-114-Transaction Order Dependence,_swapExactTokens,L375-L391,DAppSCAN-source/contracts/ImmuneBytes-PolyTrade-Audit Report(Lender Portal)/lender-portal-contracts-dev/contracts/LenderPool.sol,LenderPool.sol,function _swapExactTokens(
SWC-131-Presence of unused variables,N/A,L34,DAppSCAN-source/contracts/ImmuneBytes-Sheesha Finance- Audit Report/sheesha-finance-36adeff12204228c1473b00199c1a35bfb61e943/LGE.sol,LGE.sol,uint256 public stakeCount;
SWC-129-Typographical Error,after 2 weeks to mint LGE,L91、126、134,DAppSCAN-source/contracts/ImmuneBytes-Sheesha Finance- Audit Report/sheesha-finance-36adeff12204228c1473b00199c1a35bfb61e943/LGE.sol,LGE.sol,// Sends all avaibile balances and mints LP tokens
SWC-131-Presence of unused variables,N/A,L13-16,DAppSCAN-source/contracts/ImmuneBytes-Sheesha Finance- Audit Report/sheesha-finance-36adeff12204228c1473b00199c1a35bfb61e943/Sheesha.sol,Sheesha.sol,address public devAddress;
SWC-129-Typographical Error,transferVaultLPewards,L44,DAppSCAN-source/contracts/ImmuneBytes-Sheesha Finance- Audit Report/sheesha-finance-36adeff12204228c1473b00199c1a35bfb61e943/Sheesha.sol,Sheesha.sol,function transferVaultLPewards(address _vaultLPAddress) public onlyOwner {
SWC-129-Typographical Error,withdraw,L196,DAppSCAN-source/contracts/ImmuneBytes-Sheesha Finance- Audit Report/sheesha-finance-36adeff12204228c1473b00199c1a35bfb61e943/SHEESHAVaultLP.sol,SHEESHAVaultLP.sol,// Withdraw LP tokens or claim rewrads if amount is 0
SWC-129-Typographical Error,buyBoosters,L96,DAppSCAN-source/contracts/ImmuneBytes-SIGH Finance-Audit Report/SIGH-Finance-Contracts-9feee84e18cabb4015ca60dc016340f2c94af27a/SIGHFinanceContracts/contracts/NFTBoosters/SIGHBoostersSale.sol,SIGHBoostersSale.sol,"function buyBoosters(address receiver, string memory _BoosterType, uint boostersToBuy) override external {"
SWC-104-Unchecked Call Return Value,claim,L60,DAppSCAN-source/contracts/ImmuneBytes-SportsIcon-Audit Report/SportsIcon-Vesting-8a26ed5c3a52b7a4d1b22a38b40dd80783ecc6a3/SportsIconPrivateVesting.sol,SportsIconPrivateVesting.sol,"token.transfer(msg.sender, tokens);"
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/ImmuneBytes-WadzPay-Audit Report/code/WadzPayToken.sol,WadzPayToken.sol,pragma solidity ^0.8.0;
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/Inspex-Admin & Poll/iAM-Admin-Poll-Token-main/admin/adminManage.sol,adminManage.sol,pragma solidity =0.8.4;
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/Inspex-Admin & Poll/iAM-Admin-Poll-Token-main/admin/BigOwner.sol,BigOwner.sol,pragma solidity =0.8.4;
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/Inspex-Admin & Poll/iAM-Admin-Poll-Token-main/poll/Poll.sol,Poll.sol,pragma solidity =0.8.4;
SWC-114-Transaction Order Dependence,harvest,L1342,DAppSCAN-source/contracts/Inspex-AutoCompound/auto-compound-v2-92626a1dcfc55a28afdf4f996d600fe8bbfd6efd/PancakeByalanLP.sol,PancakeByalanLP.sol,function harvest() external override whenNotPaused onlyEOA onlyHarvester gasThrottle {
SWC-114-Transaction Order Dependence,_harvest,L137-149,DAppSCAN-source/contracts/Inspex-AutoCompoundVault/mondayclub-9ec29e0bb41a6bbef5484976502c924f4557ca02/StrategyCommonChefLP.sol,StrategyCommonChefLP.sol,function _harvest(address callFeeRecipient) internal whenNotPaused {
SWC-114-Transaction Order Dependence,addLiquidity,L169-183,DAppSCAN-source/contracts/Inspex-AutoCompoundVault/mondayclub-9ec29e0bb41a6bbef5484976502c924f4557ca02/StrategyCommonChefLP.sol,StrategyCommonChefLP.sol,function addLiquidity() internal {
SWC-102-Outdated Compiler Version,N/A,L4,"DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusAutoStake.sol",ThorusAutoStake.sol,pragma solidity 0.8.10;
SWC-102-Outdated Compiler Version,N/A,L4,"DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",ThorusMaster.sol,pragma solidity 0.8.10;
SWC-102-Outdated Compiler Version,N/A,L3,"DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusToken.sol",ThorusToken.sol,pragma solidity 0.8.10;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Inspex-BlocksSpace/smart-contracts-8311a0436dba5f168fe830bd84ffc2832f8a1b38/hardhat/contracts/BLSToken.sol,BLSToken.sol,pragma solidity 0.8.5;
SWC-102-Outdated Compiler Version,N/A,L1,DAppSCAN-source/contracts/Inspex-CakeMaxi/bsc-alpaca-contract-20c4c545a0323b71d2969fd79db8316e60bc7d76/CakeMaxiWorker.sol,CakeMaxiWorker.sol,pragma solidity 0.6.6;
SWC-114-Transaction Order Dependence,reinvest,L150-186,DAppSCAN-source/contracts/Inspex-CakeMaxi/bsc-alpaca-contract-20c4c545a0323b71d2969fd79db8316e60bc7d76/CakeMaxiWorker.sol,CakeMaxiWorker.sol,/// @dev Re-invest whatever this worker has earned to the staking pool.
SWC-114-Transaction Order Dependence,reinvest,L139,"DAppSCAN-source/contracts/Inspex-FairLaunch, Token, Vault & Workers/Meow-Finance-4a4f13efaf5e5fbed74c0ed23b665751e655d715/contracts/protocol/workers/SpookyswapWorker.sol",SpookyswapWorker.sol,function reinvest() external override onlyEOA onlyReinvestor nonReentrant {
SWC-102-Outdated Compiler Version,N/A,L3,"DAppSCAN-source/contracts/Inspex-FairLaunch, Token, Vault & Workers/Meow-Finance-4a4f13efaf5e5fbed74c0ed23b665751e655d715/contracts/token/MeowMining.sol",MeowMining.sol,pragma solidity 0.6.6;
SWC-102-Outdated Compiler Version,N/A,L16,DAppSCAN-source/contracts/Inspex-Infinitee Vault/vault-be42b0fa7a71f64cc8ef855af911c9bd95ff68ff/Timelock.sol,Timelock.sol,pragma solidity 0.6.6;
SWC-102-Outdated Compiler Version,N/A,L1,DAppSCAN-source/contracts/Inspex-Lending/smart-contract-edef88b4d3881f6eb676cf8189af05632d945422/WelChainlinkOracle.sol,WelChainlinkOracle.sol,pragma solidity 0.5.17;
SWC-102-Outdated Compiler Version,N/A,L14,DAppSCAN-source/contracts/Inspex-MDEX Integration/bsc-alpaca-contract-a3a14d27a4803afebdcf783c9ce8764b65f5587d/MdexWorker02.sol,MdexWorker02.sol,pragma solidity 0.6.6;
SWC-114-Transaction Order Dependence,_reinvest,L234,DAppSCAN-source/contracts/Inspex-MDEX Integration/bsc-alpaca-contract-a3a14d27a4803afebdcf783c9ce8764b65f5587d/MdexWorker02.sol,MdexWorker02.sol,"if (beneficialVaultBounty > 0) _rewardToBeneficialVault(beneficialVaultBounty, _callerBalance);"
SWC-114-Transaction Order Dependence,_reinvest,L239、242、243,DAppSCAN-source/contracts/Inspex-MDEX Integration/bsc-alpaca-contract-a3a14d27a4803afebdcf783c9ce8764b65f5587d/MdexWorker02.sol,MdexWorker02.sol,"router.swapExactTokensForTokens(reward.sub(bounty), 0, getReinvestPath(), address(this), now);"
SWC-114-Transaction Order Dependence,_rewardToBeneficialVault,L345-346、352,DAppSCAN-source/contracts/Inspex-MDEX Integration/bsc-alpaca-contract-a3a14d27a4803afebdcf783c9ce8764b65f5587d/MdexWorker02.sol,MdexWorker02.sol,uint256[] memory amounts =
SWC-102-Outdated Compiler Version,N/A,L14,DAppSCAN-source/contracts/Inspex-Optimized Worker/bsc-alpaca-contract-1aee2ceec77e3fd3162b74858c846cdc5692928d/contracts/6/protocol/workers/pcs/PancakeswapV2Worker02.sol,PancakeswapV2Worker02.sol,pragma solidity 0.6.6;
SWC-114-Transaction Order Dependence,work,L218,DAppSCAN-source/contracts/Inspex-Optimized Worker/bsc-alpaca-contract-1aee2ceec77e3fd3162b74858c846cdc5692928d/contracts/6/protocol/workers/pcs/PancakeswapV2Worker02.sol,PancakeswapV2Worker02.sol,"_reinvest(treasuryAccount, treasuryBountyBps, baseToken.myBalance());"
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Inspex-Otoro/Otoro-Audit-441f0995a86a421d7062f30abcdf654d86d0013c/contracts/Otoro.sol,Otoro.sol,pragma solidity 0.8.13;
SWC-128-DoS With Block Gas Limit,getShuffledId,L98-104,DAppSCAN-source/contracts/Inspex-Otoro/Otoro-Audit-441f0995a86a421d7062f30abcdf654d86d0013c/contracts/lib/Revealable.sol,Revealable.sol,for (uint256 i = startIndex; i <= maxSupply; i += 1) {
SWC-131-Presence of unused variables,add,L14-15,DAppSCAN-source/contracts/Inspex-Revenue Sharing Pool & Shield/Lucky-farm-5c8e9e7ebd3c897c920675dda3c3621b42d9d0dd/contracts/MasterchefShield.sol,MasterchefShield.sol,"function add(uint256 _allocPoint, IERC20 _lpToken, uint256 _harvestIntervalInMinutes,uint256 _farmStartIntervalInMinutes) external onlyOwner {"
SWC-131-Presence of unused variables,set,L18-19,DAppSCAN-source/contracts/Inspex-Revenue Sharing Pool & Shield/Lucky-farm-5c8e9e7ebd3c897c920675dda3c3621b42d9d0dd/contracts/MasterchefShield.sol,MasterchefShield.sol,"function set(uint256 _pid, uint256 _allocPoint, uint256 _harvestIntervalInMinutes,uint256 _farmStartIntervalInMinutes) external onlyOwner {"
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Inspex-Revenue Sharing Pool & Shield/LuckyLion-RevenueSharing-342db925e80c9e62fce7505d24431e3d82199b87/contracts/RevenueSharingPool.sol,RevenueSharingPool.sol,pragma solidity ^0.8.0;
SWC-108-State Variable Default Visibility,N/A,L33,DAppSCAN-source/contracts/Inspex-Revenue Sharing Pool & Shield/LuckyLion-RevenueSharing-342db925e80c9e62fce7505d24431e3d82199b87/contracts/RevenueSharingPool.sol,RevenueSharingPool.sol,mapping(uint256 => mapping(uint256 => mapping(address => uint256))) stakeAmount; // SWC-108-State Variable Default Visibility: L33
SWC-128-DoS With Block Gas Limit,calculateTotalLuckyReward,L241-243,DAppSCAN-source/contracts/Inspex-Revenue Sharing Pool & Shield/LuckyLion-RevenueSharing-342db925e80c9e62fce7505d24431e3d82199b87/contracts/RevenueSharingPool.sol,RevenueSharingPool.sol,for (uint256 i = 0; i < roundId; i++) {
SWC-114-Transaction Order Dependence,_safeSwap,L2253-L2273,"DAppSCAN-source/contracts/Inspex-SimpliChef, Token, ZapBSC & Broker/simpli-smart-contract-4823d1ebbd84a35dd7e8f9fd7f5207ef5c85c419/contracts/strategies/StratX2_PCS.sol",StratX2_PCS.sol,function _safeSwap(
SWC-102-Outdated Compiler Version,N/A,L14,DAppSCAN-source/contracts/Inspex-SpookySwap Integration & Fantom Expansion/bsc-alpaca-contract-4553a34a6dcfcfbf7aebc693bb5c5c6074c73129/contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddBaseTokenOnly.sol,SpookySwapStrategyAddBaseTokenOnly.sol,pragma solidity 0.6.6;
SWC-114-Transaction Order Dependence,execute,L59-L105,DAppSCAN-source/contracts/Inspex-SpookySwap Integration & Fantom Expansion/bsc-alpaca-contract-4553a34a6dcfcfbf7aebc693bb5c5c6074c73129/contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddBaseTokenOnly.sol,SpookySwapStrategyAddBaseTokenOnly.sol,function execute(
SWC-102-Outdated Compiler Version,N/A,L15,DAppSCAN-source/contracts/Inspex-SpookySwap Integration & Fantom Expansion/bsc-alpaca-contract-4553a34a6dcfcfbf7aebc693bb5c5c6074c73129/contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyAddTwoSidesOptimal.sol,SpookySwapStrategyAddTwoSidesOptimal.sol,pragma solidity 0.6.6;
SWC-102-Outdated Compiler Version,N/A,L15,DAppSCAN-source/contracts/Inspex-SpookySwap Integration & Fantom Expansion/bsc-alpaca-contract-4553a34a6dcfcfbf7aebc693bb5c5c6074c73129/contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyLiquidate.sol,SpookySwapStrategyLiquidate.sol,pragma solidity 0.6.6;
SWC-102-Outdated Compiler Version,N/A,L15,DAppSCAN-source/contracts/Inspex-SpookySwap Integration & Fantom Expansion/bsc-alpaca-contract-4553a34a6dcfcfbf7aebc693bb5c5c6074c73129/contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseLiquidate.sol,SpookySwapStrategyPartialCloseLiquidate.sol,pragma solidity 0.6.6;
SWC-102-Outdated Compiler Version,N/A,L15,DAppSCAN-source/contracts/Inspex-SpookySwap Integration & Fantom Expansion/bsc-alpaca-contract-4553a34a6dcfcfbf7aebc693bb5c5c6074c73129/contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyPartialCloseMinimizeTrading.sol,SpookySwapStrategyPartialCloseMinimizeTrading.sol,pragma solidity 0.6.6;
SWC-102-Outdated Compiler Version,N/A,L15,DAppSCAN-source/contracts/Inspex-SpookySwap Integration & Fantom Expansion/bsc-alpaca-contract-4553a34a6dcfcfbf7aebc693bb5c5c6074c73129/contracts/6/protocol/strategies/spookyswap/SpookySwapStrategyWithdrawMinimizeTrading.sol,SpookySwapStrategyWithdrawMinimizeTrading.sol,pragma solidity 0.6.6;
SWC-114-Transaction Order Dependence,_reinvest,L208-L246,DAppSCAN-source/contracts/Inspex-SpookySwap Integration & Fantom Expansion/bsc-alpaca-contract-4553a34a6dcfcfbf7aebc693bb5c5c6074c73129/contracts/6/protocol/workers/spookyswap/SpookyWorker03.sol,SpookyWorker03.sol,function _reinvest(
SWC-114-Transaction Order Dependence,deposit,L191-L205,"DAppSCAN-source/contracts/Inspex-StakingPool, Vault, Strategy & VotingEscrow/scientix-contract-main/contracts/vaults/StratAlpaca.sol",StratAlpaca.sol,function deposit(uint256 _wantAmt)
SWC-107-Reentrancy,_transferOut,L342,DAppSCAN-source/contracts/Inspex-SuperLauncher V.2/v2-core-ba2ce0aedbefd79d6f2154f7ccc4954bba33592a/MainWorkflow.sol,MainWorkflow.sol,"function _transferOut(address to, address token, uint amount) internal  {"
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/Inspex-ThorusDummy/contracts-main/ThorusDummy.sol,ThorusDummy.sol,pragma solidity 0.8.10;
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/Inspex-Token/iAM-Admin-Poll-Token-0f8bb7a04c439286a5dffa223c3b30265acb4b5c/EventToken.sol,EventToken.sol,pragma solidity =0.8.4;
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/Inspex-Token & Vesting/MooMonster-Contract-2d07e927e5e8f66afea5cbdfb89b32ef74cfe385/contracts/TImelock.sol,TImelock.sol,pragma solidity 0.8.10;
SWC-107-Reentrancy,depositStable,L674,"DAppSCAN-source/contracts/Inspex-Tokens, Farm & Shop/-SpeedStar-Audit-3e39d7acf9c1aa9f3a5511c161c2035ba7d6bc1f/contracts/farm/Staking.sol",Staking.sol,function depositStable(uint256 _tokenId)
SWC-114-Transaction Order Dependence,harvest,L129-L136,DAppSCAN-source/contracts/Inspex-Vault/aleswap-vault-efd3f777b2e9aaa2c635d3d0f463f1884e998112/contracts/strategies/Warden/StrategyWardenLP.sol,StrategyWardenLP.sol,function harvest() external whenNotPaused onlyEOA {
SWC-102-Outdated Compiler Version,N/A,L5,DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol,WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol,pragma solidity =0.5.16;
SWC-102-Outdated Compiler Version,N/A,L6,DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapRouter0xD48745E39BbED146eEC15b79cBF964884F9877c2/WaultSwapRouter0xD48745E39BbED146eEC15b79cBF964884F9877c2.sol,WaultSwapRouter0xD48745E39BbED146eEC15b79cBF964884F9877c2.sol,pragma solidity =0.6.6;
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/Inspex-WusdAaveStrategy/WUSD-main/WusdAaveStrategy.sol,WusdAaveStrategy.sol,pragma solidity 0.8.9;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/Inspex-WUSDMaster/WUSD-91c541c2f1c0ac781ddcfb2be6a62555a5e1e8d1/WUSDMaster.sol,WUSDMaster.sol,pragma solidity ^0.8.0;
SWC-114-Transaction Order Dependence,stake,L703-728,DAppSCAN-source/contracts/Inspex-WUSDMaster/WUSD-91c541c2f1c0ac781ddcfb2be6a62555a5e1e8d1/WUSDMaster.sol,WUSDMaster.sol,function stake(uint256 amount) external nonReentrant {
SWC-102-Outdated Compiler Version,N/A,L14,DAppSCAN-source/contracts/Inspex-xALPACA/xALPACA-contract-8c58dd3aaade09ae51de49dc44e7784fd63efa53/contracts/8.7/GrassHouse.sol,GrassHouse.sol,pragma solidity 0.8.7;
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Inspex-YES contracts/YuemmaiRental_YES-contracts-de7684e0f771acefabe4d5f6f3648b81e75e83ff/KAP20Lending.sol,KAP20Lending.sol,pragma solidity ^0.8.0;
SWC-114-Transaction Order Dependence,merketSell,L32-34、37、45-47,DAppSCAN-source/contracts/Inspex-YES contracts/YuemmaiRental_YES-contracts-de7684e0f771acefabe4d5f6f3648b81e75e83ff/MarketImpl.sol,MarketImpl.sol,amountOutMin =
SWC-114-Transaction Order Dependence,marketBuy,L82、84、94、97,DAppSCAN-source/contracts/Inspex-YES contracts/YuemmaiRental_YES-contracts-de7684e0f771acefabe4d5f6f3648b81e75e83ff/MarketImpl.sol,MarketImpl.sol,amountOutMin = (amounts[amounts.length - 1] * (1e18 - slippageTolerrance)) / 1e18;
SWC-107-Reentrancy,getReward,L75,DAppSCAN-source/contracts/Iosiro-1inch Exchange Staking Rewards Smart Contract Audit/liquidity-protocol-c9c8bc600e8e7897f70f84b006de601d4f4bcbe3/BaseRewards.sol,BaseRewards.sol,function getReward(uint i) public updateReward(msg.sender) {
SWC-101-Integer Overflow and Underflow,notifyRewardAmount,L98,DAppSCAN-source/contracts/Iosiro-1inch Exchange Staking Rewards Smart Contract Audit/liquidity-protocol-c9c8bc600e8e7897f70f84b006de601d4f4bcbe3/BaseRewards.sol,BaseRewards.sol,"require(tr.rewardRate <= balance.div(duration), ""Reward is too big"");"
SWC-116-Block values as a proxy for time,onlyValidPurchase,L132,DAppSCAN-source/contracts/Iosiro-AMO Crowdsale Smart Contract Audit/AMO-Contracts-26b5b22f50e39cd9fc3a6df99aff83f5a74e89d3/AMOCoinSale.sol,AMOCoinSale.sol,require(now >= startTime && now <= endTime);
SWC-116-Block values as a proxy for time,startSale,L349,DAppSCAN-source/contracts/Iosiro-AMO Crowdsale Smart Contract Audit/AMO-Contracts-26b5b22f50e39cd9fc3a6df99aff83f5a74e89d3/AMOCoinSale.sol,AMOCoinSale.sol,startTime = now; //SWC-116-Block values as a proxy for time:L349
SWC-116-Block values as a proxy for time,endSale,L358,DAppSCAN-source/contracts/Iosiro-AMO Crowdsale Smart Contract Audit/AMO-Contracts-26b5b22f50e39cd9fc3a6df99aff83f5a74e89d3/AMOCoinSale.sol,AMOCoinSale.sol,endTime = now; //SWC-116-Block values as a proxy for time:L358
SWC-100-Function Default Visibility,stop,L90,DAppSCAN-source/contracts/Iosiro-CHAINSQUARE Smart Contract Audit/code/Etherscan-0xb41380174d0B06181513A5677b60200b93b5Efb4.sol,Etherscan-0xb41380174d0B06181513A5677b60200b93b5Efb4.sol,function stop() onlyOwner {
SWC-100-Function Default Visibility,start,L94,DAppSCAN-source/contracts/Iosiro-CHAINSQUARE Smart Contract Audit/code/Etherscan-0xb41380174d0B06181513A5677b60200b93b5Efb4.sol,Etherscan-0xb41380174d0B06181513A5677b60200b93b5Efb4.sol,function start() onlyOwner {
SWC-108-State Variable Default Visibility,N/A,L29,DAppSCAN-source/contracts/Iosiro-Cloudbric Crowdsale Smart Contract Audit/Cloudbric-Contracts-b0fbefab3de80718ca2b9e3b4d16a97817b7018b/Cloudbric.sol,Cloudbric.sol,mapping(address => uint256) private lockedAccounts;
SWC-108-State Variable Default Visibility,N/A,L15、71,DAppSCAN-source/contracts/Iosiro-Cloudbric Crowdsale Smart Contract Audit/Cloudbric-Contracts-b0fbefab3de80718ca2b9e3b4d16a97817b7018b/CloudbricSale.sol,CloudbricSale.sol,address private fundAddr;
SWC-103-Floating Pragma,N/A,L7,DAppSCAN-source/contracts/Iosiro-Dala Crowdsale Smart Contract Audit/dala-smart-contracts-175138b3d9ca0d61d341a2db26333519a9c13ad0/contracts/Crowdsale.sol,Crowdsale.sol,pragma solidity ^0.4.15;
SWC-100-Function Default Visibility,transfer,L14-L16,DAppSCAN-source/contracts/Iosiro-Dala Crowdsale Smart Contract Audit/dala-smart-contracts-175138b3d9ca0d61d341a2db26333519a9c13ad0/contracts/PausableToken.sol,PausableToken.sol,"function transfer(address _to, uint _value) whenNotPaused returns (bool) {"
SWC-100-Function Default Visibility,transferFrom,L18-L20,DAppSCAN-source/contracts/Iosiro-Dala Crowdsale Smart Contract Audit/dala-smart-contracts-175138b3d9ca0d61d341a2db26333519a9c13ad0/contracts/PausableToken.sol,PausableToken.sol,"function transferFrom(address _from, address _to, uint _value) whenNotPaused returns (bool) {"
SWC-116-Block values as a proxy for time,duringCrowdfund,L61、68、76、162、173、180,DAppSCAN-source/contracts/Iosiro-Etherparty Smart Contract Audit/eth-smart-contracts-39ab46c841f2e8e5beff4508a3f05362bd583049/Crowdfund.sol,Crowdfund.sol,"require(now >= startsAt && now <= endsAt, ""time must be greater than start but less than end"");"
SWC-110-Assert Violation,N/A,L15、19、23,DAppSCAN-source/contracts/Iosiro-Etherparty Smart Contract Audit/eth-smart-contracts-39ab46c841f2e8e5beff4508a3f05362bd583049/SafeERC20.sol,SafeERC20.sol,"assert(token.transfer(to, value));"
SWC-100-Function Default Visibility,stop,L90,DAppSCAN-source/contracts/Iosiro-FLUX Token Smart Contract Audit/code/Etherscan-0x54735d716995071585A4f6ba341a6Ded79756F09.sol,Etherscan-0x54735d716995071585A4f6ba341a6Ded79756F09.sol,function stop() onlyOwner {
SWC-100-Function Default Visibility,start,L94,DAppSCAN-source/contracts/Iosiro-FLUX Token Smart Contract Audit/code/Etherscan-0x54735d716995071585A4f6ba341a6Ded79756F09.sol,Etherscan-0x54735d716995071585A4f6ba341a6Ded79756F09.sol,function start() onlyOwner {
SWC-104-Unchecked Call Return Value,transfer,L38,DAppSCAN-source/contracts/Iosiro-ixo Smart Contract Audit/ixo-solidity-417c40f1bd6600e5d1d8b49d136f2b97a098591c/contracts/project/ProjectWalletAuthoriser.sol,ProjectWalletAuthoriser.sol,"ProjectWallet(_sender).transfer(_receiver, _amt);"
SWC-118-Incorrect Constructor Name,KOKContract,L63,DAppSCAN-source/contracts/Iosiro-KOK Token Smart Contract Audit/ERC-20-55a501fde12e782b99fe9d5756388c0de82f45ba/contract.sol,contract.sol,function KOKContract() public {
SWC-100-Function Default Visibility,stop,L89 - L91,DAppSCAN-source/contracts/Iosiro-KOK Token Smart Contract Audit/ERC-20-55a501fde12e782b99fe9d5756388c0de82f45ba/contract.sol,contract.sol,function stop() onlyOwner {
SWC-100-Function Default Visibility,start,L93 - L95,DAppSCAN-source/contracts/Iosiro-KOK Token Smart Contract Audit/ERC-20-55a501fde12e782b99fe9d5756388c0de82f45ba/contract.sol,contract.sol,function start() onlyOwner {
SWC-134-Message call with hardcoded gas amount,freeUpHeldCovers,L386,"DAppSCAN-source/contracts/Iosiro-Nexus Mutual Stacked Risk, On-chain MCR, and Swap Operator Smart Contract Audit/smart-contracts-60efdf64f2198050f7e6fcec57548d40e4f8598f/contracts/modules/cover/Quotation.sol",Quotation.sol,userAddress.transfer(refundedETH);
SWC-134-Message call with hardcoded gas amount,issueExactSetFromToken,L248,DAppSCAN-source/contracts/Iosiro-Set Protocol Exchange Issuance Smart Contract Audit/index-coop-contracts-legacy-a2904cf34be59a1ebde7ef186bd8535db80093b0/ExchangeIssuance.sol,ExchangeIssuance.sol,msg.sender.transfer(amountEthReturn);
SWC-134-Message call with hardcoded gas amount,issueExactSetFromToken,"L247, L279, L349",DAppSCAN-source/contracts/Iosiro-Set Protocol Exchange Issuance Smart Contract Audit/index-coop-contracts-legacy-a2904cf34be59a1ebde7ef186bd8535db80093b0/ExchangeIssuance.sol,ExchangeIssuance.sol,// SWC-134-Message call with hardcoded gas amount: L248
SWC-134-Message call with hardcoded gas amount,issueExactSetFromETH,L281,DAppSCAN-source/contracts/Iosiro-Set Protocol Exchange Issuance Smart Contract Audit/index-coop-contracts-legacy-a2904cf34be59a1ebde7ef186bd8535db80093b0/ExchangeIssuance.sol,ExchangeIssuance.sol,msg.sender.transfer(returnAmount);
SWC-134-Message call with hardcoded gas amount,redeemExactSetForETH,L352,DAppSCAN-source/contracts/Iosiro-Set Protocol Exchange Issuance Smart Contract Audit/index-coop-contracts-legacy-a2904cf34be59a1ebde7ef186bd8535db80093b0/ExchangeIssuance.sol,ExchangeIssuance.sol,msg.sender.transfer(amountEthOut);
SWC-111-Use of Deprecated Solidity Functions,burn,L54,DAppSCAN-source/contracts/Iosiro-SNX FlashBurn Smart Contract Audit/flashburn-3aa02a3d63d9e0110a5b6669a4a4011ceee3cf2b/packages/contracts/contracts/SNXFlashLoanTool.sol,SNXFlashLoanTool.sol,function burn(
SWC-111-Use of Deprecated Solidity Functions,transferToken,L122,DAppSCAN-source/contracts/Iosiro-SNX FlashBurn Smart Contract Audit/flashburn-3aa02a3d63d9e0110a5b6669a4a4011ceee3cf2b/packages/contracts/contracts/SNXFlashLoanTool.sol,SNXFlashLoanTool.sol,function transferToken(address token) external onlyOwner {
SWC-107-Reentrancy,swap,L143,DAppSCAN-source/contracts/Iosiro-SNX FlashBurn Smart Contract Audit/flashburn-3aa02a3d63d9e0110a5b6669a4a4011ceee3cf2b/packages/contracts/contracts/SNXFlashLoanTool.sol,SNXFlashLoanTool.sol,"(bool success, ) = exchange.call(data);"
SWC-128-DoS With Block Gas Limit,synthTooVolatileForAtomicExchange,L121-149,DAppSCAN-source/contracts/Iosiro-Synthetix Alkaid Release Smart Contract Audit/synthetix-7d4e868c295bb432640c0478edfd185ab8932785/contracts/ExchangeRatesWithDexPricing.sol,ExchangeRatesWithDexPricing.sol,while (true) {
SWC-135-Code With No Effects,_processTradingRewards,L363,DAppSCAN-source/contracts/Iosiro-Synthetix Alnitak Release Smart Contract Audit/synthetix-00df930622a8ea462d15d4eccf6bc6b3d704bd21/contracts/Exchanger.sol,Exchanger.sol,if (fee > 0 && rewardAddress != address(0) && getTradingRewardsEnabled()) {
SWC-115-Authorization through tx.origin,exchangeWithTrackingForInitiator,L96,DAppSCAN-source/contracts/Iosiro-Synthetix Alnitak Release Smart Contract Audit/synthetix-00df930622a8ea462d15d4eccf6bc6b3d704bd21/contracts/Synthetix.sol,Synthetix.sol,"tx.origin,"
SWC-134-Message call with hardcoded gas amount,burn,L81,DAppSCAN-source/contracts/Iosiro-Synthetix Aloith Release Smart Contract Audit/synthetix-ac7dafbf461695ad10f41cdb2bcc32d3b9fc9caf/contracts/NativeEtherWrapper.sol,NativeEtherWrapper.sol,msg.sender.transfer(address(this).balance); // SWC-134-Message call with hardcoded gas amount: L81
SWC-135-Code With No Effects,N/A,L1-159,DAppSCAN-source/contracts/Iosiro-Synthetix Alphard Release Smart Contract Audit/synthetix-f3537b973c51e1eb3556dd02619b31c0c24d4002/FeePoolState.sol,FeePoolState.sol,pragma solidity ^0.5.16;
SWC-135-Code With No Effects,sharePercent,L110-118,DAppSCAN-source/contracts/Iosiro-Synthetix Alphard Release Smart Contract Audit/synthetix-f3537b973c51e1eb3556dd02619b31c0c24d4002/SynthetixDebtShare.sol,SynthetixDebtShare.sol,function sharePercent(address account) external view returns (uint) {
SWC-135-Code With No Effects,finishSetup,L213 - L229,DAppSCAN-source/contracts/Iosiro-Synthetix Alphard Release Smart Contract Audit/synthetix-f3537b973c51e1eb3556dd02619b31c0c24d4002/SynthetixDebtShare.sol,SynthetixDebtShare.sol,"function _increaseBalance(address account, uint amount) internal {"
SWC-135-Code With No Effects,_deductBalance,L231 - L247,DAppSCAN-source/contracts/Iosiro-Synthetix Alphard Release Smart Contract Audit/synthetix-f3537b973c51e1eb3556dd02619b31c0c24d4002/SynthetixDebtShare.sol,SynthetixDebtShare.sol,"function _deductBalance(address account, uint amount) internal {"
SWC-111-Use of Deprecated Solidity Functions,closeCurrentFeePeriod,L257,DAppSCAN-source/contracts/Iosiro-Synthetix Didpha Release Smart Contract Audit/synthetix-d7b8c122f7aaa69918bb53d8c981eec98677f220/FeePool.sol,FeePool.sol,"require(_recentFeePeriodsStorage(0).startTime <= (now - getFeePeriodDuration()), ""Too early to close fee period"");"
SWC-101-Integer Overflow and Underflow,_isError,L946,DAppSCAN-source/contracts/Iosiro-Synthetix Didpha Release Smart Contract Audit/synthetix-d7b8c122f7aaa69918bb53d8c981eec98677f220/FuturesMarket.sol,FuturesMarket.sol,return 0 <= a * b;
SWC-111-Use of Deprecated Solidity Functions,_lastIssueEvent,L242,DAppSCAN-source/contracts/Iosiro-Synthetix Didpha Release Smart Contract Audit/synthetix-d7b8c122f7aaa69918bb53d8c981eec98677f220/Issuer.sol,Issuer.sol,return now >= _lastIssueEvent(account).add(getMinimumStakeTime());
SWC-101-Integer Overflow and Underflow,_formatAggregatorAnswer,L548-549,DAppSCAN-source/contracts/Iosiro-Synthetix Fomalhaut Release Smart Contract Audit/synthetix-95d73f7b74483e72fffe1f8ee90f037a2f7b8773/contracts/ExchangeRates.sol,ExchangeRates.sol,uint multiplier = 10**uint(18 - currencyKeyDecimals[currencyKey]);
SWC-134-Message call with hardcoded gas amount,withdrawCollateral,L504,DAppSCAN-source/contracts/Iosiro-Synthetix Fomalhaut Release Smart Contract Audit/synthetix-b1bbcf88cc3f49e5d67954003313ede4520ba00a/contracts/EtherCollateralsUSD.sol,EtherCollateralsUSD.sol,msg.sender.transfer(withdrawAmount); // SWC-134-Message call with hardcoded gas amount: L504
SWC-134-Message call with hardcoded gas amount,liquidateLoan,L588,DAppSCAN-source/contracts/Iosiro-Synthetix Fomalhaut Release Smart Contract Audit/synthetix-b1bbcf88cc3f49e5d67954003313ede4520ba00a/contracts/EtherCollateralsUSD.sol,EtherCollateralsUSD.sol,msg.sender.transfer(totalCollateralLiquidated); // SWC-134-Message call with hardcoded gas amount: L588
SWC-101-Integer Overflow and Underflow,_issueSynths,L671,DAppSCAN-source/contracts/Iosiro-Synthetix Kaus Release Smart Contract Audit/synthetix-0bae287386fe135eb9a38a7c4e7b6a6047fcd25e/Issuer.sol,Issuer.sol,debtCache().updateCachedsUSDDebt(int(amount));
SWC-101-Integer Overflow and Underflow,_burnSynths,L697,DAppSCAN-source/contracts/Iosiro-Synthetix Kaus Release Smart Contract Audit/synthetix-0bae287386fe135eb9a38a7c4e7b6a6047fcd25e/Issuer.sol,Issuer.sol,debtCache().updateCachedsUSDDebt(-int(amountBurnt));
SWC-111-Use of Deprecated Solidity Functions,onlyTemporaryOwner {,L14-L17,DAppSCAN-source/contracts/Iosiro-Synthetix Menkalinan Release Smart Contract Audit/synthetix-b88898909f8b7064f707609cd535f5caa1f7c5ae/TemporarilyOwned.sol,TemporarilyOwned.sol,modifier onlyTemporaryOwner {
SWC-111-Use of Deprecated Solidity Functions,_onlyTemporaryOwner,L19-22,DAppSCAN-source/contracts/Iosiro-Synthetix Menkalinan Release Smart Contract Audit/synthetix-b88898909f8b7064f707609cd535f5caa1f7c5ae/TemporarilyOwned.sol,TemporarilyOwned.sol,function _onlyTemporaryOwner() private view {
SWC-135-Code With No Effects,N/A,L1-9,DAppSCAN-source/contracts/Iosiro-Synthetix Mirfak Release Smart Contract Audit/synthetix-70ef93e3681b4fea4ac0dbd832485b576bdc1e43/EmptyEtherCollateral.sol,EmptyEtherCollateral.sol,pragma solidity ^0.5.16;
SWC-108-State Variable Default Visibility,N/A,L51-57,DAppSCAN-source/contracts/Iosiro-Synthetix Phase 2 Smart Contract Audit/synthetix-fdd4782ebebd7b4892c8a68000f76708d5d1aa7b/EternalStorage.sol,EternalStorage.sol,mapping(bytes32 => uint) UIntStorage;
SWC-101-Integer Overflow and Underflow,feePaid,L257-258,DAppSCAN-source/contracts/Iosiro-Synthetix Phase 2 Smart Contract Audit/synthetix-fdd4782ebebd7b4892c8a68000f76708d5d1aa7b/FeePool.sol,FeePool.sol,"require(_percent >= 0, ""Threshold should be positive"");"
SWC-108-State Variable Default Visibility,"s, otherwise their invocations can use stale values. */",L42,DAppSCAN-source/contracts/Iosiro-Synthetix Phase 2 Smart Contract Audit/synthetix-fdd4782ebebd7b4892c8a68000f76708d5d1aa7b/Proxyable.sol,Proxyable.sol,address messageSender;
SWC-114-Transaction Order Dependence,exchange,L434-440,DAppSCAN-source/contracts/Iosiro-Synthetix Phase 2 Smart Contract Audit/synthetix-fdd4782ebebd7b4892c8a68000f76708d5d1aa7b/Synthetix.sol,Synthetix.sol,if (protectionCircuit) {
SWC-135-Code With No Effects,N/A,L1-50,DAppSCAN-source/contracts/Iosiro-Synthetix Sargas Release Smart Contract Audit/synthetix-fa160ff7d78cc22cd289d7c512e98195c40768f7/CollateralState.sol,CollateralState.sol,pragma solidity ^0.5.16;
SWC-134-Message call with hardcoded gas amount,claim,L78,DAppSCAN-source/contracts/Iosiro-Synthetix Shaula Release Smart Contract Audit/synthetix-82cc39e4a005576e00c9684e6f69fe0f8b623811/contracts/CollateralEth.sol,CollateralEth.sol,msg.sender.transfer(amount);
SWC-107-Reentrancy,redeemWithTransfer,L51 - L58,DAppSCAN-source/contracts/Iosiro-Synthetix Vest Tool Smart Contract Audit/tokenvest-36573f264d42d4549b9f903a014783e01029c978/Vester.sol,Vester.sol,"function redeemWithTransfer(uint tokenId, address incomingTokenAddress, uint incomingTokenAmount) external {"
SWC-107-Reentrancy,mint,L128 - L132,DAppSCAN-source/contracts/Iosiro-Synthetix Vest Tool Smart Contract Audit/tokenvest-36573f264d42d4549b9f903a014783e01029c978/Vester.sol,Vester.sol,"function mint(address granteeAddress, uint64 startTimestamp, uint64 cliffTimestamp, uint128 vestAmount, uint128 totalAmount, uint128 amountRedeemed, uint32 vestInterval) external onlyOwner {"
SWC-101-Integer Overflow and Underflow,fund,L58,DAppSCAN-source/contracts/Iosiro-Thales Airdrop and Staking Smart Contract Audit/contracts-a7a15db435b70be959f36c64f4367d54d68f3848/VestingEscrow.sol,VestingEscrow.sol,unallocatedSupply -= _totalAmount;
SWC-111-Use of Deprecated Solidity Functions,rewardPerToken,L73,DAppSCAN-source/contracts/Iosiro-Timvi Governance Token and Distribution DAO Smart Contract Audit/Timvi-Governance-a6e5929701b5da5ef9980b668216410245da59b7/Distribution.sol,Distribution.sol,"return Math.min(now, periodFinish);"
SWC-111-Use of Deprecated Solidity Functions,notifyRewardAmount,L130-L135,DAppSCAN-source/contracts/Iosiro-Timvi Governance Token and Distribution DAO Smart Contract Audit/Timvi-Governance-a6e5929701b5da5ef9980b668216410245da59b7/Distribution.sol,Distribution.sol,if (now >= periodFinish) {
SWC-101-Integer Overflow and Underflow,notifyRewardAmount,L139,DAppSCAN-source/contracts/Iosiro-Timvi Governance Token and Distribution DAO Smart Contract Audit/Timvi-Governance-a6e5929701b5da5ef9980b668216410245da59b7/Distribution.sol,Distribution.sol,periodFinish = now.add(DURATION);
SWC-108-State Variable Default Visibility,N/A,L18,DAppSCAN-source/contracts/Iosiro-Timvi Smart Contract Audit/Timvi-9324706d1160996f7847e1989c8567168261382e/BondService.sol,BondService.sol,uint256 systemETH;
SWC-131-Presence of unused variables,N/A,L30,DAppSCAN-source/contracts/Iosiro-Timvi Smart Contract Audit/Timvi-9324706d1160996f7847e1989c8567168261382e/TimviSettings.sol,TimviSettings.sol,COMM_DIVIDER = 100000;
SWC-100-Function Default Visibility,stop,L86,DAppSCAN-source/contracts/Iosiro-TMC Token Smart Contract Audit/ERC20-Contract-b923cde02d2fd928760cc1e810410c2064fe1530/ERC20_Contract.sol,ERC20_Contract.sol,function stop() onlyOwner {
SWC-100-Function Default Visibility,start,L90,DAppSCAN-source/contracts/Iosiro-TMC Token Smart Contract Audit/ERC20-Contract-b923cde02d2fd928760cc1e810410c2064fe1530/ERC20_Contract.sol,ERC20_Contract.sol,function start() onlyOwner {
SWC-135-Code With No Effects,bid,L344,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-AUX Platform Security Audit/auction-contracts-0da231969b7f791cb1c131956b3f8886f860617b/DescendingPriceCryptoKitty.sol,DescendingPriceCryptoKitty.sol,function bid(uint256 auctionId) whenNotPaused onlyAcceptingBids(auctionId) whenNotPaused external payable {
SWC-114-Transaction Order Dependence,N/A,L1-481,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-AUX Platform Security Audit/auction-contracts-0da231969b7f791cb1c131956b3f8886f860617b/DescendingPriceERC20Auction.sol,DescendingPriceERC20Auction.sol,pragma solidity ^0.4.23;
SWC-135-Code With No Effects,bid,L245,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-AUX Platform Security Audit/auction-contracts-0da231969b7f791cb1c131956b3f8886f860617b/DescendingPriceERC20Auction.sol,DescendingPriceERC20Auction.sol,// Bidder must exist
SWC-135-Code With No Effects,N/A,L1-82,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-ICOVO Smart Contract Audit/DAICOVO-417b33a6159a21df73221dbdc942cbd73a9c2b06/IndividuallyCappedCrowdsale.sol,IndividuallyCappedCrowdsale.sol,pragma solidity ^0.4.18;
SWC-128-DoS With Block Gas Limit,getUserCap,L39,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-ICOVO Smart Contract Audit/DAICOVO-417b33a6159a21df73221dbdc942cbd73a9c2b06/IndividuallyCappedCrowdsale.sol,IndividuallyCappedCrowdsale.sol,for (uint256 i = 0; i < _beneficiaries.length; i++) {
SWC-135-Code With No Effects,N/A,L1-28,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-ICOVO Smart Contract Audit/DAICOVO-417b33a6159a21df73221dbdc942cbd73a9c2b06/MintedCrowdsale.sol,MintedCrowdsale.sol,pragma solidity ^0.4.18;
SWC-113-DoS with Failed Call,finalizeVoting ,L83 - L101,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-ICOVO Smart Contract Audit/DAICOVO-417b33a6159a21df73221dbdc942cbd73a9c2b06/Voting.sol,Voting.sol,function finalizeVoting () external {
SWC-113-DoS with Failed Call,isPassed ,"L134 - L140, ",DAppSCAN-source/contracts/New_Alchemy_Security_Audit-ICOVO Smart Contract Audit/DAICOVO-417b33a6159a21df73221dbdc942cbd73a9c2b06/Voting.sol,Voting.sol,function isPassed (uint256 pid) public constant returns(bool) {
SWC-114-Transaction Order Dependence,setSignatureValidatorApproval,L85,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-Right Mesh Smart Contract Audit/0x-monorepo-abd479dc68fa75719647db261130418725fd40d5/contracts/exchange/contracts/src/MixinSignatureValidator.sol,MixinSignatureValidator.sol,address signerAddress = _getCurrentContextAddress();
SWC-116-Block values as a proxy for time,isValidContribution,L148,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-The Abyss DAICO Smart Contract Audit (New)/abyss-daico-21d6232a802cd966b86629cadeac0b7f3816f719/Crowdsale.sol,Crowdsale.sol,function isValidContribution() internal view returns(bool) {
SWC-101-Integer Overflow and Underflow,N/A,all contract,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-The Rouge Project Smart Contract Audit/RougeTokens-b48becf0d0904e4bea3300115ecff33fcc0eec61/RGEToken.sol,RGEToken.sol,N/A
SWC-101-Integer Overflow and Underflow,startCrowdsaleY0,L43,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-The Rouge Project Smart Contract Audit/RougeTokens-b48becf0d0904e4bea3300115ecff33fcc0eec61/RGEToken.sol,RGEToken.sol,balances[crowdsale] = totalSupply - reserveY1 - reserveY2;
SWC-101-Integer Overflow and Underflow,endCrowdsale,L70,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-The Rouge Project Smart Contract Audit/RougeTokens-b48becf0d0904e4bea3300115ecff33fcc0eec61/RGEToken.sol,RGEToken.sol,reserveY2 += _unsold;
SWC-101-Integer Overflow and Underflow,burn,L81 - L82,DAppSCAN-source/contracts/New_Alchemy_Security_Audit-The Rouge Project Smart Contract Audit/RougeTokens-b48becf0d0904e4bea3300115ecff33fcc0eec61/RGEToken.sol,RGEToken.sol,balances[msg.sender] -= _value;
SWC-101-Integer Overflow and Underflow,_getReturn,L302-315,DAppSCAN-source/contracts/openzeppelin-1inch_Fixed_Rate_Swap/fixed-rate-swap-b1600f61b77b6051388e6fb2cb0be776c5bcf2d1/FixedRateSwap.sol,FixedRateSwap.sol,"function _getReturn(uint256 fromBalance, uint256 toBalance, uint256 inputAmount) private pure returns(uint256 outputAmount) {"
SWC-101-Integer Overflow and Underflow,_getVirtualAmountsForDepositImpl,L357,DAppSCAN-source/contracts/openzeppelin-1inch_Fixed_Rate_Swap/fixed-rate-swap-b1600f61b77b6051388e6fb2cb0be776c5bcf2d1/FixedRateSwap.sol,FixedRateSwap.sol,"shift = _checkVirtualAmountsFormula(x - dx, y + dy, xBalance + dx, yBalance - dy);"
SWC-101-Integer Overflow and Underflow,_powerHelper,L415-434,DAppSCAN-source/contracts/openzeppelin-1inch_Fixed_Rate_Swap/fixed-rate-swap-b1600f61b77b6051388e6fb2cb0be776c5bcf2d1/FixedRateSwap.sol,FixedRateSwap.sol,"function _checkVirtualAmountsFormula(uint256 x, uint256 y, uint256 xBalance, uint256 yBalance) private pure returns(int256) {"
SWC-135-Code With No Effects,doublePrice,"L23,27",DAppSCAN-source/contracts/openzeppelin-1inch_Limit_Order_Protocol/limit-order-protocol-4d94eea25e4dac6271bfd703096a5c4a4d899b4a/ChainlinkCalculator.sol,ChainlinkCalculator.sol,"require(oracle.latestTimestamp() + _ORACLE_EXPIRATION_TIME > block.timestamp, ""CC: stale data"");"
SWC-101-Integer Overflow and Underflow,init,L207,DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol,ACOToken.sol,underlyingPrecision = 10 ** uint256(underlyingDecimals);
SWC-114-Transaction Order Dependence,burnFrom,L441-L443,DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol,ACOToken.sol,"function burnFrom(address account, uint256 tokenAmount) external {"
SWC-128-DoS With Block Gas Limit,_mintToken,L570-L573,DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol,ACOToken.sol,if (!_accountHasCollateral(account)) {
SWC-135-Code With No Effects,_validateAndBurn,L741,DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol,ACOToken.sol,"require(balanceOf(account) > tokenData[account].amount, ""ACOToken::_validateAndBurn: Tokens compromised"");"
SWC-135-Code With No Effects,_getFormattedStrikePrice,L1018,DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol,ACOToken.sol,if (representativeAt <= int256(i)) {
SWC-135-Code With No Effects,N/A,L2-L96,DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/interfaces/IUniswapV2Router01.sol,IUniswapV2Router01.sol,pragma solidity ^0.6.6;
SWC-104-Unchecked Call Return Value,burn,L63,DAppSCAN-source/contracts/openzeppelin-Alpha_Finance_Homora_V2/alpha-homora-v2-contract-5efa332f2ecf8e9705c326cffda5305bc6f752f7/WMasterChef.sol,WMasterChef.sol,"IERC20(lpToken).approve(address(chef), uint(-1));"
SWC-104-Unchecked Call Return Value,getUnderlyingToken,L29,DAppSCAN-source/contracts/openzeppelin-Alpha_Finance_Homora_V2/alpha-homora-v2-contract-5efa332f2ecf8e9705c326cffda5305bc6f752f7/WStakingRewards.sol,WStakingRewards.sol,"IERC20(_underlying).approve(_staking, uint(-1));"
SWC-102-Outdated Compiler Version,safeMul,all contract,DAppSCAN-source/contracts/openzeppelin-Arcade_City_token/ac-token-dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/ARCToken.sol,ARCToken.sol,N/A
SWC-135-Code With No Effects,ARCToken,L167,DAppSCAN-source/contracts/openzeppelin-Arcade_City_token/ac-token-dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/ARCToken.sol,ARCToken.sol,uint public presaleEtherRaised = 0; //this will keep track of the Ether raised during the crowdsale
SWC-135-Code With No Effects,price,L188-204,DAppSCAN-source/contracts/openzeppelin-Arcade_City_token/ac-token-dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/ARCToken.sol,ARCToken.sol,function price() constant returns(uint) {
SWC-107-Reentrancy,buyRecipient,L231,DAppSCAN-source/contracts/openzeppelin-Arcade_City_token/ac-token-dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/ARCToken.sol,ARCToken.sol,if (!multisig.call.value(msg.value)()) throw; //immediately send Ether to multisig address
SWC-102-Outdated Compiler Version,totalSupply,all contract,DAppSCAN-source/contracts/openzeppelin-Arcade_City_token/ac-token-dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/TokenVesting.sol,TokenVesting.sol,N/A
SWC-119-Shadowing State Variables,sendTokens,"L133,190",DAppSCAN-source/contracts/openzeppelin-Arcade_City_token/ac-token-dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/TokenVesting.sol,TokenVesting.sol,uint256 public vestAmount;
SWC-123-Requirement Violation,_decreaseRequestIsPending,L779,DAppSCAN-source/contracts/openzeppelin-Audius_Contracts/audius-protocol-6f3b31562b9d4c43cef91af0a011986a2580fba2/ServiceProviderFactory.sol,ServiceProviderFactory.sol,require(
SWC-135-Code With No Effects,initialize,"L34,35",DAppSCAN-source/contracts/openzeppelin-Audius_Contracts/audius-protocol-6f3b31562b9d4c43cef91af0a011986a2580fba2/ServiceTypeManager.sol,ServiceTypeManager.sol,"event Test(string msg, bool value);"
SWC-108-State Variable Default Visibility,N/A,L39-42,DAppSCAN-source/contracts/openzeppelin-Audius_Contracts/audius-protocol-6f3b31562b9d4c43cef91af0a011986a2580fba2/Staking.sol,Staking.sol,address governanceAddress;
SWC-126-Insufficient Gas Griefing,_beforeProviderOp,L439-451,DAppSCAN-source/contracts/openzeppelin-BarnBridge_Smart_Yield_Bonds/BarnBridge-SmartYieldBonds-943df3a8fcd8dd128af3beb0c85a0480c0e95ead/SmartYield.sol,SmartYield.sol,function _beforeProviderOp() internal {
SWC-102-Outdated Compiler Version,N/A,"L1,all contract",DAppSCAN-source/contracts/openzeppelin-Basic_Attention_Token/basic-attention-token-crowdsale-17a5f8440a256a6dc5d8dd894b9615182c2901b2/BAToken.sol,BAToken.sol,pragma solidity ^0.4.10;
SWC-116-Block values as a proxy for time,N/A,L19-20,DAppSCAN-source/contracts/openzeppelin-Basic_Attention_Token/basic-attention-token-crowdsale-17a5f8440a256a6dc5d8dd894b9615182c2901b2/BAToken.sol,BAToken.sol,uint256 public fundingStartBlock;
SWC-135-Code With No Effects,createTokens,"L58,61,79",DAppSCAN-source/contracts/openzeppelin-Basic_Attention_Token/basic-attention-token-crowdsale-17a5f8440a256a6dc5d8dd894b9615182c2901b2/BAToken.sol,BAToken.sol,"Transfer(0, msg.sender, tokens); // logs transfer"
SWC-101-Integer Overflow and Underflow,refund,L84-85,DAppSCAN-source/contracts/openzeppelin-Basic_Attention_Token/basic-attention-token-crowdsale-17a5f8440a256a6dc5d8dd894b9615182c2901b2/BAToken.sol,BAToken.sol,totalSupply -= batVal;
SWC-102-Outdated Compiler Version,N/A,L2-L96,DAppSCAN-source/contracts/openzeppelin-Blockchain_Capital_Token/BCAPToken-5cb5e76338cc47343ba9268663a915337c8b268e/sol/BCAPToken.sol,BCAPToken.sol,/*
SWC-135-Code With No Effects,transferFrom ,L91 ,DAppSCAN-source/contracts/openzeppelin-Blockchain_Capital_Token/BCAPToken-5cb5e76338cc47343ba9268663a915337c8b268e/sol/BCAPToken.sol,BCAPToken.sol,address owner;
SWC-128-DoS With Block Gas Limit,revokeVotes,L673-L694,DAppSCAN-source/contracts/openzeppelin-Celo_Contracts_Audit_Release_4/celo-monorepo-f64b4c5b5228ecbf41e3e7cfdbb8c0e9a983eea2/packages/protocol/contracts/governance/Governance.sol,Governance.sol,function revokeVotes() external nonReentrant returns (bool) {
SWC-123-Requirement Violation,revokeVotes,L685,DAppSCAN-source/contracts/openzeppelin-Celo_Contracts_Audit_Release_4/celo-monorepo-f64b4c5b5228ecbf41e3e7cfdbb8c0e9a983eea2/packages/protocol/contracts/governance/Governance.sol,Governance.sol,"require(stage == Proposals.Stage.Referendum, ""Incorrect proposal state"");"
SWC-104-Unchecked Call Return Value,makeCall,L26,DAppSCAN-source/contracts/openzeppelin-Celo_Contracts_Audit_Release_4/celo-monorepo-f64b4c5b5228ecbf41e3e7cfdbb8c0e9a983eea2/packages/protocol/contracts/identity/IdentityProxy.sol,IdentityProxy.sol,"ExternalCall.execute(destination, msg.value, data);"
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/openzeppelin-Coinfix_Token/coinfix.io-smart-contracts-75edd659ce96c88fe2784f3e767d6617787e8b7c/merchant_subscription/MerchantSubscription.sol,MerchantSubscription.sol,pragma solidity ^0.4.11;
SWC-108-State Variable Default Visibility,N/A,"L19,22,25",DAppSCAN-source/contracts/openzeppelin-Compound_Open_Oracle/open-oracle-e7a928334e5e454a88eec38e4ee1be5ee3b13f08/DelFiPrice.sol,DelFiPrice.sol,address anchor;
SWC-135-Code With No Effects,source,L9-28,DAppSCAN-source/contracts/openzeppelin-Compound_Open_Oracle/open-oracle-e7a928334e5e454a88eec38e4ee1be5ee3b13f08/OpenOracleData.sol,OpenOracleData.sol,/**
SWC-101-Integer Overflow and Underflow,N/A,L9-L133,DAppSCAN-source/contracts/openzeppelin-COSMOS_Fundraiser/fundraiser-lib-693cf3f32e9fd679216372876dda86fa57a3277e/src/truffle/contracts/Fundraiser.sol,Fundraiser.sol,pragma solidity ^0.4.7;
SWC-102-Outdated Compiler Version,N/A,L9-L133,DAppSCAN-source/contracts/openzeppelin-COSMOS_Fundraiser/fundraiser-lib-693cf3f32e9fd679216372876dda86fa57a3277e/src/truffle/contracts/Fundraiser.sol,Fundraiser.sol,pragma solidity ^0.4.7;
SWC-107-Reentrancy,donate,L95,DAppSCAN-source/contracts/openzeppelin-COSMOS_Fundraiser/fundraiser-lib-693cf3f32e9fd679216372876dda86fa57a3277e/src/truffle/contracts/Fundraiser.sol,Fundraiser.sol,if (!treasury.call.value(msg.value)()) throw;
SWC-114-Transaction Order Dependence,burn,L17-22,DAppSCAN-source/contracts/openzeppelin-Decentraland_MANA_Token/mana-a13905356378cc0153dd3c2153c8ceae6400970d/BurnableToken.sol,BurnableToken.sol,function burn(uint256 _value) {
SWC-114-Transaction Order Dependence,prepareContinuousPurchase,L33,DAppSCAN-source/contracts/openzeppelin-Decentraland_MANA_Token/mana-a13905356378cc0153dd3c2153c8ceae6400970d/ContinuousCrowdsale.sol,ContinuousCrowdsale.sol,require(validPurchase());
SWC-101-Integer Overflow and Underflow,processPurchase,L49,DAppSCAN-source/contracts/openzeppelin-Decentraland_MANA_Token/mana-a13905356378cc0153dd3c2153c8ceae6400970d/ContinuousCrowdsale.sol,ContinuousCrowdsale.sol,bucketAmount += tokens;
SWC-135-Code With No Effects,,L76-93,DAppSCAN-source/contracts/openzeppelin-Decentraland_MANA_Token/mana-a13905356378cc0153dd3c2153c8ceae6400970d/MANACrowdsale.sol,MANACrowdsale.sol,function processPurchase(address beneficiary) internal returns(uint256) {
SWC-135-Code With No Effects,handleOp,L52-78,DAppSCAN-source/contracts/openzeppelin-EIP-4337-Ethereum_Account_Abstraction/account-abstraction-8832d6e04b9f4f706f612261c6e46b3f1745d61a/EntryPoint.sol,EntryPoint.sol,"function handleOp(UserOperation calldata op, address payable beneficiary) public {"
SWC-101-Integer Overflow and Underflow,handleOp,"L56-77, 95-113, 236-261, 266-282, 319-349",DAppSCAN-source/contracts/openzeppelin-EIP-4337-Ethereum_Account_Abstraction/account-abstraction-8832d6e04b9f4f706f612261c6e46b3f1745d61a/EntryPoint.sol,EntryPoint.sol,unchecked {
SWC-123-Requirement Violation,onlyAdminOrRole,L48,DAppSCAN-source/contracts/openzeppelin-Endaoment/endaoment-contracts-f60aa253d3d869ad6460877f23e6092acb313add/Administratable.sol,Administratable.sol,"require(msg.sender == endaomentAdmin.getRoleAddress(IEndaomentAdmin.Role.ADMIN), ""Only ADMIN can access"");"
SWC-107-Reentrancy,finalizeGrant,L119-134,DAppSCAN-source/contracts/openzeppelin-Endaoment/endaoment-contracts-f60aa253d3d869ad6460877f23e6092acb313add/Fund.sol,Fund.sol,"function finalizeGrant(uint index, address tokenAddress, address adminContractAddress) public onlyAdminOrRole(adminContractAddress, IEndaomentAdmin.Role.ACCOUNTANT){"
SWC-135-Code With No Effects,N/A,L6,DAppSCAN-source/contracts/openzeppelin-Endaoment/endaoment-contracts-f60aa253d3d869ad6460877f23e6092acb313add/FundFactory.sol,FundFactory.sol,"import ""./OrgFactory.sol"";"
SWC-135-Code With No Effects,N/A,L1-34,DAppSCAN-source/contracts/openzeppelin-Endaoment/endaoment-contracts-f60aa253d3d869ad6460877f23e6092acb313add/SafeMath.sol,SafeMath.sol,// SPDX-License-Identifier: BSD 3-Clause
SWC-101-Integer Overflow and Underflow,N/A,L1-165,DAppSCAN-source/contracts/openzeppelin-EtherCamp_Hacker_Gold/virtual-accelerator-2529ffe5efd5294b44f1bc89dc9a4721a7b16409/HackerGold.sol,HackerGold.sol,
SWC-135-Code With No Effects,N/A,L30,DAppSCAN-source/contracts/openzeppelin-EtherCamp_Hacker_Gold/virtual-accelerator-2529ffe5efd5294b44f1bc89dc9a4721a7b16409/HackerGold.sol,HackerGold.sol,uint totalValue;
SWC-135-Code With No Effects,createHKG,L90,DAppSCAN-source/contracts/openzeppelin-EtherCamp_Hacker_Gold/virtual-accelerator-2529ffe5efd5294b44f1bc89dc9a4721a7b16409/HackerGold.sol,HackerGold.sol,uint tokens = msg.value / 1000000000000000 * getPrice();
SWC-102-Outdated Compiler Version,N/A,L1,DAppSCAN-source/contracts/openzeppelin-EtherCamp_ProjectKudos_public_code/virtual-accelerator-6665fdd4b71088443a74d1ed9fda52c6a8c8b975/ProjectKudos.sol,ProjectKudos.sol,pragma solidity ^0.4.0;
SWC-135-Code With No Effects,N/A,"L20-24,281-303,313-320",DAppSCAN-source/contracts/openzeppelin-EtherCamp_ProjectKudos_public_code/virtual-accelerator-6665fdd4b71088443a74d1ed9fda52c6a8c8b975/ProjectKudos.sol,ProjectKudos.sol,enum GrantReason {
SWC-135-Code With No Effects,duringVote,L330-334,DAppSCAN-source/contracts/openzeppelin-EtherCamp_ProjectKudos_public_code/virtual-accelerator-6665fdd4b71088443a74d1ed9fda52c6a8c8b975/ProjectKudos.sol,ProjectKudos.sol,modifier duringVote() {
SWC-116-Block values as a proxy for time,onlyOwner,"L331,332",DAppSCAN-source/contracts/openzeppelin-EtherCamp_ProjectKudos_public_code/virtual-accelerator-6665fdd4b71088443a74d1ed9fda52c6a8c8b975/ProjectKudos.sol,ProjectKudos.sol,if (now < votePeriod.start) throw;
SWC-108-State Variable Default Visibility,init,L22,DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/BondingCurveOrchestrator.sol,BondingCurveOrchestrator.sol,ratios[0] = 10000;
SWC-102-Outdated Compiler Version,N/A,"L1, all contract",DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/Core.sol,Core.sol,pragma solidity ^0.6.0;
SWC-135-Code With No Effects,N/A,L7,DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/Core.sol,Core.sol,"import ""../token/IFei.sol"";"
SWC-123-Requirement Violation,allocateTribe,L41,DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/Core.sol,Core.sol,"require(_tribe.balanceOf(address(this)) > amount, ""Core: Not enough Tribe"");"
SWC-135-Code With No Effects,N/A,L12,DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/Fei.sol,Fei.sol,"contract Fei is IFei, ERC20, ERC20Burnable, CoreRef {"
SWC-132-Unexpected Ether balance,purchase,L80-87,DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/GenesisGroup.sol,GenesisGroup.sol,"function purchase(address to, uint value) external override payable onlyGenesisPeriod {"
SWC-106-Unprotected SELFDESTRUCT Instruction,redeem,L89-103,DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/GenesisGroup.sol,GenesisGroup.sol,function redeem(address to) external override postGenesis {
SWC-116-Block values as a proxy for time,votingPeriod,L24,DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/GovernorAlpha.sol,GovernorAlpha.sol,function votingPeriod() public pure returns (uint) { return 17280; } // ~3 days in blocks (assuming 15s blocks)
SWC-101-Integer Overflow and Underflow,alreadyReleasedAmount,L60,DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/LinearTokenTimelock.sol,LinearTokenTimelock.sol,function alreadyReleasedAmount() public view returns(uint) {
SWC-105-Unprotected Ether Withdrawal,burnFrom,L93-98,DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/Pool.sol,Pool.sol,"function burnFrom(address account, uint amount) public override {"
SWC-123-Requirement Violation,_totalRedeemablePoolTokens,L100-112,DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/Pool.sol,Pool.sol,function _totalRedeemablePoolTokens() internal view returns(uint) {
SWC-104-Unchecked Call Return Value,_deposit,"L120,134",DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/Pool.sol,Pool.sol,"stakedToken.transferFrom(from, address(this), amount);"
SWC-101-Integer Overflow and Underflow,cubeRoot,L8,DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/Roots.sol,Roots.sol,function cubeRoot(uint y) internal pure returns (uint z) {
SWC-135-Code With No Effects,getDistanceToPeg,L171,DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/UniRef.sol,UniRef.sol,function getDistanceToPeg() internal view returns(Decimal.D256 memory distance) {
SWC-135-Code With No Effects,getGrowthRate,"L76,77",DAppSCAN-source/contracts/openzeppelin-Fei_Protocol/fei-protocol-core-29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/UniswapIncentive.sol,UniswapIncentive.sol,// TimeWeightInfo memory tw = timeWeightInfo;
SWC-104-Unchecked Call Return Value,closeCrowdfund,L84,DAppSCAN-source/contracts/openzeppelin-Fuel_Token/FUEL-Contracts-3717b751bb2fa57ae300776a93ee4d7d7beb2c07/FuelCrowdfund.sol,FuelCrowdfund.sol,token.finalizeCrowdfund();
SWC-114-Transaction Order Dependence,finalizePresale,L189,DAppSCAN-source/contracts/openzeppelin-Fuel_Token/FUEL-Contracts-3717b751bb2fa57ae300776a93ee4d7d7beb2c07/FuelToken.sol,FuelToken.sol,function finalizePresale() external onlyOwner returns (bool success) {
SWC-101-Integer Overflow and Underflow,N/A,L1-69,DAppSCAN-source/contracts/openzeppelin-Golem_Network_Token/golem-crowdfunding-50100b27a7c6841ed430a028d100f5d45ba08fb1/GNTAllocation.sol,GNTAllocation.sol,pragma solidity ^0.4.4;
SWC-116-Block values as a proxy for time,GNTAllocation,L22,DAppSCAN-source/contracts/openzeppelin-Golem_Network_Token/golem-crowdfunding-50100b27a7c6841ed430a028d100f5d45ba08fb1/GNTAllocation.sol,GNTAllocation.sol,unlockedAt = now + 6 * 30 days;
SWC-135-Code With No Effects,finalize,"L158-165,194-196",DAppSCAN-source/contracts/openzeppelin-Golem_Network_Token/golem-crowdfunding-50100b27a7c6841ed430a028d100f5d45ba08fb1/Token.sol,Token.sol,totalTokens += numTokens;
SWC-100-Function Default Visibility,to Get in touch with Holdefi contract,L14-17,DAppSCAN-source/contracts/openzeppelin-Holdefi/Holdefi-f4df394d7cf6df347b1f1e9af8e2676c5933c2c9/CollateralsWallet.sol,CollateralsWallet.sol,function setHoldefiContract(address holdefiContractAddress) external {
SWC-134-Message call with hardcoded gas amount,withdrawSupply ,"L214, 325, 397",DAppSCAN-source/contracts/openzeppelin-Holdefi/Holdefi-f4df394d7cf6df347b1f1e9af8e2676c5933c2c9/Holdefi.sol,Holdefi.sol,msg.sender.transfer(transferAmount);
SWC-134-Message call with hardcoded gas amount,withdrawPromotionReserve ,L778,DAppSCAN-source/contracts/openzeppelin-Holdefi/Holdefi-f4df394d7cf6df347b1f1e9af8e2676c5933c2c9/Holdefi.sol,Holdefi.sol,msg.sender.transfer(amount);
SWC-100-Function Default Visibility,s,L65-71,DAppSCAN-source/contracts/openzeppelin-Holdefi/Holdefi-f4df394d7cf6df347b1f1e9af8e2676c5933c2c9/HoldefiPauser.sol,HoldefiPauser.sol,function batchPause(bool[8] memory newPaused) public onlyPausers {
SWC-100-Function Default Visibility,s,L74-80,DAppSCAN-source/contracts/openzeppelin-Holdefi/Holdefi-f4df394d7cf6df347b1f1e9af8e2676c5933c2c9/HoldefiPauser.sol,HoldefiPauser.sol,function batchUnpause(bool[8] memory newUnpaused) public onlyOwner {
SWC-100-Function Default Visibility,,L47-49,DAppSCAN-source/contracts/openzeppelin-Holdefi/Holdefi-f4df394d7cf6df347b1f1e9af8e2676c5933c2c9/HoldefiPrices.sol,HoldefiPrices.sol,function addStableCoin(address asset) public onlyOwner {
SWC-100-Function Default Visibility,getMarket,L120-122,DAppSCAN-source/contracts/openzeppelin-Holdefi/Holdefi-f4df394d7cf6df347b1f1e9af8e2676c5933c2c9/HoldefiSettings.sol,HoldefiSettings.sol,function getMarket(address market) external view returns (bool active){
SWC-114-Transaction Order Dependence,,"L26-31,34-42",DAppSCAN-source/contracts/openzeppelin-Holdefi/Holdefi-f4df394d7cf6df347b1f1e9af8e2676c5933c2c9/Ownable.sol,Ownable.sol,function transferOwnership(address newOwner) external onlyOwner {
SWC-102-Outdated Compiler Version,N/A,L1,DAppSCAN-source/contracts/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/Crowdsale.sol,Crowdsale.sol,pragma solidity ^0.4.11;
SWC-101-Integer Overflow and Underflow,preallocate,L241,DAppSCAN-source/contracts/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/Crowdsale.sol,Crowdsale.sol,uint tokenAmount = fullTokens * 10**token.decimals();
SWC-116-Block values as a proxy for time,isCrowdsale,"L484,485",DAppSCAN-source/contracts/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/Crowdsale.sol,Crowdsale.sol,else if (block.timestamp < startsAt) return State.PreFunding;
SWC-109-Uninitialized Storage Pointer,N/A,L10-360,DAppSCAN-source/contracts/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol,MultiSigWallet.sol,contract MultiSigWallet {
SWC-102-Outdated Compiler Version,N/A,L1,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/Crowdsale.sol,Crowdsale.sol,pragma solidity ^0.4.8;
SWC-101-Integer Overflow and Underflow,N/A,L1-305,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/Crowdsale.sol,Crowdsale.sol,pragma solidity ^0.4.8;
SWC-116-Block values as a proxy for time,minCapNotReached,L69,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/Crowdsale.sol,Crowdsale.sol,if ((now<endBlock) || isMinCapReached() || (now > endBlock + 15 days)) throw;
SWC-116-Block values as a proxy for time,,L116、145、295,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/Crowdsale.sol,Crowdsale.sol,startBlock = now ;            // now (testnet)
SWC-135-Code With No Effects,isMaxCapReached,L209-211,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/Crowdsale.sol,Crowdsale.sol,function isMaxCapReached() internal returns (bool) {
SWC-102-Outdated Compiler Version,N/A,L1,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/RLC.sol,RLC.sol,pragma solidity ^0.4.8;
SWC-116-Block values as a proxy for time,RLC,L37,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/RLC.sol,RLC.sol,unlockBlock=  now + 45 days; // (testnet) - for mainnet put the block number
SWC-116-Block values as a proxy for time,unlock,L49,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/RLC.sol,RLC.sol,if (now < unlockBlock) throw; //SWC-116-Block values as a proxy for time:L49
SWC-135-Code With No Effects,transfer,L62-L67,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/RLC.sol,RLC.sol,"function transfer(address _to, uint _value) onlyUnlocked returns (bool success) {"
SWC-135-Code With No Effects,transferFrom,L69-L76,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/RLC.sol,RLC.sol,"function transferFrom(address _from, address _to, uint _value) onlyUnlocked returns (bool success) {"
SWC-135-Code With No Effects,balanceOf,L79-L81,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/RLC.sol,RLC.sol,function balanceOf(address _owner) constant returns (uint balance) {
SWC-135-Code With No Effects,approve,L83-L87,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/RLC.sol,RLC.sol,"function approve(address _spender, uint _value) returns (bool success) {"
SWC-135-Code With No Effects,allowance,L97-L99,DAppSCAN-source/contracts/openzeppelin-iExec_RLC_Token/rlc-token-3d9aa99ba33bb035c59740a621b1f21cd45cbac5/RLC.sol,RLC.sol,"function allowance(address _owner, address _spender) constant returns (uint remaining) {"
SWC-128-DoS With Block Gas Limit,addTokenGrant,L148-161、165-179,DAppSCAN-source/contracts/openzeppelin-Kin_Token/kin-token-3ed3a383b9304274ec22f41769716cadb854727f/KinTokenSale.sol,KinTokenSale.sol,"function addTokenGrant(address _grantee, uint256 _value) external onlyOwner {"
SWC-102-Outdated Compiler Version,N/A,L5,DAppSCAN-source/contracts/openzeppelin-Moeda_Token/moeda-contracts-b2bf23119d563e251b6f16b29b642bac43e76a64/Crowdsale.sol,Crowdsale.sol,pragma solidity ^0.4.8;
SWC-135-Code With No Effects,getLimitAndRate,L91,DAppSCAN-source/contracts/openzeppelin-Moeda_Token/moeda-contracts-b2bf23119d563e251b6f16b29b642bac43e76a64/Crowdsale.sol,Crowdsale.sol,throw; // this shouldn't happen
SWC-101-Integer Overflow and Underflow,create,L51,DAppSCAN-source/contracts/openzeppelin-Moeda_Token/moeda-contracts-b2bf23119d563e251b6f16b29b642bac43e76a64/MoedaToken.sol,MoedaToken.sol,if (totalSupply + amount > MAX_TOKENS) throw;
SWC-135-Code With No Effects,N/A,L10,DAppSCAN-source/contracts/openzeppelin-Notional/contracts-b6fc6be4622422d0e34c90e77f2ec9da18596b8c/ERC1155Token.sol,ERC1155Token.sol,"import ""./CashMarket.sol"";"
SWC-101-Integer Overflow and Underflow,listCurrency,L207,DAppSCAN-source/contracts/openzeppelin-Notional/contracts-b6fc6be4622422d0e34c90e77f2ec9da18596b8c/Escrow.sol,Escrow.sol,maxCurrencyId++;
SWC-128-DoS With Block Gas Limit,N/A,L61,DAppSCAN-source/contracts/openzeppelin-Notional/contracts-b6fc6be4622422d0e34c90e77f2ec9da18596b8c/EscrowStorage.sol,EscrowStorage.sol,uint16 public maxCurrencyId;
SWC-135-Code With No Effects,_convertToETH,L49,DAppSCAN-source/contracts/openzeppelin-Notional/contracts-b6fc6be4622422d0e34c90e77f2ec9da18596b8c/ExchangeRate.sol,ExchangeRate.sol,uint128 absBalance = uint128(balance.abs());
SWC-131-Presence of unused variables,N/A,L33,DAppSCAN-source/contracts/openzeppelin-Notional/contracts-b6fc6be4622422d0e34c90e77f2ec9da18596b8c/Liquidation.sol,Liquidation.sol,struct CollateralCurrencyParameters {
SWC-125-Incorrect Inheritance Order,N/A,L1-77,DAppSCAN-source/contracts/openzeppelin-Notional/contracts-b6fc6be4622422d0e34c90e77f2ec9da18596b8c/Ownable.sol,Ownable.sol,pragma solidity ^0.6.0;
SWC-101-Integer Overflow and Underflow,getRequirement,L81,DAppSCAN-source/contracts/openzeppelin-Notional/contracts-b6fc6be4622422d0e34c90e77f2ec9da18596b8c/RiskFramework.sol,RiskFramework.sol,uint32 maturity = initialMaturity + cashGroups[i].maturityLength * uint32(j);
SWC-101-Integer Overflow and Underflow,transfer,L135,DAppSCAN-source/contracts/openzeppelin-Notional_Governance_Contracts_v2/contracts-v2-c37c89c9729b830637558a09b6f22fc6a735da64/NoteERC20.sol,NoteERC20.sol,return balances[account];
SWC-131-Presence of unused variables,N/A,L39,DAppSCAN-source/contracts/openzeppelin-OpenBazaar’s_Escrow/smart-contracts-c4f02cdd41cb85d28bba637a01f20a8ee8bb04bd/contracts/escrow/Escrow_v1_0.sol,Escrow_v1_0.sol,bytes32 scriptHash;//This is unique indentifier for a transaction
SWC-135-Code With No Effects,transferFunds,L491,DAppSCAN-source/contracts/openzeppelin-OpenBazaar’s_Escrow/smart-contracts-c4f02cdd41cb85d28bba637a01f20a8ee8bb04bd/contracts/escrow/Escrow_v1_0.sol,Escrow_v1_0.sol,} else {
SWC-104-Unchecked Call Return Value,_handleInitiateDeposit,L76-L81,DAppSCAN-source/contracts/openzeppelin-Optimism/contracts-18e128343731b9bde23812ce932e24d81440b6b7/contracts/optimistic-ethereum/OVM/bridge/tokens/OVM_L1ERC20Gateway.sol,OVM_L1ERC20Gateway.sol,//SWC-104-Unchecked Call Return Value: L76-L81
SWC-104-Unchecked Call Return Value,_handleFinalizeWithdrawal,L100,DAppSCAN-source/contracts/openzeppelin-Optimism/contracts-18e128343731b9bde23812ce932e24d81440b6b7/contracts/optimistic-ethereum/OVM/bridge/tokens/OVM_L1ERC20Gateway.sol,OVM_L1ERC20Gateway.sol,"l1ERC20.transfer(_to, _amount);"
SWC-104-Unchecked Call Return Value,N/A,L26-L30,DAppSCAN-source/contracts/openzeppelin-Optimism/contracts-18e128343731b9bde23812ce932e24d81440b6b7/contracts/optimistic-ethereum/OVM/precompiles/OVM_ProxySequencerEntrypoint.sol,OVM_ProxySequencerEntrypoint.sol,Lib_SafeExecutionManagerWrapper.safeDELEGATECALL(
SWC-104-Unchecked Call Return Value,N/A,L63-L70,DAppSCAN-source/contracts/openzeppelin-Optimism/contracts-18e128343731b9bde23812ce932e24d81440b6b7/contracts/optimistic-ethereum/OVM/precompiles/OVM_SequencerEntrypoint.sol,OVM_SequencerEntrypoint.sol,Lib_SafeExecutionManagerWrapper.safeCALL(
SWC-101-Integer Overflow and Underflow,N/A,510,DAppSCAN-source/contracts/openzeppelin-Opyn_Contracts/Convexity-Protocol-Archived-c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol,OptionsContract.sol,N/A
SWC-101-Integer Overflow and Underflow,isSafe,583,DAppSCAN-source/contracts/openzeppelin-Opyn_Contracts/Convexity-Protocol-Archived-c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol,OptionsContract.sol,N/A
SWC-107-Reentrancy,_runActions,L451-L508,DAppSCAN-source/contracts/openzeppelin-Opyn_Gamma_Protocol/GammaProtocol-d151621b33134789b29dc78eb89dad2b557b25b9/contracts/Controller.sol,Controller.sol,function _runActions(Actions.ActionArgs[] memory _actions)
SWC-108-State Variable Default Visibility,createOtoken,L65,DAppSCAN-source/contracts/openzeppelin-Opyn_Gamma_Protocol/GammaProtocol-d151621b33134789b29dc78eb89dad2b557b25b9/contracts/OtokenFactory.sol,OtokenFactory.sol,"require(_expiry < 11865398400, ""OtokenFactory: Can't create option with expiry > 2345/12/31"");"
SWC-126-Insufficient Gas Griefing,operate,L74,DAppSCAN-source/contracts/openzeppelin-Opyn_Gamma_Protocol/GammaProtocol-d151621b33134789b29dc78eb89dad2b557b25b9/contracts/external/proxies/PayableProxyController.sol,PayableProxyController.sol,sendEthTo.transfer(remainingWeth);
SWC-101-Integer Overflow and Underflow,price,L32,DAppSCAN-source/contracts/openzeppelin-Origin_Dollar/origin-dollar-bf4ff28d5944ecc277e66294fd2c702fee5cd58b/contracts/contracts/oracle/OracleRouter.sol,OracleRouter.sol,uint256 _price = uint256(_iprice);
SWC-101-Integer Overflow and Underflow,airdropTokens,L121,DAppSCAN-source/contracts/openzeppelin-Polymath/polymath-token-672fabe081e8f90ea025252d92c2eb247d60010e/contracts/PolyDistribution.sol,PolyDistribution.sol,for(uint8 i = 0; i< _recipient.length; i++)
SWC-114-Transaction Order Dependence,rewardAndOpenNextDraw,L307-L310,DAppSCAN-source/contracts/openzeppelin-PoolTogether/pooltogether-pool-contracts-78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol,BasePool.sol,"function rewardAndOpenNextDraw(bytes32 nextSecretHash, bytes32 lastSecret, bytes32 _salt) public onlyAdmin {"
SWC-114-Transaction Order Dependence,reward,L323-L374,DAppSCAN-source/contracts/openzeppelin-PoolTogether/pooltogether-pool-contracts-78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol,BasePool.sol,"function reward(bytes32 _secret, bytes32 _salt) public onlyAdmin requireCommittedNoReward nonReentrant {"
SWC-101-Integer Overflow and Underflow,calculateFee,L414-L415,DAppSCAN-source/contracts/openzeppelin-PoolTogether/pooltogether-pool-contracts-78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol,BasePool.sol,int256 grossWinningsFixed = FixidityLib.newFixed(int256(_grossWinnings));
SWC-108-State Variable Default Visibility,N/A,L25-L26,DAppSCAN-source/contracts/openzeppelin-PoolTogether/pooltogether-pool-contracts-78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/RecipientWhitelistERC777Pool.sol,RecipientWhitelistERC777Pool.sol,bool _recipientWhitelistEnabled;
SWC-128-DoS With Block Gas Limit,submitDailyRewards,L152-L199,DAppSCAN-source/contracts/openzeppelin-PROPS_Rewards_Engine_Contracts/props-token-distribution-e5ce0b2df1fbe108458d86820da578db56ac28d1/contracts/token/PropsRewards.sol,PropsRewards.sol,function submitDailyRewards(
SWC-135-Code With No Effects,N/A,L43-L44,DAppSCAN-source/contracts/openzeppelin-PROPS_Rewards_Engine_Contracts/props-token-distribution-e5ce0b2df1fbe108458d86820da578db56ac28d1/contracts/token/PropsRewardsLib.sol,PropsRewardsLib.sol,address[] currentList;
SWC-114-Transaction Order Dependence,start_ownership_transfer,L39-L57,DAppSCAN-source/contracts/openzeppelin-Recoverable_Wallet/recoverable-wallet-2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol,recoverable-wallet.sol,function start_ownership_transfer(address _pending_owner) external only_owner {
SWC-131-Presence of unused variables,N/A,L68,DAppSCAN-source/contracts/openzeppelin-Recoverable_Wallet/recoverable-wallet-2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol,recoverable-wallet.sol,//SWC-131-Presence of unused variables: L68
SWC-114-Transaction Order Dependence,add_recovery_address,L88-L128,DAppSCAN-source/contracts/openzeppelin-Recoverable_Wallet/recoverable-wallet-2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol,recoverable-wallet.sol,
SWC-135-Code With No Effects,finish_recovery,L124,DAppSCAN-source/contracts/openzeppelin-Recoverable_Wallet/recoverable-wallet-2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol,recoverable-wallet.sol,"require(active_recovery_address != address(0), ""No recovery in progress."");"
SWC-131-Presence of unused variables,reset_recovery,L146,DAppSCAN-source/contracts/openzeppelin-Recoverable_Wallet/recoverable-wallet-2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol,recoverable-wallet.sol,return _result;
SWC-119-Shadowing State Variables,initiateWithdraw,L308,DAppSCAN-source/contracts/openzeppelin-Ribbon_Finance/ribbon-v2-3fa3bec15ad1e2b18ad87f979b87a68368497f13/contracts/vaults/base/RibbonVault.sol,RibbonVault.sol,function initiateWithdraw(uint128 shares) external nonReentrant {
SWC-119-Shadowing State Variables,redeem,L390,DAppSCAN-source/contracts/openzeppelin-Ribbon_Finance/ribbon-v2-3fa3bec15ad1e2b18ad87f979b87a68368497f13/contracts/vaults/base/RibbonVault.sol,RibbonVault.sol,function redeem(uint256 shares) external nonReentrant {
SWC-119-Shadowing State Variables,_redeem,L408,DAppSCAN-source/contracts/openzeppelin-Ribbon_Finance/ribbon-v2-3fa3bec15ad1e2b18ad87f979b87a68368497f13/contracts/vaults/base/RibbonVault.sol,RibbonVault.sol,"function _redeem(uint256 shares, bool isMax) internal {"
SWC-135-Code With No Effects,getYD,L293-L295,DAppSCAN-source/contracts/openzeppelin-Saddle_Contracts/saddle-contract-0b76f7fb519e34b878aa1d58cffc8d8dc0572c12/contracts/SwapUtils.sol,SwapUtils.sol,} else {
SWC-107-Reentrancy,_setPriceOracle,L258-L275,DAppSCAN-source/contracts/openzeppelin-Solo_Margin_Protocol/solo-17df84db351d5438e1b7437572722b4f52c8b2b4/contracts/protocol/impl/AdminImpl.sol,AdminImpl.sol,function _setPriceOracle(
SWC-102-Outdated Compiler Version,N/A,L2-L417,DAppSCAN-source/contracts/openzeppelin-SuperDAO_Promissory_Token/Superdao-Seed-Stage1-c20d6d45d911f59003122d97df701848cf597cab/contracts/PromissoryToken.sol,PromissoryToken.sol,pragma solidity ^0.4.0;
SWC-135-Code With No Effects,PromissoryToken,L87,DAppSCAN-source/contracts/openzeppelin-SuperDAO_Promissory_Token/Superdao-Seed-Stage1-c20d6d45d911f59003122d97df701848cf597cab/contracts/PromissoryToken.sol,PromissoryToken.sol,*/
SWC-135-Code With No Effects,founderSwitchRequest,L87,DAppSCAN-source/contracts/openzeppelin-SuperDAO_Promissory_Token/Superdao-Seed-Stage1-c20d6d45d911f59003122d97df701848cf597cab/contracts/PromissoryToken.sol,PromissoryToken.sol,*/
SWC-101-Integer Overflow and Underflow,setPrepaid,L163,DAppSCAN-source/contracts/openzeppelin-SuperDAO_Promissory_Token/Superdao-Seed-Stage1-c20d6d45d911f59003122d97df701848cf597cab/contracts/PromissoryToken.sol,PromissoryToken.sol,//SWC-101-Integer Overflow and Underflow: L163
SWC-135-Code With No Effects,register,L30-L33,DAppSCAN-source/contracts/openzeppelin-Tally_SafeGuard_Audit/safeguard-b2c63a9dfc4090be13320d999e7c6c1d842625d3/contracts/Registry.sol,Registry.sol,require(
SWC-135-Code With No Effects,queueTransaction,L63-L64,DAppSCAN-source/contracts/openzeppelin-Tally_SafeGuard_Audit/safeguard-b2c63a9dfc4090be13320d999e7c6c1d842625d3/contracts/SafeGuard.sol,SafeGuard.sol,"bytes32 txHash = keccak256(abi.encode(target, value, signature, data, eta));"
SWC-135-Code With No Effects,queueTransactionWithDescription,L69-L71,DAppSCAN-source/contracts/openzeppelin-Tally_SafeGuard_Audit/safeguard-b2c63a9dfc4090be13320d999e7c6c1d842625d3/contracts/SafeGuard.sol,SafeGuard.sol,"bytes32 txHash = keccak256(abi.encode(target, value, signature, data, eta));"
SWC-135-Code With No Effects,createPerpetual,L102,DAppSCAN-source/contracts/openzeppelin-UMA/protocol-1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualCreator.sol,PerpetualCreator.sol,"emit CreatedPerpetual(address(derivative), msg.sender);"
SWC-102-Outdated Compiler Version,N/A,L95,DAppSCAN-source/contracts/openzeppelin-UMA/protocol-1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualLiquidatable.sol,PerpetualLiquidatable.sol,// Immutable contract parameters:
SWC-135-Code With No Effects,N/A,L16,DAppSCAN-source/contracts/openzeppelin-UMA/protocol-1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualPositionManager.sol,PerpetualPositionManager.sol,"import ""../common/FeePayer.sol"";"
SWC-125-Incorrect Inheritance Order,emergencyShutdown,L509-L517,DAppSCAN-source/contracts/openzeppelin-UMA/protocol-1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualPositionManager.sol,PerpetualPositionManager.sol,function emergencyShutdown() external override notEmergencyShutdown() fees() nonReentrant() {
SWC-135-Code With No Effects,hasPrice,L495,DAppSCAN-source/contracts/openzeppelin-UMA/protocol-1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/oracle/implementation/OptimisticOracle.sol,OptimisticOracle.sol,function hasPrice(
SWC-117-Signature Malleability,speedUpDeposit,L336,DAppSCAN-source/contracts/openzeppelin-UMA_Across_V2/contracts-v2-bf03255cbd1db3045cd2fbf1580f24081f46b43a/contracts/SpokePool.sol,SpokePool.sol,"_verifyUpdateRelayerFeeMessage(depositor, chainId(), newRelayerFeePct, depositId, depositorSignature);"
SWC-117-Signature Malleability,fillRelayWithUpdatedFee,L439,DAppSCAN-source/contracts/openzeppelin-UMA_Across_V2/contracts-v2-bf03255cbd1db3045cd2fbf1580f24081f46b43a/contracts/SpokePool.sol,SpokePool.sol,//SWC-117-Signature Malleability: L439
SWC-101-Integer Overflow and Underflow,N/A,All,DAppSCAN-source/contracts/openzeppelin-WeTrust_ROSCA_contract_code/rosca-contracts-2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol,ROSCA.sol,N/A
SWC-102-Outdated Compiler Version,N/A,All,DAppSCAN-source/contracts/openzeppelin-WeTrust_ROSCA_contract_code/rosca-contracts-2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol,ROSCA.sol,N/A
SWC-116-Block values as a proxy for time,ROSCA ,L199,DAppSCAN-source/contracts/openzeppelin-WeTrust_ROSCA_contract_code/rosca-contracts-2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol,ROSCA.sol,//SWC-116-Block values as a proxy for time: L199
SWC-135-Code With No Effects,cleanUpPreviousRound,L288,DAppSCAN-source/contracts/openzeppelin-WeTrust_ROSCA_contract_code/rosca-contracts-2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol,ROSCA.sol,//SWC-135-Code With No Effects: L288
SWC-135-Code With No Effects,recalculateTotalFees,L316,DAppSCAN-source/contracts/openzeppelin-WeTrust_ROSCA_contract_code/rosca-contracts-2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol,ROSCA.sol,}
SWC-135-Code With No Effects,removeFees,L342,DAppSCAN-source/contracts/openzeppelin-WeTrust_ROSCA_contract_code/rosca-contracts-2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol,ROSCA.sol,// First multiply to reduce roundoff errors.
SWC-135-Code With No Effects,bid,L384,DAppSCAN-source/contracts/openzeppelin-WeTrust_ROSCA_contract_code/rosca-contracts-2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol,ROSCA.sol,//SWC-135-Code With No Effects: L384
SWC-135-Code With No Effects,bid,L391,DAppSCAN-source/contracts/openzeppelin-WeTrust_ROSCA_contract_code/rosca-contracts-2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol,ROSCA.sol,//SWC-135-Code With No Effects: L391
SWC-135-Code With No Effects,getParticipantBalance,L446-L456 ,DAppSCAN-source/contracts/openzeppelin-WeTrust_ROSCA_contract_code/rosca-contracts-2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol,ROSCA.sol,//SWC-135-Code With No Effects: L446-L456
SWC-135-Code With No Effects,endOfROSCARetrieveFees,L507,DAppSCAN-source/contracts/openzeppelin-WeTrust_ROSCA_contract_code/rosca-contracts-2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol,ROSCA.sol,return false;
SWC-101-Integer Overflow and Underflow,isUsingAsCollateralOne,L122,DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/configuration/UserConfiguration.sol,UserConfiguration.sol,return collateralData & (collateralData - 1) == 0;
SWC-107-Reentrancy,executeFlashLoanSimple,L182-L240,DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol,FlashLoanLogic.sol,//SWC-107-Reentrancy: L182-L240
SWC-131-Presence of unused variables,N/A,L213-L222,DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/ReserveLogic.sol,ReserveLogic.sol,struct AccrueToTreasuryLocalVars {
SWC-131-Presence of unused variables,N/A,L39 - L52,DAppSCAN-source/contracts/PeckShield-AirSwap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/staking/contracts/Staking.sol,Staking.sol,mapping(address => address) public accountDelegates;
SWC-113-DoS with Failed Call,cancel,L178 - L187,DAppSCAN-source/contracts/PeckShield-AirSwap/airswap-protocols-b87d292aaf6e28ede564b7ea28ece39219994607/source/swap/contracts/Swap.sol,Swap.sol,function cancel(
SWC-104-Unchecked Call Return Value,swap,L152,DAppSCAN-source/contracts/PeckShield-AirSwap/airswap-protocols-b87d292aaf6e28ede564b7ea28ece39219994607/source/wrapper/contracts/Wrapper.sol,Wrapper.sol,"msg.sender.call.value(order.signer.param)("""");"
SWC-101-Integer Overflow and Underflow,Deposit_For_Tail,L292-L322,DAppSCAN-source/contracts/PeckShield-Arche/Arche_v1.0_Eros-909f35e0064d636aaf61954a6026fda7b2bade7f/Swap_Factory_Future.sol,Swap_Factory_Future.sol,uint256 e_amount= m_Total_Amount_Tail-m_Amount_Tail;
SWC-107-Reentrancy,Impl_Delivery,L360-L380,DAppSCAN-source/contracts/PeckShield-Arche/Arche_v1.0_Eros-909f35e0064d636aaf61954a6026fda7b2bade7f/Swap_Factory_Future.sol,Swap_Factory_Future.sol,function Impl_Delivery(address user) internal
SWC-107-Reentrancy,borrowFresh,L738-L802,DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol,AToken.sol,"function borrowFresh(address payable borrower, uint borrowAmount) internal returns (uint) {"
SWC-107-Reentrancy,withdraw,L249-L267,DAppSCAN-source/contracts/PeckShield-BabySwap/code/baby-swap-contract-cac289bf978d969c95721c2adb9f199cee72ffa6/contracts/farm/MasterChef.sol,MasterChef.sol,"function withdraw(uint256 _pid, uint256 _amount) public {"
SWC-114-Transaction Order Dependence,collectFees,L453-L470,DAppSCAN-source/contracts/PeckShield-BNPL/BNPL-0ee587a081668dcab166a3a275b8a6c4794ead4d/contracts/BankingNode.sol,BankingNode.sol,function collectFees() external {
SWC-107-Reentrancy,unstake,L615-L637,DAppSCAN-source/contracts/PeckShield-BNPL/BNPL-0ee587a081668dcab166a3a275b8a6c4794ead4d/contracts/BankingNode.sol,BankingNode.sol,function unstake() external {
SWC-107-Reentrancy,deposit,L357-L375,DAppSCAN-source/contracts/PeckShield-btdotfinance/bt-finance-6300bc1271b73a1755fae02594d25fdf6fa39a9c/contracts/vault/bVault.sol,bVault.sol,function deposit(uint _amount) public onlyRestrictContractCall {
SWC-107-Reentrancy,create,L142-L189,DAppSCAN-source/contracts/PeckShield-Buffer/code/Buffer-Protocol-1c648bb35feca23bc801ce76aba63ca66af5917e/contracts/Options/BufferBNBOptions.sol,BufferBNBOptions.sol,function create(
SWC-134-Message call with hardcoded gas amount,purchaseExecution,L87-L102,DAppSCAN-source/contracts/PeckShield-COGI/cogi_contracts-c5dc614395f77a5b07c83223e5c8bac9d14d2e2c/contracts/CogiNFTMarket.sol,CogiNFTMarket.sol,function purchaseExecution(
SWC-107-Reentrancy,vote,L181,DAppSCAN-source/contracts/PeckShield-COIN98/code/code.sol,code.sol,function vote()
SWC-107-Reentrancy,lockAdditional,L94-L113,DAppSCAN-source/contracts/PeckShield-Convex_Frax/frax-cvx-platform-2f8573ee796daa022c1050b4a749bf08049c439b/contracts/contracts/StakingProxyUniV3.sol,StakingProxyUniV3.sol,"function lockAdditional(uint256 _token_id, uint256 _token0_amt, uint256 _token1_amt) external onlyOwner{"
SWC-107-Reentrancy,deposit,L175 - L203,DAppSCAN-source/contracts/PeckShield-CryptoHeroes/cryptoheroes-6cb0eaf8c88fdaab89d2b4c83535a189c7793001/CryptoHeroesUniverse.sol,CryptoHeroesUniverse.sol,"function deposit(uint256 _pid, uint256 _amount) public {"
SWC-131-Presence of unused variables,N/A,L44 - L56,DAppSCAN-source/contracts/PeckShield-CryptoZoan/code/code.sol,code.sol,struct Zoan {
SWC-107-Reentrancy,withdraw,L217-L234,DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol,SkyRewardPool.sol,"function withdraw(uint256 _pid, uint256 _amount) public {"
SWC-101-Integer Overflow and Underflow,sqrt,L56,DAppSCAN-source/contracts/PeckShield-dodo/dodo-smart-contract-d74964085d115022635dbfa07cf8396b8f450ab0/contracts/lib/SafeMath.sol,SafeMath.sol,uint256 z = (x + 1) / 2;
SWC-114-Transaction Order Dependence,buyTokenFromBnb,L154-L169,DAppSCAN-source/contracts/PeckShield-Donut/crossroad-550a8c3c010dc8c1a46ea9191d3841462bd58d82/contracts/DjiinAutoBuyer.sol,DjiinAutoBuyer.sol,function buyTokenFromBnb(
SWC-131-Presence of unused variables,N/A,L9-L18,DAppSCAN-source/contracts/PeckShield-Double/double-contract-5489c0618f381df1e8d5ebb55f430db1b8bffeea/contracts/Market.sol,Market.sol,"contract Market is OwnableContract,ReentrancyGuard,IMarket{"
SWC-120-Weak Sources of Randomness from Chain Attributes,computerSeed,L11-L35,DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/libraries/Random.sol,Random.sol,function computerSeed() internal view returns (uint256) {
SWC-107-Reentrancy,emergencyWithdraw,L202-L214,DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/pools/SinglePool.sol,SinglePool.sol,function emergencyWithdraw() public {
SWC-101-Integer Overflow and Underflow,setMintLimitRatio,L351-L357,DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol,vDSGToken.sol,"function setMintLimitRatio(uint256 min, uint256 max) public onlyOwner {"
SWC-114-Transaction Order Dependence,depositTo,L29-L57,DAppSCAN-source/contracts/PeckShield-Duet/duet-collateral-contracts-92452dad092d6b5f76713484e30159b5fa75ea80/contracts/DYTokenERC20.sol,DYTokenERC20.sol,"function depositTo(address _to, uint _amount, address _toVault) public override {"
SWC-100-Function Default Visibility,massUpdatePools,L111-L126,DAppSCAN-source/contracts/PeckShield-Duet_Bond/duet-bond-contract-549f7d3a4973a918cb12059cc1ef3f2ace56d9bc/contracts/VaultFarm.sol,VaultFarm.sol,"function massUpdatePools(address[] memory epochs, uint256[] memory rewards) public {"
SWC-135-Code With No Effects,_burnFrom,L592 - L594,DAppSCAN-source/contracts/PeckShield-ERC20_AGRO/code/code.sol,code.sol,//  SWC-135-Code With No Effects: L592 - L594
SWC-107-Reentrancy,_delegate,L1030 - L1040,DAppSCAN-source/contracts/PeckShield-ERC20_FAT/code/code.sol,code.sol,"function _delegate(address delegator, address delegatee)"
SWC-107-Reentrancy,_delegate,L222-L232,DAppSCAN-source/contracts/PeckShield-ERC20_LuckyChip/core-0d957aa387d29297fc6ebfc69140440be6d791c1/contracts/token/LCToken.sol,LCToken.sol,"function _delegate(address delegator, address delegatee)"
SWC-114-Transaction Order Dependence,_safeSwap,L2623-L2643,DAppSCAN-source/contracts/PeckShield-FarmHero/polygon-core-72130b46f9a0a8ce180406af5fbbf23433ec7cf3/contracts/StratX2_HERO_QuickV2.sol,StratX2_HERO_QuickV2.sol,function _safeSwap(
SWC-107-Reentrancy,provideFrom,L373 - L409,DAppSCAN-source/contracts/PeckShield-Hegic(v8888)/Hegic-v8888-2dcd44dc1ae07881e94d52fa618f9704bfd4ffda/contracts/Pool/HegicPool.sol,HegicPool.sol,function provideFrom(
SWC-101-Integer Overflow and Underflow,sqrt,L30,DAppSCAN-source/contracts/PeckShield-Hegic(v8888)/Hegic-v8888-2dcd44dc1ae07881e94d52fa618f9704bfd4ffda/contracts/utils/Math.sol,Math.sol,uint256 k = (x + 1) >> 1;
SWC-101-Integer Overflow and Underflow,_replenish,L181,DAppSCAN-source/contracts/PeckShield-Hegic_HardCore_Beta/hegic-hardcore-beta-e22e6f67f1ce99e1317fc52fa325b496464a95bd/contracts/Pool/HegicOperationalTreasury.sol,HegicOperationalTreasury.sol,uint256 transferAmount =
SWC-107-Reentrancy,repayBorrowInternal ,L1292-L1344,DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol,Holdefi.sol,"function repayBorrowInternal (address account, address market, address collateral, uint256 amount)"
SWC-135-Code With No Effects,addMarket ,L322-L341,DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/HoldefiSettings.sol,HoldefiSettings.sol,"function addMarket (address market, uint256 borrowRate, uint256 suppliersShareRate)"
SWC-135-Code With No Effects,_transfer,L68,DAppSCAN-source/contracts/PeckShield-HoneyFarm1.01/honeyfarm-contracts-c6bc0f0dc8cebe06c9dde3e7967945877b9bc5da/MasterChef.sol,MasterChef.sol,amount = sendAmount;
SWC-135-Code With No Effects,_acceptAdmin,L1133,DAppSCAN-source/contracts/PeckShield-IronLend/iron-lend-f9a669850885895215579e3c2ae8d7124f0ef5c8/src/RToken/RToken.sol,RToken.sol,// SWC-135-Code With No Effects: L1133
SWC-101-Integer Overflow and Underflow,deposit,L107,DAppSCAN-source/contracts/PeckShield-Kalmar/leverage-yield-contracts-ad08aef5a2281639a3226f31d4d8d5aaba73967e/contracts/Bank.sol,Bank.sol,uint256 share = total == 0 ? msg.value : msg.value.mul(totalSupply()).div(total);
SWC-101-Integer Overflow and Underflow,isStable,L68-L69,DAppSCAN-source/contracts/PeckShield-Kalmar/leverage-yield-contracts-ad08aef5a2281639a3226f31d4d8d5aaba73967e/contracts/MasterChefGoblinConfig.sol,MasterChefGoblinConfig.sol,"require(lpPrice <= price.mul(maxPriceDiff).div(10000), ""price too high"");"
SWC-135-Code With No Effects,add,L103 - L115,DAppSCAN-source/contracts/PeckShield-KaoyaSwap/contracts-8273073f1d6914f372790399378f177573c52e37/masterchef.sol,masterchef.sol,"function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {"
SWC-107-Reentrancy,deposit,L196 - L208,DAppSCAN-source/contracts/PeckShield-KaoyaSwap/contracts-8273073f1d6914f372790399378f177573c52e37/masterchef.sol,masterchef.sol,// SWC-107-Reentrancy: L196 - L208
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/PeckShield-LensProtocol/lens-protocol-dd137b2dee64c5edf288df297ee4249a0e6c11d4/contracts/core/base/ERC721Enumerable.sol,ERC721Enumerable.sol,pragma solidity ^0.8.0;
SWC-135-Code With No Effects,add,L173 - L190,DAppSCAN-source/contracts/PeckShield-LuckyChip/staking-23e5db6078aa12754ae69048c7754c7f1e90b375/contracts/MasterChef.sol,MasterChef.sol,// SWC-135-Code With No Effects: L173 - L190
SWC-135-Code With No Effects,_mint,L54,DAppSCAN-source/contracts/PeckShield-LuckyToken/Lucky-Token-c9deec551edaa18f8419bbda5fca48776f191e80/contracts/LuckyToken.sol,LuckyToken.sol,"function _mint(address _to, uint256 _amount) internal virtual onlyOwner override {"
SWC-135-Code With No Effects,addPool,L178-L200,DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol,MutiRewardPool.sol,function addPool(
SWC-101-Integer Overflow and Underflow,getMinter,L48,DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/token/Meta.sol,Meta.sol,"require(_index <= getMinterLength() - 1, ""Token: index out of bounds"");"
SWC-107-Reentrancy,emergencyWithdraw,L237-L244,DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol,MasterMilker.sol,function emergencyWithdraw(uint256 _pid) public {
SWC-135-Code With No Effects,N/A,L1245-L1303,DAppSCAN-source/contracts/PeckShield-OlympusDAO/olympus-contracts-cdd4afe9c31403d8d5e2e96cadc5aaee2d0e6c93/contracts/OlympusERC20.sol,OlympusERC20.sol,"contract TWAPOracleUpdater is ERC20Permit, VaultOwned {"
SWC-135-Code With No Effects,removeMainToken,L44-L59,DAppSCAN-source/contracts/PeckShield-OneSwap/oneswap_contract_ethereum-4194ac1a55934cd573bd93987111eaa8f70676fe/contracts/OneSwapBuyback.sol,OneSwapBuyback.sol,function removeMainToken(address token) external override {
SWC-101-Integer Overflow and Underflow,_dealWithPoolAndCollectFee,L1002,DAppSCAN-source/contracts/PeckShield-OneSwap/oneswap_contract_ethereum-4194ac1a55934cd573bd93987111eaa8f70676fe/contracts/OneSwapPair.sol,OneSwapPair.sol,uint fee = amountToTaker * feeBPS / 10000;
SWC-135-Code With No Effects,constructor,L22-L31,DAppSCAN-source/contracts/PeckShield-OpenLeverage1.0/openleverage-contracts-e31d971bcb38ec8737cf1942b8fdf6a9452e5834/contracts/OLETokenLock.sol,OLETokenLock.sol,"constructor(IOLEToken token_, address[] memory beneficiaries, uint256[] memory amounts, uint128[] memory startTimes, uint128[] memory endTimes, address delegateTo) {"
SWC-107-Reentrancy,borrowFresh,L845-L885,DAppSCAN-source/contracts/PeckShield-OpenLeverage1.0/openleverage-contracts-e31d971bcb38ec8737cf1942b8fdf6a9452e5834/contracts/liquidity/LPool.sol,LPool.sol,"function borrowFresh(address payable borrower, address payable payee, uint borrowAmount) internal sameBlock {"
SWC-120-Weak Sources of Randomness from Chain Attributes,computerSeed,L20-L41,DAppSCAN-source/contracts/PeckShield-Pandora/smart-contract-d0aa3193b8ffcd7fc84481c30e16283837319719/contracts/0.8.x/contracts/libraries/Random.sol,Random.sol,function computerSeed(uint256 salt) internal view returns (uint256) {
SWC-107-Reentrancy,closePositionWithId,L402-459,DAppSCAN-source/contracts/PeckShield-PikaPerpV2/PikaPerpV2-4a0965ff90ed099b7e2d3e8dda47cd589ee8e3a2/contracts/perp/PikaPerpV2.sol,PikaPerpV2.sol,function closePositionWithId(
SWC-135-Code With No Effects,N/A,L11-L140,DAppSCAN-source/contracts/PeckShield-PikaPerpV2/PikaPerpV2-4a0965ff90ed099b7e2d3e8dda47cd589ee8e3a2/contracts/staking/PikaStaking.sol,PikaStaking.sol,"contract PikaStaking is ReentrancyGuard, Pausable {"
SWC-135-Code With No Effects,withdraw,205-253,DAppSCAN-source/contracts/PeckShield-Plexus/PlexusContracts-f7e8196a3881faee80369330f6844a7f38d65b65/contracts/tier2Aave.sol,tier2Aave.sol,N/A
SWC-135-Code With No Effects,N/A,L67-L93,DAppSCAN-source/contracts/PeckShield-Plexus/PlexusContracts-f7e8196a3881faee80369330f6844a7f38d65b65/contracts/tier2Farm.sol,tier2Farm.sol,contract Tier2FarmController{
SWC-135-Code With No Effects,add_asset,L107-L112,DAppSCAN-source/contracts/PeckShield-PlutosNetworkv3/plutos-virtual-trade-e7acfbe/contracts/core/VirtualTrade.sol,VirtualTrade.sol,"function add_asset(string memory name, address type_addr, bytes memory call_data) public onlyOwner{"
SWC-135-Code With No Effects,N/A,L11-L12,DAppSCAN-source/contracts/PeckShield-PlutosV1/plutos-eth-contract-0777815/contracts/PLiquidateAgent.sol,PLiquidateAgent.sol,//SWC-135-Code With No Effects: L11-L12
SWC-107-Reentrancy,deposit,L48-L63,DAppSCAN-source/contracts/PeckShield-PlutosV1/plutos-eth-contract-0777815/contracts/PMintBurn.sol,PMintBurn.sol,function deposit(uint256 _amount) public returns(bytes32){
SWC-135-Code With No Effects,N/A,L40-57,DAppSCAN-source/contracts/PeckShield-Qubit/qubit-finance-f37f63caca893159b59cf89e506a5781f52b77b5/contracts/QubitToken.sol,QubitToken.sol,contract QubitToken is BEP20Upgradeable {
SWC-135-Code With No Effects,N/A,L480-L487,DAppSCAN-source/contracts/PeckShield-Rikkei/rifi-protocol-b33243fb3a218cc195f0727fe1499cb57f5ea0b2/contracts/RToken.sol,RToken.sol,struct MintLocalVars {
SWC-107-Reentrancy,borrowFresh,L738-L802,DAppSCAN-source/contracts/PeckShield-Rikkei/rifi-protocol-b33243fb3a218cc195f0727fe1499cb57f5ea0b2/contracts/RToken.sol,RToken.sol,"function borrowFresh(address payable borrower, uint borrowAmount) internal returns (uint) {"
SWC-107-Reentrancy,withdraw,L339 - L341,DAppSCAN-source/contracts/PeckShield-ShibaNova/Contracts-b6b1ce1fcaff83d360df8944309f49958842b7b8/shibanova/contracts/MasterShiba.sol,MasterShiba.sol,// SWC-107-Reentrancy: L339 - L341
SWC-135-Code With No Effects,getReserves,L30 - L35,DAppSCAN-source/contracts/PeckShield-ShibaNova/Contracts-b6b1ce1fcaff83d360df8944309f49958842b7b8/shibanova/contracts/libs/ShibaLibrary.sol,ShibaLibrary.sol,"function getReserves(address factory, address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB) {"
SWC-101-Integer Overflow and Underflow,vestedAmount,L707,DAppSCAN-source/contracts/PeckShield-Spherium/code/code.sol,code.sol,vestedAmount_ -= _releaseAmount[msg.sender];
SWC-107-Reentrancy,deposit,L75-L89,DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Token/LPGauge.sol,LPGauge.sol,function deposit(uint256 _amount) nonReentrant external {
SWC-101-Integer Overflow and Underflow,startFund,L181,DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol,VCTreasuryV1.sol,maxInvestment = msg.value.div(max).mul(investmentCap);
SWC-101-Integer Overflow and Underflow,announceRemovalIntent,L76,DAppSCAN-source/contracts/PeckShield-starkex/starkex-contracts-master/scalable-dex/contracts/src/components/ApprovalChain.sol,ApprovalChain.sol,function announceRemovalIntent(
SWC-135-Code With No Effects,add,L108-L120,DAppSCAN-source/contracts/PeckShield-SushiSwap/sushiswap-180bc9b642bba79c1ee4a63f71a3a0d36e64aa63/contracts/MasterChef.sol,MasterChef.sol,"function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {"
SWC-107-Reentrancy,withdraw,L219-L230,DAppSCAN-source/contracts/PeckShield-SushiSwap/sushiswap-180bc9b642bba79c1ee4a63f71a3a0d36e64aa63/contracts/MasterChef.sol,MasterChef.sol,"function withdraw(uint256 _pid, uint256 _amount) public {"
SWC-107-Reentrancy,deposit,L60-L69,DAppSCAN-source/contracts/PeckShield-Tranchessv1.0/contract-core-5ac3d997da3ef37b0135565a11c5ebcc519862aa/contracts/governance/LiquidityStaking.sol,LiquidityStaking.sol,function deposit(uint256 amount) external {
SWC-107-Reentrancy,deposit,L340-L359,DAppSCAN-source/contracts/PeckShield-TranchessV1.1/contract-core-68a86350313c1cb9e5467e791d3e9efaf228a0df/contracts/exchange/StakingV2.sol,StakingV2.sol,"function deposit(uint256 tranche, uint256 amount) public whenNotPaused {"
SWC-135-Code With No Effects,ProfitReported,L30-L41,DAppSCAN-source/contracts/PeckShield-TranchessV2/contract-core-6876889ff08ddadb78973cadca821128ebb6503c/contracts/fund/FundV3.sol,FundV3.sol,"event ProfitReported(uint256 profit, uint256 performanceFee);"
SWC-114-Transaction Order Dependence,approve,L279 - L282,DAppSCAN-source/contracts/PeckShield-USR/USR-05cfe29ac4d66b0169d7545562eb40536352fd63/contracts/USR.sol,USR.sol,"function approve(address _spender, uint _wad) external returns (bool) {"
SWC-129-Typographical Error,equity,L295,DAppSCAN-source/contracts/PeckShield-USR/USR-cf24e4d1525dd820b481f4b1d95a1cabf2dfec58/contracts/USR.sol,USR.sol,function equity() external view returns (int) {
SWC-135-Code With No Effects,removeVET,L37 - L41,DAppSCAN-source/contracts/PeckShield-VeChain/vvet-818fa11f7595e257cb28fa5475c17c60c11a4902/vvet/contracts/StakingModel.sol,StakingModel.sol,"function removeVET(address addr, uint256 amount) restrict(amount) internal {"
SWC-101-Integer Overflow and Underflow,calculateVTHO,L92,DAppSCAN-source/contracts/PeckShield-VeChain/vvet-818fa11f7595e257cb28fa5475c17c60c11a4902/vvet/contracts/StakingModel.sol,StakingModel.sol,"require(t1 <= t2, ""t1 should be <= t2"");"
SWC-135-Code With No Effects,withdraw,L29 - L34,DAppSCAN-source/contracts/PeckShield-VeChain/vvet-818fa11f7595e257cb28fa5475c17c60c11a4902/vvet/contracts/VVET9.sol,VVET9.sol,function withdraw(uint256 wad) public {
SWC-114-Transaction Order Dependence,approve,L44-48,DAppSCAN-source/contracts/PeckShield-VeChain/vvet-818fa11f7595e257cb28fa5475c17c60c11a4902/vvet/contracts/VVET9.sol,VVET9.sol,
SWC-135-Code With No Effects,N/A,L480-L488,DAppSCAN-source/contracts/PeckShield-Venus/venus-protocol-48c7400f668116f5e5fa92299e28cf16b49b485c/contracts/VToken.sol,VToken.sol,struct MintLocalVars {
SWC-101-Integer Overflow and Underflow,setPrices,L152,DAppSCAN-source/contracts/PeckShield-XSwap/xswap-326a3246b327cd2b8481fd8c22fe8d864e43b0da/contracts/XSwap.sol,XSwap.sol,"function setPrices(address _input, address _output, uint256 _price) public auth returns (bool) {"
SWC-128-DoS With Block Gas Limit,appendSource,L36,DAppSCAN-source/contracts/PepperSec-Aira-Robonomic/robonomics_contracts-cc35a91de187072214d215262d8371f0159c2498/contracts/robonomics/Ambix.sol,Ambix.sol,function appendSource(
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/PepperSec-Aira-Robonomic/robonomics_contracts-cc35a91de187072214d215262d8371f0159c2498/contracts/robonomics/LighthouseLib.sol,LighthouseLib.sol,pragma solidity ^0.4.24;
SWC-107-Reentrancy,withdraw,L24,DAppSCAN-source/contracts/PepperSec-Aira-Robonomic/robonomics_contracts-cc35a91de187072214d215262d8371f0159c2498/contracts/robonomics/LighthouseLib.sol,LighthouseLib.sol,"require(xrt.transfer(msg.sender, _value));"
SWC-101-Integer Overflow and Underflow,quoted {,L54,DAppSCAN-source/contracts/PepperSec-Aira-Robonomic/robonomics_contracts-cc35a91de187072214d215262d8371f0159c2498/contracts/robonomics/LighthouseLib.sol,LighthouseLib.sol,quota -= 1;
SWC-115-Authorization through tx.origin,to,L85,DAppSCAN-source/contracts/PepperSec-Aira-Robonomic/robonomics_contracts-cc35a91de187072214d215262d8371f0159c2498/contracts/robonomics/LighthouseLib.sol,LighthouseLib.sol,"function to(address _to, bytes _data) external keepalive quoted member"
SWC-133-Hash Collisions With Multiple Variable Length Arguments,bid,L74-L75,DAppSCAN-source/contracts/PepperSec-Aira-Robonomic/robonomics_contracts-cc35a91de187072214d215262d8371f0159c2498/contracts/robonomics/RobotLiabilityLib.sol,RobotLiabilityLib.sol,"require(keccak256(abi.encodePacked(model, objective))"
SWC-107-Reentrancy,finalize,L104,DAppSCAN-source/contracts/PepperSec-Aira-Robonomic/robonomics_contracts-cc35a91de187072214d215262d8371f0159c2498/contracts/robonomics/RobotLiabilityLib.sol,RobotLiabilityLib.sol,function finalize(
SWC-135-Code With No Effects,onlyWhitelisted,L71 - L81,DAppSCAN-source/contracts/PepperSec-KICKTOKEN/public-audit-reports-master/sources/KIKCICO/kickico_token_v1.sol,kickico_token_v1.sol,modifier onlyWhitelisted() {
SWC-135-Code With No Effects,transferFrozenToken,L301,DAppSCAN-source/contracts/PepperSec-KICKTOKEN/public-audit-reports-master/sources/KIKCICO/kickico_token_v1.sol,kickico_token_v1.sol,// SWC-135-Code With No Effects: L301
SWC-135-Code With No Effects,onlyValidatorSetContract,L24-L27,DAppSCAN-source/contracts/PepperSec-POA-DPOS/posdao-contracts-fdaa685de851378b35741bdab986414dfd9042b1/contracts/abstracts/RandomBase.sol,RandomBase.sol,modifier onlyValidatorSetContract() {
SWC-135-Code With No Effects,initialize,L31,DAppSCAN-source/contracts/PepperSec-POA-Network-Bridge/tokenbridge-contracts-2bf70c7e9fd42968aec2dc352017618907834401/contracts/upgradeable_contracts/BridgeValidators.sol,BridgeValidators.sol,require(validatorCount() >= _requiredSignatures);
SWC-113-DoS with Failed Call,onExecuteAffirmation,L46,DAppSCAN-source/contracts/PepperSec-POA-Network-Bridge/tokenbridge-contracts-2bf70c7e9fd42968aec2dc352017618907834401/contracts/upgradeable_contracts/native_to_erc20/HomeBridgeNativeToErc.sol,HomeBridgeNativeToErc.sol,_recipient.transfer(_value);
SWC-101-Integer Overflow and Underflow,getRateAndTimeRemaining,L363 - L381,DAppSCAN-source/contracts/PepperSec-POA-Network-Wizard/auth-os-applications-2840b97dea33c8cf455a67b2b9c7229e2cda1843/TokenWizard/crowdsale/DutchCrowdsale/contracts/DutchCrowdsaleIdx.sol,DutchCrowdsaleIdx.sol,"function getRateAndTimeRemaining(uint _start_time, uint _duration, uint _start_rate, uint _end_rate) internal view"
SWC-135-Code With No Effects,storing,L334,DAppSCAN-source/contracts/PepperSec-POA-Network-Wizard/core-cebb1089c417a8e26bd97a44f7234bdb9d0bd781/contracts/core/Contract.sol,Contract.sol,"mstore(0xe0, action_req)"
SWC-135-Code With No Effects,N/A,L14,DAppSCAN-source/contracts/QuillAudits-1inch-Cumulative Merkle Drop/merkle-distribution-96fb63d0cbfea73603e7500961c71e8ab1fb8c10/contracts/CumulativeMerkleDrop.sol,CumulativeMerkleDrop.sol,// SWC-135-Code With No Effects: L14
SWC-128-DoS With Block Gas Limit,quitAll,L71 - L73,DAppSCAN-source/contracts/QuillAudits-1inch-Farming/farming-7a007ec7784cca2899889e99e46cf06d5788a7d9/contracts/ERC20Farmable.sol,ERC20Farmable.sol,for (uint256 i = 0; i < farms.length; i++) {
SWC-128-DoS With Block Gas Limit,_beforeTokenTransfer,L118 - L137,DAppSCAN-source/contracts/QuillAudits-1inch-Farming/farming-7a007ec7784cca2899889e99e46cf06d5788a7d9/contracts/ERC20Farmable.sol,ERC20Farmable.sol,for (uint256 i = 0; i < a.length; i++) {
SWC-128-DoS With Block Gas Limit,_beforeTokenTransfer,L123 - L130,DAppSCAN-source/contracts/QuillAudits-1inch-Farming/farming-7a007ec7784cca2899889e99e46cf06d5788a7d9/contracts/ERC20Farmable.sol,ERC20Farmable.sol,for (j = 0; j < b.length; j++) {
SWC-128-DoS With Block Gas Limit,_beforeTokenTransfer,L140 - L147,DAppSCAN-source/contracts/QuillAudits-1inch-Farming/farming-7a007ec7784cca2899889e99e46cf06d5788a7d9/contracts/ERC20Farmable.sol,ERC20Farmable.sol,for (uint256 j = 0; j < b.length; j++) {
SWC-101-Integer Overflow and Underflow,farmed,L30,DAppSCAN-source/contracts/QuillAudits-1inch-Farming/farming-7a007ec7784cca2899889e99e46cf06d5788a7d9/contracts/accounting/UserAccounting.sol,UserAccounting.sol,return uint256(int256(balance * fpt) - info.corrections[account]) / 1e18;
SWC-107-Reentrancy,updateRewardNonLP,L340 - L343,DAppSCAN-source/contracts/QuillAudits-1inch-Fee Collector/fee-collector-3c2626763fd829500496f15476d5e98fbdf4f574/contracts/FeeCollector.sol,FeeCollector.sol,"function updateRewardNonLP(IERC20 erc20, address referral, uint256 amount) external {"
SWC-114-Transaction Order Dependence,trade,L361,DAppSCAN-source/contracts/QuillAudits-1inch-Fee Collector/fee-collector-3c2626763fd829500496f15476d5e98fbdf4f574/contracts/FeeCollector.sol,FeeCollector.sol,// SWC-114-Transaction Order Dependence: L361
SWC-107-Reentrancy,depositFor,L137,DAppSCAN-source/contracts/QuillAudits-1inch-Fixed Rate Swap/fixed-rate-swap-0b5a75e9f56e7d21c290dd28c59dc140dcbcc1d5/contracts/FixedRateSwap.sol,FixedRateSwap.sol,"token0.safeTransferFrom(msg.sender, address(this), token0Amount);"
SWC-135-Code With No Effects,withdrawFor,L173 - L180,DAppSCAN-source/contracts/QuillAudits-1inch-Fixed Rate Swap/fixed-rate-swap-0b5a75e9f56e7d21c290dd28c59dc140dcbcc1d5/contracts/FixedRateSwap.sol,FixedRateSwap.sol,"_burn(msg.sender, amount);"
SWC-135-Code With No Effects,withdrawForWithRatio,L214 - L222,DAppSCAN-source/contracts/QuillAudits-1inch-Fixed Rate Swap/fixed-rate-swap-0b5a75e9f56e7d21c290dd28c59dc140dcbcc1d5/contracts/FixedRateSwap.sol,FixedRateSwap.sol,// SWC-135-Code With No Effects: L214 - L222
SWC-107-Reentrancy,_swap,L323,DAppSCAN-source/contracts/QuillAudits-1inch-Fixed Rate Swap/fixed-rate-swap-0b5a75e9f56e7d21c290dd28c59dc140dcbcc1d5/contracts/FixedRateSwap.sol,FixedRateSwap.sol,"require(outputAmount > 0, ""Empty swap is not allowed"");"
SWC-135-Code With No Effects,_getVirtualAmountsForDepositImpl,L346 - L358,DAppSCAN-source/contracts/QuillAudits-1inch-Fixed Rate Swap/fixed-rate-swap-0b5a75e9f56e7d21c290dd28c59dc140dcbcc1d5/contracts/FixedRateSwap.sol,FixedRateSwap.sol,"uint256 right = Math.min(dx * 1002 / 1000, yBalance);"
SWC-135-Code With No Effects,_getRealAmountsForWithdrawImpl,L388 - L401,DAppSCAN-source/contracts/QuillAudits-1inch-Fixed Rate Swap/fixed-rate-swap-0b5a75e9f56e7d21c290dd28c59dc140dcbcc1d5/contracts/FixedRateSwap.sol,FixedRateSwap.sol,"uint256 right = Math.min(dx * 1002 / 1000, balanceY);"
SWC-131-Presence of unused variables,N/A,L21 -L21,DAppSCAN-source/contracts/QuillAudits-1inch-FixedFeeSwap/fixed-rate-swap-ac5dbd4a5e46f501e0a4a728f1725095b11f3fbd/contracts/FixedFeeSwap.sol,FixedFeeSwap.sol,uint256 constant private _AMOUNT_MASK = ~_DIRECTION_MASK;
SWC-107-Reentrancy,fillOrderTo,L28 - L346,DAppSCAN-source/contracts/QuillAudits-1inch-Limit Order Protocol/limit-order-protocol-a14bde6a260458de5083cee117d734221e1cbc05/contracts/LimitOrderProtocol.sol,LimitOrderProtocol.sol,"AmountCalculator,"
SWC-128-DoS With Block Gas Limit,fillOrderTo,L339,DAppSCAN-source/contracts/QuillAudits-1inch-Limit Order Protocol/limit-order-protocol-a14bde6a260458de5083cee117d734221e1cbc05/contracts/LimitOrderProtocol.sol,LimitOrderProtocol.sol,InteractiveMaker(order.makerAssetData.decodeAddress(_FROM_INDEX))
SWC-123-Requirement Violation,constructor,L16 - L17,DAppSCAN-source/contracts/QuillAudits-1inch-Limit Order Protocol/limit-order-protocol-a14bde6a260458de5083cee117d734221e1cbc05/contracts/helpers/ERC721Proxy.sol,ERC721Proxy.sol,"require(ERC721Proxy.func_40aVqeY.selector == bytes4(uint32(IERC20.transferFrom.selector) + 2), ""ERC20Proxy: bad selector"");"
SWC-114-Transaction Order Dependence,permit,L53,DAppSCAN-source/contracts/QuillAudits-1inch-token/1inch-token-99fd056f91005ca521a02a005f7bcd8f77e06afc/contracts/ERC20Permit.sol,ERC20Permit.sol,// SWC-114-Transaction Order Dependence: L53
SWC-131-Presence of unused variables,_queue,L203,DAppSCAN-source/contracts/QuillAudits-AAVE-Governance Crosschain Bridges V1/governance-crosschain-bridges-7f56e7ae63f30ba8dcd7ced6a11a34c2eb865a1d/contracts/BridgeExecutorBase.sol,BridgeExecutorBase.sol,_queuedActions[actionHash] = true;
SWC-131-Presence of unused variables,_executeTransaction,L237,DAppSCAN-source/contracts/QuillAudits-AAVE-Governance Crosschain Bridges V1/governance-crosschain-bridges-7f56e7ae63f30ba8dcd7ced6a11a34c2eb865a1d/contracts/BridgeExecutorBase.sol,BridgeExecutorBase.sol,_queuedActions[actionHash] = false;
SWC-131-Presence of unused variables,_cancelTransaction,270,DAppSCAN-source/contracts/QuillAudits-AAVE-Governance Crosschain Bridges V1/governance-crosschain-bridges-7f56e7ae63f30ba8dcd7ced6a11a34c2eb865a1d/contracts/BridgeExecutorBase.sol,BridgeExecutorBase.sol,N/A
SWC-131-Presence of unused variables,_queue,L203,DAppSCAN-source/contracts/QuillAudits-AAVE-Governance Crosschain Bridges V3/governance-crosschain-bridges-7f56e7ae63f30ba8dcd7ced6a11a34c2eb865a1d/contracts/BridgeExecutorBase.sol,BridgeExecutorBase.sol,_queuedActions[actionHash] = true;
SWC-131-Presence of unused variables,_executeTransaction,L237,DAppSCAN-source/contracts/QuillAudits-AAVE-Governance Crosschain Bridges V3/governance-crosschain-bridges-7f56e7ae63f30ba8dcd7ced6a11a34c2eb865a1d/contracts/BridgeExecutorBase.sol,BridgeExecutorBase.sol,_queuedActions[actionHash] = false;
SWC-131-Presence of unused variables,_cancelTransaction,L271,DAppSCAN-source/contracts/QuillAudits-AAVE-Governance Crosschain Bridges V3/governance-crosschain-bridges-7f56e7ae63f30ba8dcd7ced6a11a34c2eb865a1d/contracts/BridgeExecutorBase.sol,BridgeExecutorBase.sol,// SWC-131-Presence of unused variables: L271
SWC-119-Shadowing State Variables,N/A,L29,DAppSCAN-source/contracts/QuillAudits-AAVE-Incentives Proposal/incentives-controller-ad534cdedd91d8db5ac1302ef2c200de75377790/contracts/incentives/DistributionManager.sol,DistributionManager.sol,mapping(address => AssetData) public assets;
SWC-119-Shadowing State Variables,getRewardsBalance,L97,DAppSCAN-source/contracts/QuillAudits-AAVE-Incentives Proposal/incentives-controller-ad534cdedd91d8db5ac1302ef2c200de75377790/contracts/incentives/StakedTokenIncentivesController.sol,StakedTokenIncentivesController.sol,"function getRewardsBalance(address[] calldata assets, address user)"
SWC-119-Shadowing State Variables,claimRewards,L123,DAppSCAN-source/contracts/QuillAudits-AAVE-Incentives Proposal/incentives-controller-ad534cdedd91d8db5ac1302ef2c200de75377790/contracts/incentives/StakedTokenIncentivesController.sol,StakedTokenIncentivesController.sol,// SWC-119-Shadowing State Variables: L123
SWC-119-Shadowing State Variables,claimRewardsOnBehalf,L129,DAppSCAN-source/contracts/QuillAudits-AAVE-Incentives Proposal/incentives-controller-ad534cdedd91d8db5ac1302ef2c200de75377790/contracts/incentives/StakedTokenIncentivesController.sol,StakedTokenIncentivesController.sol,"address[] calldata assets,"
SWC-119-Shadowing State Variables,_claimRewards,L185,DAppSCAN-source/contracts/QuillAudits-AAVE-Incentives Proposal/incentives-controller-ad534cdedd91d8db5ac1302ef2c200de75377790/contracts/incentives/StakedTokenIncentivesController.sol,StakedTokenIncentivesController.sol,"address[] calldata assets,"
SWC-107-Reentrancy,_pullAToken,L79,DAppSCAN-source/contracts/QuillAudits-AAVE-ParaSwap Adapter/aave-protocol-v2-14e2ab47d95f42ec5ee486f367067e78a7588878/contracts/adapters/BaseParaSwapAdapter.sol,BaseParaSwapAdapter.sol,//  SWC-107-Reentrancy: L79
SWC-104-Unchecked Call Return Value,_pullAToken,L104,DAppSCAN-source/contracts/QuillAudits-AAVE-ParaSwap Adapter/aave-protocol-v2-14e2ab47d95f42ec5ee486f367067e78a7588878/contracts/adapters/BaseParaSwapAdapter.sol,BaseParaSwapAdapter.sol,"LENDING_POOL.withdraw(reserve, amount, address(this));"
SWC-107-Reentrancy,_sellOnParaSwap,L35,DAppSCAN-source/contracts/QuillAudits-AAVE-ParaSwap Adapter/aave-protocol-v2-14e2ab47d95f42ec5ee486f367067e78a7588878/contracts/adapters/BaseParaSwapSellAdapter.sol,BaseParaSwapSellAdapter.sol,//  SWC-107-Reentrancy: L35
SWC-101-Integer Overflow and Underflow,_sellOnParaSwap,L53,DAppSCAN-source/contracts/QuillAudits-AAVE-ParaSwap Adapter/aave-protocol-v2-14e2ab47d95f42ec5ee486f367067e78a7588878/contracts/adapters/BaseParaSwapSellAdapter.sol,BaseParaSwapSellAdapter.sol,uint256 expectedMinAmountOut =
SWC-122-Lack of Proper Signature Verification,deposit,L61 - L90,DAppSCAN-source/contracts/QuillAudits-Abyss Finance-Abyss Eth2 Depositor/abyss-eth2depositor-a2d58dea4d79846dc682fe93ac3e0eca02323d11/contracts/AbyssEth2Depositor.sol,AbyssEth2Depositor.sol,//  SWC-122-Lack of Proper Signature Verification: L61 - L90
SWC-107-Reentrancy,deposit,L82,DAppSCAN-source/contracts/QuillAudits-Abyss Finance-Abyss Eth2 Depositor/abyss-eth2depositor-a2d58dea4d79846dc682fe93ac3e0eca02323d11/contracts/AbyssEth2Depositor.sol,AbyssEth2Depositor.sol,IDepositContract(address(depositContract)).deposit{value: collateral}(
SWC-135-Code With No Effects,setReflectionsTax,L153,DAppSCAN-source/contracts/QuillAudits-ACYC Token Smart Contracts/AllCoinsYieldCapital0xB56A1f3310578f23120182Fb2e58c087EFE6e147/src/contracts/acyc.sol,acyc.sol,"require(tax >= 0 && tax <= 10, ""ERC20: tax out of band"");"
SWC-135-Code With No Effects,setTreasuryTax,L160,DAppSCAN-source/contracts/QuillAudits-ACYC Token Smart Contracts/AllCoinsYieldCapital0xB56A1f3310578f23120182Fb2e58c087EFE6e147/src/contracts/acyc.sol,acyc.sol,"require(tax >= 0 && tax <= 10, ""ERC20: tax out of band"");"
SWC-126-Insufficient Gas Griefing,transfer,L176,DAppSCAN-source/contracts/QuillAudits-ACYC Token Smart Contracts/AllCoinsYieldCapital0xB56A1f3310578f23120182Fb2e58c087EFE6e147/src/contracts/acyc.sol,acyc.sol,// public functions to do things
SWC-107-Reentrancy,_transfer,L331,DAppSCAN-source/contracts/QuillAudits-ACYC Token Smart Contracts/AllCoinsYieldCapital0xB56A1f3310578f23120182Fb2e58c087EFE6e147/src/contracts/acyc.sol,acyc.sol,// _tokenTransfer function can do the accounting work
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/QuillAudits-AgriUT Smart Contract/AgriUT-a3638774be81be9f113ae0ddc54f4a5b84038947/AgriUTToken.sol,AgriUTToken.sol,pragma solidity =0.8.6;
SWC-102-Outdated Compiler Version,N/A,L5,DAppSCAN-source/contracts/QuillAudits-AIDUS Smart Contract/code/Etherscan-0xa957045A12D270e2eE0dcA9A3340c340e05d4670.sol,Etherscan-0xa957045A12D270e2eE0dcA9A3340c340e05d4670.sol,pragma solidity ^0.5.0;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/QuillAudits-Akropolis-Vesting/akropolis-vesting-7f4f4543b08d3749b92839c85e1d77a33d917a37/contracts/Migrations.sol,Migrations.sol,pragma solidity >=0.4.21 <0.6.0;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/QuillAudits-Akropolis-Vesting/AkropolisToken-28a415392489a1a88073c3d0fd22b141f4d3170e/contracts/Migrations.sol,Migrations.sol,pragma solidity >=0.4.24;
SWC-113-DoS with Failed Call,approve,L42,DAppSCAN-source/contracts/QuillAudits-Akropolis-Vesting/AkropolisToken-28a415392489a1a88073c3d0fd22b141f4d3170e/contracts/token/AkropolisToken.sol,AkropolisToken.sol,"return super.approve(_spender, _value);"
SWC-113-DoS with Failed Call,transfer,L77,DAppSCAN-source/contracts/QuillAudits-Akropolis-Vesting/AkropolisToken-28a415392489a1a88073c3d0fd22b141f4d3170e/contracts/token/AkropolisToken.sol,AkropolisToken.sol,"return super.transfer(_to, _amount);"
SWC-113-DoS with Failed Call,transferFrom,L95,DAppSCAN-source/contracts/QuillAudits-Akropolis-Vesting/AkropolisToken-28a415392489a1a88073c3d0fd22b141f4d3170e/contracts/token/AkropolisToken.sol,AkropolisToken.sol,"return super.transferFrom(_from, _to, _amount);"
SWC-103-Floating Pragma,N/A,L11,DAppSCAN-source/contracts/QuillAudits-Akt.io Smart Contract/code/Etherscan-0x70Cbf5E72A85B41808EF20f6EB05A9b8F223F220.sol,Etherscan-0x70Cbf5E72A85B41808EF20f6EB05A9b8F223F220.sol,pragma solidity ^0.8.0;
SWC-103-Floating Pragma,N/A,L5,DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol,stakin_contract.sol,pragma solidity ^0.6.0;
SWC-107-Reentrancy,AVSTokenDonation,L74 - L84,DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol,stakin_contract.sol,function AVSTokenDonation(uint256 amount) external {
SWC-107-Reentrancy,emergencyWithdraw,L163 - L171,DAppSCAN-source/contracts/QuillAudits-Alium Finance Smart Contract/alium-farm-e37d6af39af68049c2684085f025385407b4bd55/contracts/MasterChef.sol,MasterChef.sol,function emergencyWithdraw(uint256 _pid) external {
SWC-128-DoS With Block Gas Limit,blockReward,L271 - L281,DAppSCAN-source/contracts/QuillAudits-Alium Finance Smart Contract/alium-farm-e37d6af39af68049c2684085f025385407b4bd55/contracts/MasterChef.sol,MasterChef.sol,// SWC-128-DoS With Block Gas Limit: L271 - L281
SWC-128-DoS With Block Gas Limit,massUpdatePools,L284 - L289,DAppSCAN-source/contracts/QuillAudits-Alium Finance Smart Contract/alium-farm-e37d6af39af68049c2684085f025385407b4bd55/contracts/MasterChef.sol,MasterChef.sol,// Update reward variables for all pools. Be careful of gas spending!
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/QuillAudits-AliumSwap Smart Contract/alium-swap-periphery-6aff4c5ad4695b77358eae0627c98d72621256bc/contracts/Migrations.sol,Migrations.sol,pragma solidity >=0.4.25 <0.7.0;
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/QuillAudits-Amplify Smart Contract/contracts-d8af5f11f3b6ab59d09a56ebc229012900dc1cc8/protocol/contracts/Asset/Asset.sol,Asset.sol,pragma solidity ^0.8.0;
SWC-114-Transaction Order Dependence,approve,L63 - L66,DAppSCAN-source/contracts/QuillAudits-Amplify Smart Contract/contracts-d8af5f11f3b6ab59d09a56ebc229012900dc1cc8/protocol/contracts/ERC20/ERC20.sol,ERC20.sol,"function approve(address spender, uint amount) public virtual override returns (bool) {"
SWC-116-Block values as a proxy for time,getBlockTimestamp,L330,DAppSCAN-source/contracts/QuillAudits-Amplify Smart Contract/contracts-d8af5f11f3b6ab59d09a56ebc229012900dc1cc8/protocol/contracts/Liquidity/Pool.sol,Pool.sol,return block.timestamp;
SWC-128-DoS With Block Gas Limit,getSnapshot,L181 - L193,DAppSCAN-source/contracts/QuillAudits-Amplify Smart Contract/contracts-d8af5f11f3b6ab59d09a56ebc229012900dc1cc8/protocol/contracts/Vesting/Vesting.sol,Vesting.sol,for(uint8 i=0; i < entryIdsByRecipient[account].length; i++) {
SWC-128-DoS With Block Gas Limit,createEntries,"L99, L111, L153, L180, L211",DAppSCAN-source/contracts/QuillAudits-Amplify Smart Contract (vesting)/contracts-d8af5f11f3b6ab59d09a56ebc229012900dc1cc8/Vesting.sol,Vesting.sol,for(uint8 i=0; i < _entries.length; i++) {
SWC-116-Block values as a proxy for time,getBlockTimestamp,L218,DAppSCAN-source/contracts/QuillAudits-Amplify Smart Contract (vesting)/contracts-d8af5f11f3b6ab59d09a56ebc229012900dc1cc8/Vesting.sol,Vesting.sol,return block.timestamp;
SWC-119-Shadowing State Variables,userOwnsTheLock,L108-110,DAppSCAN-source/contracts/QuillAudits-Amplify voting Smart Contract/contracts-9dd44ac15cb66685a5beb038065f1673bcd6a8bb/Voting.sol,Voting.sol,"function userOwnsTheLock(Lock memory _lock, address owner) internal pure returns (bool) {"
SWC-108-State Variable Default Visibility,N/A,L35,DAppSCAN-source/contracts/QuillAudits-Amplify_Child_Token_Smart_Contract/contracts-31526ea5e5c5a1c308d0065aab1f57ec8d765fc6/AMPTChild.sol,AMPTChild.sol,address deployer;
SWC-102-Outdated Compiler Version,N/A,L5,DAppSCAN-source/contracts/QuillAudits-April Smart Contract/code/BEP20Token.sol,BEP20Token.sol,pragma solidity 0.5.16;
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/QuillAudits-AQEX Token Smart Contract/erc-20-token-3628abfa6ea2636866f7d5ad1f8cc570b0d5bb1b/Token.sol,Token.sol,pragma solidity ^0.8.0;
SWC-103-Floating Pragma,N/A,L5,DAppSCAN-source/contracts/QuillAudits-ASVA Smart Contract/code/code.sol,code.sol,// SWC-102-Outdated Compiler Version: L6
SWC-102-Outdated Compiler Version,N/A,L6,DAppSCAN-source/contracts/QuillAudits-ASVA Smart Contract/code/code.sol,code.sol,pragma solidity >=0.6.0 <0.8.0;
SWC-135-Code With No Effects,N/A,L975 - L981,DAppSCAN-source/contracts/QuillAudits-ASVA Smart Contract/code/code.sol,code.sol,// SWC-135-Code With No Effects: L975 - L981
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/QuillAudits-Avatar Art Market Smart Contract/contracts-83897b4075720fe76524d3face58cfebd6bfe667/contracts/AvatarArtArtistKYC.sol,AvatarArtArtistKYC.sol,pragma solidity ^0.8.0;
SWC-135-Code With No Effects,N/A,L12,DAppSCAN-source/contracts/QuillAudits-Avatar Art Market Smart Contract/contracts-83897b4075720fe76524d3face58cfebd6bfe667/contracts/AvatarArtArtistKYC.sol,AvatarArtArtistKYC.sol,// SWC-135-Code With No Effects: L12
SWC-103-Floating Pragma,N/A,L7,DAppSCAN-source/contracts/QuillAudits-AVX Smart Contract/code/code.sol,code.sol,pragma solidity ^0.8.6;
SWC-101-Integer Overflow and Underflow,advisorShareWithdraw,L166 - L168,DAppSCAN-source/contracts/QuillAudits-B-Cube-B-Cube/b-cube-ico-451e249a7200ea094fdfa1baa1a50cb7b17233f2/contracts/Treasury.sol,Treasury.sol,if (now >= listingTime + 104 weeks) allowance = increase * 4;
SWC-119-Shadowing State Variables,N/A,L12,DAppSCAN-source/contracts/QuillAudits-Backed Smart Contract/backed-token-contracts-de0d6e6e8484f6147322538d0ab2a77091beb7ba/contracts/BackedToken.sol,BackedToken.sol,address private _owner;
SWC-100-Function Default Visibility,unlock,L28,DAppSCAN-source/contracts/QuillAudits-Backed Smart Contract/backed-token-contracts-de0d6e6e8484f6147322538d0ab2a77091beb7ba/contracts/BackedToken.sol,BackedToken.sol,// SWC-100-Function Default Visibility: L28
SWC-102-Outdated Compiler Version,N/A,L10,DAppSCAN-source/contracts/QuillAudits-BasketCoin Smart Contract/code/BsktLPPool.sol,BsktLPPool.sol,pragma solidity ^0.5.0;
SWC-103-Floating Pragma,N/A,L10,DAppSCAN-source/contracts/QuillAudits-BasketCoin Smart Contract/code/BsktLPPool.sol,BsktLPPool.sol,pragma solidity ^0.5.0;
SWC-135-Code With No Effects,N/A,"L350, L356-359",DAppSCAN-source/contracts/QuillAudits-BasketCoin Smart Contract/code/BsktLPPool.sol,BsktLPPool.sol,uint256 public rewardPerTokenStored;
SWC-116-Block values as a proxy for time,checkStart,L363,DAppSCAN-source/contracts/QuillAudits-BasketCoin Smart Contract/code/BsktLPPool.sol,BsktLPPool.sol,require(
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/QuillAudits-BCUBE Smart Contract/b-cube-ico-13f9f8a991a65f3e0ca60a2078121fdd5a921fb0/contracts/BCubePublicSale.sol,BCubePublicSale.sol,pragma solidity 0.5.17;
SWC-120-Weak Sources of Randomness from Chain Attributes,isOpen,L162,DAppSCAN-source/contracts/QuillAudits-BCUBE Smart Contract/b-cube-ico-13f9f8a991a65f3e0ca60a2078121fdd5a921fb0/contracts/BCubePublicSale.sol,BCubePublicSale.sol,// solhint-disable-next-line not-rely-on-time
SWC-120-Weak Sources of Randomness from Chain Attributes,setPrivateAllocation,L173,DAppSCAN-source/contracts/QuillAudits-BCUBE Smart Contract/b-cube-ico-13f9f8a991a65f3e0ca60a2078121fdd5a921fb0/contracts/BCubePublicSale.sol,BCubePublicSale.sol,onlyWhitelistAdmin {
SWC-107-Reentrancy,buyBcubeUsingUSDT,L264 - L278,DAppSCAN-source/contracts/QuillAudits-BCUBE Smart Contract/b-cube-ico-13f9f8a991a65f3e0ca60a2078121fdd5a921fb0/contracts/BCubePublicSale.sol,BCubePublicSale.sol,
SWC-103-Floating Pragma,N/A,L70,DAppSCAN-source/contracts/QuillAudits-biffy_love_audit.pdf/code/Etherscan-0x98a56c7b03eedb7acc46308611561622e51ec13a.sol,Etherscan-0x98a56c7b03eedb7acc46308611561622e51ec13a.sol,pragma solidity ^0.5.0;
SWC-135-Code With No Effects,sendValue,L407-430,DAppSCAN-source/contracts/QuillAudits-biffy_love_audit.pdf/code/Etherscan-0x98a56c7b03eedb7acc46308611561622e51ec13a.sol,Etherscan-0x98a56c7b03eedb7acc46308611561622e51ec13a.sol,library Math {
SWC-104-Unchecked Call Return Value,transfer,// SWC-104-Unchecked Call Return Value,DAppSCAN-source/contracts/QuillAudits-biffy_love_audit.pdf/code/Etherscan-0x98a56c7b03eedb7acc46308611561622e51ec13a.sol,Etherscan-0x98a56c7b03eedb7acc46308611561622e51ec13a.sol,N/A
SWC-113-DoS with Failed Call,_sellAndDistributeAccumulatedTKNFee,L167,DAppSCAN-source/contracts/QuillAudits-Big League Smart Contract/code/StandardToken.sol,StandardToken.sol,function _sellAndDistributeAccumulatedTKNFee() internal swapping {
SWC-100-Function Default Visibility,transfer,L121,DAppSCAN-source/contracts/QuillAudits-BigDog Smart Contract/code/StandardToken.sol,StandardToken.sol,"function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {"
SWC-100-Function Default Visibility,approve,L105,DAppSCAN-source/contracts/QuillAudits-Binamon Energy Smart Contract/code/BNRG.sol,BNRG.sol,"function approve(address delegate, uint256 numTokens) public override returns (bool) {"
SWC-100-Function Default Visibility,approve,L104,DAppSCAN-source/contracts/QuillAudits-Binamon Z1 Smart Contract/code/BMON_Z1.sol,BMON_Z1.sol,"function approve(address delegate, uint256 numTokens) public override returns (bool) {"
SWC-100-Function Default Visibility,owner,L113,DAppSCAN-source/contracts/QuillAudits-Bitbook Smart Contract V2/code/BitBookStake.sol,BitBookStake.sol,function owner() public view returns (address) {
SWC-100-Function Default Visibility,set,L926,DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol,BitBookStaking.sol,function set(
SWC-119-Shadowing State Variables,OwnershipTransferred,L404,DAppSCAN-source/contracts/QuillAudits-BitDiamond Smart Contract/code/bitdiamond.sol,bitdiamond.sol,address private _owner;
SWC-135-Code With No Effects,N/A,L460,DAppSCAN-source/contracts/QuillAudits-BitDiamond Smart Contract/code/bitdiamond.sol,bitdiamond.sol,mapping (address => uint256) private _tOwned;
SWC-116-Block values as a proxy for time,sendTokens,L72,DAppSCAN-source/contracts/QuillAudits-BitSliced Smart Contract/SLICED-Smart-Contract-d243190125c15dbe9628a844f764a5d0e484f3a0/Sliced.sol,Sliced.sol,"require(block.timestamp>=lastTransferDate+duration,""SLICED::You already transfered tokens this month"");"
SWC-103-Floating Pragma,N/A,L10,DAppSCAN-source/contracts/QuillAudits-Bollycoin staking Smart Contract/code/Bollystake.sol,Bollystake.sol,pragma solidity ^0.8.0;
SWC-100-Function Default Visibility,N/A,L772,DAppSCAN-source/contracts/QuillAudits-Bollycoin staking Smart Contract/code/Bollystake.sol,Bollystake.sol,function set_owner(address _owner) public {
SWC-135-Code With No Effects,N/A,L846,DAppSCAN-source/contracts/QuillAudits-BollyStake Smart Contract (new)/code/Bollystake.sol,Bollystake.sol,mapping(address => locked) users;
SWC-108-State Variable Default Visibility,N/A,L846-847,DAppSCAN-source/contracts/QuillAudits-BollyStake Smart Contract (new)/code/Bollystake.sol,Bollystake.sol,mapping(address => locked) users;
SWC-116-Block values as a proxy for time,relock_stake,L1022,DAppSCAN-source/contracts/QuillAudits-BollyStake Smart Contract (new)/code/Bollystake.sol,Bollystake.sol,uint256 expired_amount = expired_stakes(msg.sender);
SWC-101-Integer Overflow and Underflow,_governanceTokenPrice,L148,DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol,Investment.sol,return amount.mul(10**(18 - decimals + GOVERNANCE_TOKEN_PRICE_DECIMALS)).div(governanceTokenPrice);
SWC-135-Code With No Effects,price,L189,DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/Market.sol,Market.sol,if (address(productToken) != currency) {
SWC-122-Lack of Proper Signature Verification,put,L89,DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/depositary/RealAssetDepositaryBalanceView.sol,RealAssetDepositaryBalanceView.sol,) external onlyAllowed {
SWC-107-Reentrancy,_payToRecipients,L228,DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/profit/ProfitSplitter.sol,ProfitSplitter.sol,"incoming.safeTransfer(recipient, amount);"
SWC-101-Integer Overflow and Underflow,_governanceTokenPrice,L148,DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/Investment.sol,Investment.sol,return amount.mul(10**(18 - decimals + GOVERNANCE_TOKEN_PRICE_DECIMALS)).div(governanceTokenPrice);
SWC-135-Code With No Effects,addDepositary,L50 - L71,DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/depositary/AgregateDepositaryBalanceView.sol,AgregateDepositaryBalanceView.sol,function addDepositary(address depositary) external onlyOwner {
SWC-107-Reentrancy,_payToRecipients,L228,DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol,ProfitSplitter.sol,"incoming.safeTransfer(recipient, amount);"
SWC-103-Floating Pragma,N/A,L5,DAppSCAN-source/contracts/QuillAudits-Bridge Network Smart Contract/bridgeToken-9636c155e8fcfff5cda8b609a77c7d4527b5b402/bridgeToken.sol,bridgeToken.sol,pragma solidity ^0.8.0;
SWC-100-Function Default Visibility,transferOwnership,L172,DAppSCAN-source/contracts/QuillAudits-Bridge Network Smart Contract/bridgeToken-9636c155e8fcfff5cda8b609a77c7d4527b5b402/bridgeToken.sol,bridgeToken.sol,function renounceOwnership() public virtual onlyOwner {
SWC-135-Code With No Effects,_approve,L485-500,DAppSCAN-source/contracts/QuillAudits-Bridge Network Smart Contract/bridgeToken-9636c155e8fcfff5cda8b609a77c7d4527b5b402/bridgeToken.sol,bridgeToken.sol,"function _burn(address account, uint256 amount) internal virtual {"
SWC-103-Floating Pragma,N/A,L5,DAppSCAN-source/contracts/QuillAudits-BscDragon Smart Contract/bridgeToken-9636c155e8fcfff5cda8b609a77c7d4527b5b402/bridgeToken.sol,bridgeToken.sol,pragma solidity ^0.8.0;
SWC-135-Code With No Effects,_msgData,L117,DAppSCAN-source/contracts/QuillAudits-BscDragon Smart Contract/bridgeToken-9636c155e8fcfff5cda8b609a77c7d4527b5b402/bridgeToken.sol,bridgeToken.sol,function _msgData() internal view virtual returns (bytes calldata) {
SWC-100-Function Default Visibility,symbol,"L249, L257",DAppSCAN-source/contracts/QuillAudits-BscDragon Smart Contract/bridgeToken-9636c155e8fcfff5cda8b609a77c7d4527b5b402/bridgeToken.sol,bridgeToken.sol,function name() public view virtual override returns (string memory) {
SWC-135-Code With No Effects,_burn,L485,DAppSCAN-source/contracts/QuillAudits-BscDragon Smart Contract/bridgeToken-9636c155e8fcfff5cda8b609a77c7d4527b5b402/bridgeToken.sol,bridgeToken.sol,"function _burn(address account, uint256 amount) internal virtual {"
SWC-102-Outdated Compiler Version,N/A,L7,DAppSCAN-source/contracts/QuillAudits-BsktEthLPPool Smart Contract/code/BsktEthLPPool.sol,BsktEthLPPool.sol,pragma solidity 0.5.0;
SWC-116-Block values as a proxy for time,updateReward,"L400, L417",DAppSCAN-source/contracts/QuillAudits-BsktEthLPPool Smart Contract/code/BsktEthLPPool.sol,BsktEthLPPool.sol,"block.timestamp >= starttime,"
SWC-107-Reentrancy,exit,L459-462,DAppSCAN-source/contracts/QuillAudits-BsktEthLPPool Smart Contract/code/BsktEthLPPool.sol,BsktEthLPPool.sol,function exit() nonReentrant external {
SWC-102-Outdated Compiler Version,N/A,L1,DAppSCAN-source/contracts/QuillAudits-Burst Token Smart Contract/BURST-Token-33b0e2e7ec14828e000ae95e7d4cef77e0796acd/burst.sol,burst.sol,pragma solidity ^0.5.0;
SWC-103-Floating Pragma,N/A,L1,DAppSCAN-source/contracts/QuillAudits-Burst Token Smart Contract/BURST-Token-33b0e2e7ec14828e000ae95e7d4cef77e0796acd/burst.sol,burst.sol,pragma solidity ^0.5.0;
SWC-101-Integer Overflow and Underflow,totalSupply,L60,DAppSCAN-source/contracts/QuillAudits-Burst Token Smart Contract/BURST-Token-33b0e2e7ec14828e000ae95e7d4cef77e0796acd/burst.sol,burst.sol,function totalSupply() public view returns (uint) {
SWC-114-Transaction Order Dependence,approve,L71-75,DAppSCAN-source/contracts/QuillAudits-Burst Token Smart Contract/BURST-Token-33b0e2e7ec14828e000ae95e7d4cef77e0796acd/burst.sol,burst.sol,//SWC-114-Transaction Order Dependence: L71-75
SWC-135-Code With No Effects,decimals,L368-370,DAppSCAN-source/contracts/QuillAudits-Buttercup Smart Contract/BEP20Token/BEP20Token.sol,BEP20Token.sol,function getOwner() external view returns (address) {
SWC-135-Code With No Effects,_approve,L557-563,DAppSCAN-source/contracts/QuillAudits-Buttercup Smart Contract/BEP20Token/BEP20Token.sol,BEP20Token.sol,"function _burn(address account, uint256 amount) internal {"
SWC-135-Code With No Effects,_burnFrom,L592-595,DAppSCAN-source/contracts/QuillAudits-Buttercup Smart Contract/BEP20Token/BEP20Token.sol,BEP20Token.sol,"function _burnFrom(address account, uint256 amount) internal {"
SWC-135-Code With No Effects,getCTokenBalanceInternal,L410,DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Compound Protocol/compound-protocol-23a4ae93adc70334553f5a83429a4e967c1eefaa/contracts/CCollateralCapErc20.sol,CCollateralCapErc20.sol,if (isCollateralTokenInit[account]) {
SWC-131-Presence of unused variables,_becomeImplementation,L23,DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Compound Protocol/compound-protocol-23a4ae93adc70334553f5a83429a4e967c1eefaa/contracts/CCollateralCapErc20Delegate.sol,CCollateralCapErc20Delegate.sol,data;
SWC-131-Presence of unused variables,_becomeImplementation,L27 - L29,DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Compound Protocol/compound-protocol-23a4ae93adc70334553f5a83429a4e967c1eefaa/contracts/CCollateralCapErc20Delegate.sol,CCollateralCapErc20Delegate.sol,if (false) {
SWC-131-Presence of unused variables,mintAllowed,L240,DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Compound Protocol/compound-protocol-23a4ae93adc70334553f5a83429a4e967c1eefaa/contracts/Comptroller.sol,Comptroller.sol,minter;
SWC-135-Code With No Effects,mintVerify,L274,DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Compound Protocol/compound-protocol-23a4ae93adc70334553f5a83429a4e967c1eefaa/contracts/Comptroller.sol,Comptroller.sol,//  SWC-135-Code With No Effects: L274
SWC-135-Code With No Effects,borrowVerify,L412,DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Compound Protocol/compound-protocol-23a4ae93adc70334553f5a83429a4e967c1eefaa/contracts/Comptroller.sol,Comptroller.sol,//  SWC-135-Code With No Effects: L412
SWC-135-Code With No Effects,repayBorrowVerify,L462,DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Compound Protocol/compound-protocol-23a4ae93adc70334553f5a83429a4e967c1eefaa/contracts/Comptroller.sol,Comptroller.sol,//  SWC-135-Code With No Effects: L462
SWC-135-Code With No Effects,liquidateBorrowVerify,L530,DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Compound Protocol/compound-protocol-23a4ae93adc70334553f5a83429a4e967c1eefaa/contracts/Comptroller.sol,Comptroller.sol,//  SWC-135-Code With No Effects: L530
SWC-135-Code With No Effects,seizeVerify,L596,DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Compound Protocol/compound-protocol-23a4ae93adc70334553f5a83429a4e967c1eefaa/contracts/Comptroller.sol,Comptroller.sol,//  SWC-135-Code With No Effects: L596
SWC-135-Code With No Effects,transferVerify,L644,DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Compound Protocol/compound-protocol-23a4ae93adc70334553f5a83429a4e967c1eefaa/contracts/Comptroller.sol,Comptroller.sol,* @notice Validates transfer and reverts on rejection. May emit logs.
SWC-126-Insufficient Gas Griefing,claimComp,L1266,DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Compound Protocol/compound-protocol-23a4ae93adc70334553f5a83429a4e967c1eefaa/contracts/Comptroller.sol,Comptroller.sol,/**
SWC-107-Reentrancy,gulp,L133,DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol,CCapableErc20.sol,function gulp() external {
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/QuillAudits-Catharsis Smart Contract/catharsis-vesting-22d1bb2e234b79b10c33a4ec76ce2a98d2825364/contracts/Vesting.sol,Vesting.sol,pragma solidity ^0.8.4;
SWC-135-Code With No Effects,lockBatch,L149,DAppSCAN-source/contracts/QuillAudits-Catharsis Smart Contract/catharsis-vesting-22d1bb2e234b79b10c33a4ec76ce2a98d2825364/contracts/Vesting.sol,Vesting.sol,} else if (_input[i].unlockAt.length == 0) {
SWC-103-Floating Pragma,N/A,"L1, all contract",DAppSCAN-source/contracts/QuillAudits-Ceres Token Smart Contract/Bridge/Bridge.sol,Bridge.sol,pragma solidity ^0.7.4;
SWC-119-Shadowing State Variables,_functionCallWithValue,L410-412,DAppSCAN-source/contracts/QuillAudits-Champions League Smart Contract/CLEToken/CLEToken.sol,CLEToken.sol,// The easiest way to bubble the revert reason is using memory via assembly
SWC-126-Insufficient Gas Griefing,includeInReward,L887-898,DAppSCAN-source/contracts/QuillAudits-Champions League Smart Contract/CLEToken/CLEToken.sol,CLEToken.sol,function includeInReward(address account) external onlyOwner() {
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/QuillAudits-Checkdot Smart Contract/CheckdotERC20Contract-8a47ef13ace93e0bd473fb1c3893790569a2adc8/contracts/CheckDot.sol,CheckDot.sol,pragma solidity ^0.8.0;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/QuillAudits-Checkdot Smart Contract _new/CheckDotPrivateSaleContract-84237ce510704d2761d4b88167686be2ac5ad807/contracts/CheckDotPrivateSale.sol,CheckDotPrivateSale.sol,pragma solidity ^0.8.9;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/QuillAudits-Checkdot Smart Contract _New - QuillAudits/CheckDotPrivateSaleContract-84237ce510704d2761d4b88167686be2ac5ad807/contracts/CheckDotPrivateSale.sol,CheckDotPrivateSale.sol,pragma solidity ^0.8.9;
SWC-102-Outdated Compiler Version,N/A,L11,DAppSCAN-source/contracts/QuillAudits-Chronic Token Smart Contract/ChronicToken-bdc08c623c9b3db912b94a2f3271afd9ad1243ee/chronicToken.sol,chronicToken.sol,pragma solidity ^0.6.12;
SWC-128-DoS With Block Gas Limit,includeInReward,L847-858,DAppSCAN-source/contracts/QuillAudits-Chronic Token Smart Contract/ChronicToken-bdc08c623c9b3db912b94a2f3271afd9ad1243ee/chronicToken.sol,chronicToken.sol,function includeInReward(address account) external onlyOwner() {
SWC-128-DoS With Block Gas Limit,_getCurrentSupply,L942-952,DAppSCAN-source/contracts/QuillAudits-Chronic Token Smart Contract/ChronicToken-bdc08c623c9b3db912b94a2f3271afd9ad1243ee/chronicToken.sol,chronicToken.sol,"function _getCurrentSupply() private view returns(uint256, uint256) {"
SWC-104-Unchecked Call Return Value,release,L132,DAppSCAN-source/contracts/QuillAudits-Citrus Smart Contract/CitrusTechContract-e50a2a983928c10b76e6bc374ae6267f51af99b6/CitrusToken.sol,CitrusToken.sol,"BEP(address(this)).transfer(msg.sender, amount);"
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/QuillAudits-coalichain/CoaliSC-3f0920d650467279f7ceee08776bd74ecadd3237/Main.sol,Main.sol,pragma solidity ^0.4.21;
SWC-107-Reentrancy,createBallot,L51,DAppSCAN-source/contracts/QuillAudits-coalichain/CoaliSC-3f0920d650467279f7ceee08776bd74ecadd3237/Main.sol,Main.sol,ballotAddresses.push(bl);
SWC-101-Integer Overflow and Underflow,_transfer,L387,DAppSCAN-source/contracts/QuillAudits-CoinDogg Smart Contract/code/CoinDogg.sol,CoinDogg.sol,_balances[sender] -= amount;
SWC-101-Integer Overflow and Underflow,_mint,L407,DAppSCAN-source/contracts/QuillAudits-CoinDogg Smart Contract/code/CoinDogg.sol,CoinDogg.sol,_totalSupply += amount;
SWC-102-Outdated Compiler Version,N/A,L1,DAppSCAN-source/contracts/QuillAudits-CoinMama Token Smart Contract/CoinMamaToken-aec477aa949921a883faa694c690cc0ec26eacfd/CoinMama.sol,CoinMama.sol,pragma solidity ^0.6.2;
SWC-135-Code With No Effects,_beforeTokenTransfer,L648-652,DAppSCAN-source/contracts/QuillAudits-CoinMama Token Smart Contract/CoinMamaToken-aec477aa949921a883faa694c690cc0ec26eacfd/CoinMama.sol,CoinMama.sol,function _beforeTokenTransfer(
SWC-105-Unprotected Ether Withdrawal,withdraw,L1137-1139,DAppSCAN-source/contracts/QuillAudits-CoinMama Token Smart Contract/CoinMamaToken-aec477aa949921a883faa694c690cc0ec26eacfd/CoinMama.sol,CoinMama.sol,function withdraw(uint256 weiAmount) external onlyOwner{
SWC-135-Code With No Effects,N/A,L5 - L8,DAppSCAN-source/contracts/QuillAudits-CoinPoker Smart Contract/new-chp-smartcontract-307a05c78daa845bc4a4902836c06f834b10f468/contracts/CoinPokerChipsToken.sol,CoinPokerChipsToken.sol,// SWC-135-Code With No Effects: L5 - L8
SWC-103-Floating Pragma,N/A,L7,DAppSCAN-source/contracts/QuillAudits-COX/code/COX.sol,COX.sol,pragma solidity <=0.7.0;
SWC-103-Floating Pragma,N/A,L12,DAppSCAN-source/contracts/QuillAudits-Crazy Snake Smart Contract/CrazyToken-489ae9dab8eb5ba684fa1c7dbbd803c9db52dc9d/contracts/CrazyToken.sol,CrazyToken.sol,pragma solidity >=0.4.22 <0.9.0;
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/QuillAudits-CronosPad Smart Contract/cronospad-1605d38fab314cab399093f756b41093fdbc859f/contracts/cronospad.sol,cronospad.sol,pragma solidity ^0.8.0;
SWC-116-Block values as a proxy for time,rollStartIndex,L355 - L374,DAppSCAN-source/contracts/QuillAudits-CryptoBatz Smart Contract/crypto-batz-contracts-07ee07dd442c34622798f1ee5b73ef8ff59cef48/contracts/CryptoBatz.sol,CryptoBatz.sol,function rollStartIndex() external onlyOwner {
SWC-103-Floating Pragma,N/A,L6,DAppSCAN-source/contracts/QuillAudits-CryptoGamez Smart Contract/CryptoGamez/CryptoGamez.sol,CryptoGamez.sol,pragma solidity ^0.8.6;
SWC-104-Unchecked Call Return Value,_transfer,L211,DAppSCAN-source/contracts/QuillAudits-Dare Smart Contract/code/ERC20.sol,ERC20.sol,"function _transfer(address sender, address recipient, uint256 amount) internal virtual {"
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/QuillAudits-DEFINE Token Smart Contract/definetics-023ddbd2182d96306fb020573a64b50eaed0a87a/contracts/Define.sol,Define.sol,pragma solidity ^0.8.0;
SWC-135-Code With No Effects,addLiquidity,L474 - L489,DAppSCAN-source/contracts/QuillAudits-DEFINE Token Smart Contract/definetics-023ddbd2182d96306fb020573a64b50eaed0a87a/contracts/Define.sol,Define.sol,// SWC-135-Code With No Effects: L474 - L489
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/QuillAudits-DEFINE Token Smart Contract/definetics-023ddbd2182d96306fb020573a64b50eaed0a87a/contracts/DefineDividendTracker.sol,DefineDividendTracker.sol,pragma solidity ^0.8.0;
SWC-102-Outdated Compiler Version,N/A,L4,DAppSCAN-source/contracts/QuillAudits-Dfyn Smart Contract/dual-farm-f44a4dcbeb41f38a9c02cb877a8c95b92685f972/contracts/StakingRewards.sol,StakingRewards.sol,pragma solidity >=0.6.11;
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/QuillAudits-Dfyn Smart Contract/dual-farm-f44a4dcbeb41f38a9c02cb877a8c95b92685f972/contracts/StakingRewards.sol,StakingRewards.sol,pragma solidity >=0.6.11;
SWC-120-Weak Sources of Randomness from Chain Attributes,lastTimeRewardApplicable,L87,DAppSCAN-source/contracts/QuillAudits-Dfyn Smart Contract/dual-farm-f44a4dcbeb41f38a9c02cb877a8c95b92685f972/contracts/StakingRewards.sol,StakingRewards.sol,"return Math.min(block.timestamp, periodFinish);"
SWC-120-Weak Sources of Randomness from Chain Attributes,notifyRewardAmount,"L223, L225, L227",DAppSCAN-source/contracts/QuillAudits-Dfyn Smart Contract/dual-farm-f44a4dcbeb41f38a9c02cb877a8c95b92685f972/contracts/StakingRewards.sol,StakingRewards.sol,if (block.timestamp >= periodFinish) {
SWC-120-Weak Sources of Randomness from Chain Attributes,notifyRewardAmount,L239,DAppSCAN-source/contracts/QuillAudits-Dfyn Smart Contract/dual-farm-f44a4dcbeb41f38a9c02cb877a8c95b92685f972/contracts/StakingRewards.sol,StakingRewards.sol,"rewardRate <= balance.div(periodFinish.sub(block.timestamp)),"
SWC-120-Weak Sources of Randomness from Chain Attributes,notifyRewardAmount,244,DAppSCAN-source/contracts/QuillAudits-Dfyn Smart Contract/dual-farm-f44a4dcbeb41f38a9c02cb877a8c95b92685f972/contracts/StakingRewards.sol,StakingRewards.sol,N/A
SWC-120-Weak Sources of Randomness from Chain Attributes,constructor,L36,DAppSCAN-source/contracts/QuillAudits-Dfyn Smart Contract/dual-farm-f44a4dcbeb41f38a9c02cb877a8c95b92685f972/contracts/StakingRewardsFactory.sol,StakingRewardsFactory.sol,"_stakingRewardsGenesis >= block.timestamp,"
SWC-120-Weak Sources of Randomness from Chain Attributes,notifyRewardAmount,L122,DAppSCAN-source/contracts/QuillAudits-Dfyn Smart Contract/dual-farm-f44a4dcbeb41f38a9c02cb877a8c95b92685f972/contracts/StakingRewardsFactory.sol,StakingRewardsFactory.sol,"block.timestamp >= stakingRewardsGenesis,"
SWC-128-DoS With Block Gas Limit,_removeOldSellHistories,L1021-1034,DAppSCAN-source/contracts/QuillAudits-DictatorDOGE Smart Contract/code/DictatorDOGE.sol,DictatorDOGE.sol,function _removeOldSellHistories() private {
SWC-103-Floating Pragma,N/A,"L3, all contract",DAppSCAN-source/contracts/QuillAudits-DOXY - v1.3/code/DoxyFinance_V3.sol,DoxyFinance_V3.sol,pragma solidity ^0.8.0;
SWC-108-State Variable Default Visibility,N/A,L270,DAppSCAN-source/contracts/QuillAudits-DOXY - v1.3/code/DoxyFinance_V3.sol,DoxyFinance_V3.sol,bool inSwap;
SWC-108-State Variable Default Visibility,lockTheSwap,L282-284,DAppSCAN-source/contracts/QuillAudits-DOXY - v1.3/code/DoxyFinance_V3.sol,DoxyFinance_V3.sol,address public pancakeSwapRouter =
SWC-135-Code With No Effects,lockTheSwap,"L284, L312-315",DAppSCAN-source/contracts/QuillAudits-DOXY - v1.3/code/DoxyFinance_V3.sol,DoxyFinance_V3.sol,address public USDT = address(0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47);   // BUSDT tesnet : 0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47 // USDT ropsten : 0xb03Ba6B311aaC34B06bdC97357E6f08BF2c12857
SWC-129-Typographical Error,lockTheSwap,"L339, 488, 500, 514, 658, 661, 780, 781, 782, 783, 784, 785, 821, 261, 262",DAppSCAN-source/contracts/QuillAudits-DOXY - v1.3/code/DoxyFinance_V3.sol,DoxyFinance_V3.sol,maxSellPerDayLimit = 1000000000;
SWC-100-Function Default Visibility,transfer,"L373-381, 393-411, 413-430, 432-443, 445-460, 679-695, 754-756, 758-764, 824-826, 828-830, 832-834, 836-838, 881-883, 972-974, 976-978, 980-982, 984-986, 988-990, 998-1000, 1002-1004, 1010-1012, 1014-1016, 1077-1079",DAppSCAN-source/contracts/QuillAudits-DOXY - v1.3/code/DoxyFinance_V3.sol,DoxyFinance_V3.sol,"function transfer(address recipient, uint256 amount)"
SWC-122-Lack of Proper Signature Verification,_transfer,L497-502，511-516,DAppSCAN-source/contracts/QuillAudits-DOXY - v1.3/code/DoxyFinance_V3.sol,DoxyFinance_V3.sol,if (block.timestamp < timeLimit + 24 * 1 hours) {
SWC-135-Code With No Effects,N/A,L809-818,DAppSCAN-source/contracts/QuillAudits-DOXY - v1.3/code/DoxyFinance_V3.sol,DoxyFinance_V3.sol,IRouter _pancakeRouter = IRouter(
SWC-129-Typographical Error,setAirdropWallet,"L918, 928, 938, 948, 958, 968",DAppSCAN-source/contracts/QuillAudits-DOXY - v1.3/code/DoxyFinance_V3.sol,DoxyFinance_V3.sol,whitelistWallet(marketingWallet) ;
SWC-114-Transaction Order Dependence,_mint,L755-766,DAppSCAN-source/contracts/QuillAudits-FalconSwap Smart Contract/code/Falcons.sol,Falcons.sol,function _transfer(
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/QuillAudits-Fundum Smart Contract/code/Fundum.sol,Fundum.sol,pragma solidity ^0.8.4;
SWC-116-Block values as a proxy for time,swapTokensForETH,"L351,369,388",DAppSCAN-source/contracts/QuillAudits-Fundum Smart Contract/code/Fundum.sol,Fundum.sol,block.timestamp
SWC-108-State Variable Default Visibility,N/A,L5,DAppSCAN-source/contracts/QuillAudits-FutiraCoin Smart Contract/code/token_audit.sol,token_audit.sol,uint pendingTransactionID = 1;//SWC-108-State Variable Default Visibility:L5
SWC-135-Code With No Effects,TransferedFromCurrentSupply,"L21,83",DAppSCAN-source/contracts/QuillAudits-FutiraCoin Smart Contract/code/token_audit.sol,token_audit.sol,"event TransferedFromCurrentSupply(uint from, address indexed to, uint256 value);"
SWC-103-Floating Pragma,N/A,L6,DAppSCAN-source/contracts/QuillAudits-GameZilla Token Smart Contract/code/GameZilla.sol,GameZilla.sol,pragma solidity ^0.8.6;
SWC-120-Weak Sources of Randomness from Chain Attributes,random,L693-707,DAppSCAN-source/contracts/QuillAudits-GARFIELD Smart Contract/code/GARFIELD.sol,GARFIELD.sol,"function random(uint256 from, uint256 to, uint256 salty) private view returns (uint256) {"
SWC-107-Reentrancy,exchange,L49 - L85,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/CurveV1.sol,CurveV1.sol,function exchange(
SWC-135-Code With No Effects,get_dx_underlying,L97 - L103,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/CurveV1.sol,CurveV1.sol,function get_dx_underlying(
SWC-135-Code With No Effects,get_dx,L114 - L120,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/CurveV1.sol,CurveV1.sol,function get_dx(
SWC-107-Reentrancy,swapTokensForExactTokens,L56,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV2.sol,UniswapV2.sol,);
SWC-107-Reentrancy,swapExactTokensForTokens,L110,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV2.sol,UniswapV2.sol,address creditAccount = creditManager.getCreditAccountOrRevert(
SWC-107-Reentrancy,exactInputSingle,L52,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol,UniswapV3.sol,creditManager.provideCreditAccountAllowance(
SWC-107-Reentrancy,exactInput,L106,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol,UniswapV3.sol,
SWC-124-Write to Arbitrary Storage Location,exactInput,L105,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol,UniswapV3.sol,"(address tokenIn, address tokenOut) = _extractTokens(params.path);"
SWC-107-Reentrancy,exactOutputSingle,L153,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol,UniswapV3.sol,
SWC-107-Reentrancy,exactOutputSingle,L154,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol,UniswapV3.sol,// SWC-107-Reentrancy: L154
SWC-124-Write to Arbitrary Storage Location,exactOutput,L206,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol,UniswapV3.sol,"(address tokenOut, address tokenIn) = _extractTokens(params.path);"
SWC-107-Reentrancy,exactOutput,L210,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol,UniswapV3.sol,
SWC-107-Reentrancy,_deposit,L78,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol,YearnV2.sol,creditManager.provideCreditAccountAllowance(
SWC-135-Code With No Effects,withdraw,L132,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol,YearnV2.sol,// SWC-107-Reentrancy: L132
SWC-107-Reentrancy,withdraw,L132,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol,YearnV2.sol,// SWC-107-Reentrancy: L132
SWC-108-State Variable Default Visibility,N/A,L17,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/ContractsRegister.sol,ContractsRegister.sol,mapping(address => bool) _poolSet;
SWC-108-State Variable Default Visibility,N/A,L21,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/ContractsRegister.sol,ContractsRegister.sol,address[] public creditManagers;
SWC-135-Code With No Effects,getCreditAccountList,L73,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/DataCompressor.sol,DataCompressor.sol,uint256 count = 0;
SWC-107-Reentrancy,addLiquidityETH,L98 - L112,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol,WETHGateway.sol,function addLiquidityETH(
SWC-107-Reentrancy,removeLiquidityETH,L120 - L140,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol,WETHGateway.sol,// SWC-107-Reentrancy: L120 - L140
SWC-107-Reentrancy,openCreditAccountETH,L151 - L171,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol,WETHGateway.sol,function openCreditAccountETH(
SWC-107-Reentrancy,repayCreditAccountETH,L179 - L199,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol,WETHGateway.sol,"function repayCreditAccountETH(address creditManager, address to)"
SWC-135-Code With No Effects,allowToken,L157,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol,CreditFilter.sol,require(IERC20(token).balanceOf(address(this)) >= 0); // T:[CF-11]
SWC-135-Code With No Effects,N/A,L196,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol,CreditFilter.sol,"contractToAdapter[targetContract] = adapter; // T:[CF-9, 10]"
SWC-135-Code With No Effects,checkMultiTokenCollateral,L299 - L300,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol,CreditFilter.sol,uint256 amountInCollateral = 0;
SWC-135-Code With No Effects,_checkCollateral,L346,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol,CreditFilter.sol,console.log(calcCreditAccountHealthFactor(creditAccount));
SWC-101-Integer Overflow and Underflow,_transferAssetsTo,L594 - L595,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditManager.sol,CreditManager.sol,totalValue += tv;
SWC-124-Write to Arbitrary Storage Location,_convertAllAssetsToUnderlying,L829,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditManager.sol,CreditManager.sol,// SWC-124-Write to Arbitrary Storage Location: L829
SWC-135-Code With No Effects,N/A,L18 - L69,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/integrations/yearn/YearnPriceFeed.sol,YearnPriceFeed.sol,contract YearnPriceFeed is Proxy {
SWC-135-Code With No Effects,N/A,L1 - L115,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/libraries/data/Types.sol,Types.sol,// SPDX-License-Identifier: BSL-1.1
SWC-101-Integer Overflow and Underflow,addLiquidity,L145,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/pool/PoolService.sol,PoolService.sol,require(
SWC-107-Reentrancy,lendCreditAccount,L238 - L258,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/pool/PoolService.sol,PoolService.sol,// SWC-107-Reentrancy: L238 - L258
SWC-135-Code With No Effects,mint,L15,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/tokens/GearNFT.sol,GearNFT.sol,"_setBaseURI(""https://nft.gearbox.fi/"");"
SWC-135-Code With No Effects,managerOnly,L108,DAppSCAN-source/contracts/QuillAudits-GearBox Protocol-GearBox Protocol/gearbox-contracts-0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/tokens/GearToken.sol,GearToken.sol,transfersAllowed = false;
SWC-102-Outdated Compiler Version,N/A,L6,DAppSCAN-source/contracts/QuillAudits-Glonk Smart Contract/code/GLONK.sol,GLONK.sol,pragma solidity ^0.6.12;
SWC-103-Floating Pragma,N/A,L6,DAppSCAN-source/contracts/QuillAudits-Glonk Smart Contract/code/GLONK.sol,GLONK.sol,pragma solidity ^0.6.12;
SWC-114-Transaction Order Dependence,approve,L510-513,DAppSCAN-source/contracts/QuillAudits-Glonk Smart Contract/code/GLONK.sol,GLONK.sol,"function approve(address spender, uint256 amount) public override returns (bool) {"
SWC-120-Weak Sources of Randomness from Chain Attributes,addLiquidity,L805-818,DAppSCAN-source/contracts/QuillAudits-Glonk Smart Contract/code/GLONK.sol,GLONK.sol,"function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {"
SWC-108-State Variable Default Visibility,N/A,L12 - L22,DAppSCAN-source/contracts/QuillAudits-GoGocoin Smart Contract/gogo-contracts-f952d59650263cd8e0d403d5a8f3d94890869ba1/contracts/TokenSale.sol,TokenSale.sol,uint256 price;
SWC-103-Floating Pragma,N/A,L1,DAppSCAN-source/contracts/QuillAudits-HE - v1.2/heroes-empires-contract-f24ba85db4bf40e39caaa5fc322a02cd8e82c2c7/src/contracts/Stake.sol,Stake.sol,pragma solidity ^0.8.0;
SWC-135-Code With No Effects,max,"L3-L13, L101-122",DAppSCAN-source/contracts/QuillAudits-HE - v1.2/heroes-empires-contract-f24ba85db4bf40e39caaa5fc322a02cd8e82c2c7/src/contracts/Stake.sol,Stake.sol,"library Math { // SWC-135-Code With No Effects: L3-L13, L101-122"
SWC-111-Use of Deprecated Solidity Functions,N/A,L263,DAppSCAN-source/contracts/QuillAudits-HE - v1.2/heroes-empires-contract-f24ba85db4bf40e39caaa5fc322a02cd8e82c2c7/src/contracts/Stake.sol,Stake.sol,) public {
SWC-100-Function Default Visibility,changeTimeLockWithdraw,L276 ,DAppSCAN-source/contracts/QuillAudits-HE - v1.2/heroes-empires-contract-f24ba85db4bf40e39caaa5fc322a02cd8e82c2c7/src/contracts/Stake.sol,Stake.sol,function changeTimeLockWithdraw(uint256 _timeLock) public {
SWC-123-Requirement Violation,withdraw,L438,DAppSCAN-source/contracts/QuillAudits-HE - v1.2/heroes-empires-contract-f24ba85db4bf40e39caaa5fc322a02cd8e82c2c7/src/contracts/Stake.sol,Stake.sol,"require(amount >= 0 , 'withdraw: not good');"
SWC-135-Code With No Effects,max,L10 - L12,DAppSCAN-source/contracts/QuillAudits-Keep3r.Network-Keep3r.Network/StakingRewardsV3-13ecc6966ae1a413f62224382bfd4d64b1a22351/contracts/StakingRewardsV3-1.sol,StakingRewardsV3-1.sol,"function max(uint256 a, uint256 b) internal pure returns (uint256) {"
SWC-108-State Variable Default Visibility,N/A,L104 - L118,DAppSCAN-source/contracts/QuillAudits-Keep3r.Network-Keep3r.Network/StakingRewardsV3-13ecc6966ae1a413f62224382bfd4d64b1a22351/contracts/StakingRewardsV3-1.sol,StakingRewardsV3-1.sol,address constant factory = 0x1F98431c8aD98523631AE4a59f267346ea31F984;
SWC-107-Reentrancy,deposit,L210 - L226,DAppSCAN-source/contracts/QuillAudits-Keep3r.Network-Keep3r.Network/StakingRewardsV3-13ecc6966ae1a413f62224382bfd4d64b1a22351/contracts/StakingRewardsV3-1.sol,StakingRewardsV3-1.sol,function deposit(uint tokenId) external update(tokenId) {
SWC-135-Code With No Effects,deposit_reward_token,L298 - L301,DAppSCAN-source/contracts/QuillAudits-Keep3r.Network-Keep3r.Network/StakingRewardsV3-13ecc6966ae1a413f62224382bfd4d64b1a22351/contracts/StakingRewardsV3-1.sol,StakingRewardsV3-1.sol,"function deposit_reward_token(address token, uint _reward) external {"
SWC-102-Outdated Compiler Version,N/A,L1 -L93,DAppSCAN-source/contracts/QuillAudits-Lido-Aave stETH/aave-protocol-v2-12c9111990c9699e84a36f30ba849486ef8f2a84/contracts/dependencies/openzeppelin/contracts/SignedSafeMath.sol,SignedSafeMath.sol,// SPDX-License-Identifier: MIT
SWC-101-Integer Overflow and Underflow,_scaledTotalSupply,L595,DAppSCAN-source/contracts/QuillAudits-Lido-Aave stETH/aave-protocol-v2-12c9111990c9699e84a36f30ba849486ef8f2a84/contracts/protocol/tokenization/lido/AStETH.sol,AStETH.sol,ISTETH(UNDERLYING_ASSET_ADDRESS).getPooledEthByShares(
SWC-135-Code With No Effects,fetchStETHTotalSupply,L175 - L177,DAppSCAN-source/contracts/QuillAudits-Lido-Aave stETH/aave-protocol-v2-12c9111990c9699e84a36f30ba849486ef8f2a84/contracts/protocol/tokenization/lido/VariableDebtStETH.sol,VariableDebtStETH.sol,function fetchStETHTotalSupply() internal view returns (uint256) {
SWC-135-Code With No Effects,forward,L191-193,DAppSCAN-source/contracts/QuillAudits-Lido-Aragon Voting/aragon-apps-8c46da8704d0011c42ece2896dbf4aeee069b84a/Voting.sol,Voting.sol,function isForwarder() external pure returns (bool) {
SWC-126-Insufficient Gas Griefing,transferToVault,L301,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.4.24/Lido.sol,Lido.sol,// SWC-126-Insufficient Gas Griefing: L301
SWC-128-DoS With Block Gas Limit,_distributeNodeOperatorsReward,L618 - L626,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.4.24/Lido.sol,Lido.sol,for (uint256 idx = 0; idx < recipients.length; ++idx) {
SWC-128-DoS With Block Gas Limit,trimUnusedKeys,L215 - L222,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.4.24/nos/NodeOperatorsRegistry.sol,NodeOperatorsRegistry.sol,for (uint256 operatorId = 0; operatorId < length; ++operatorId) {
SWC-101-Integer Overflow and Underflow,removeSigningKeys,L289,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.4.24/nos/NodeOperatorsRegistry.sol,NodeOperatorsRegistry.sol,for (uint256 i = _index + _amount; i > _index ; --i) {
SWC-101-Integer Overflow and Underflow,removeSigningKeysOperatorBH,L314,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.4.24/nos/NodeOperatorsRegistry.sol,NodeOperatorsRegistry.sol,for (uint256 i = _index + _amount; i > _index ; --i) {
SWC-135-Code With No Effects,_isEmptySigningKey,L542 - L555,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.4.24/nos/NodeOperatorsRegistry.sol,NodeOperatorsRegistry.sol,function _isEmptySigningKey(bytes memory _key) internal pure returns (bool) {
SWC-135-Code With No Effects,_storeSigningKey,L567 - L590,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.4.24/nos/NodeOperatorsRegistry.sol,NodeOperatorsRegistry.sol,"function _storeSigningKey(uint256 _operator_id, uint256 _keyIndex, bytes memory _key, bytes memory _signature) internal {"
SWC-135-Code With No Effects,_storeSigningKey,L573,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.4.24/nos/NodeOperatorsRegistry.sol,NodeOperatorsRegistry.sol,assert(0 == SIGNATURE_LENGTH % 32);
SWC-135-Code With No Effects,_deleteSigningKey,L644,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.4.24/nos/NodeOperatorsRegistry.sol,NodeOperatorsRegistry.sol,for (uint256 i = 0; i < (PUBKEY_LENGTH + SIGNATURE_LENGTH) / 32 + 1; ++i) {
SWC-135-Code With No Effects,_loadSigningKey,L650 - L676,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.4.24/nos/NodeOperatorsRegistry.sol,NodeOperatorsRegistry.sol,
SWC-135-Code With No Effects,_loadSigningKey,L655,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.4.24/nos/NodeOperatorsRegistry.sol,NodeOperatorsRegistry.sol,assert(PUBKEY_LENGTH >= 32 && PUBKEY_LENGTH <= 64);
SWC-108-State Variable Default Visibility,N/A,L62,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.8.9/DepositSecurityModule.sol,DepositSecurityModule.sol,mapping(address => uint256) guardianIndicesOneBased; // 1-based
SWC-135-Code With No Effects,N/A,L100 - L101,DAppSCAN-source/contracts/QuillAudits-Lido-Deposit Security Module/lido-dao-5b449b740cddfbef5c107505677e6a576e2c2b69/contracts/0.8.9/DepositSecurityModule.sol,DepositSecurityModule.sol,paused = false;
SWC-101-Integer Overflow and Underflow,_processRelayTransfers,L298,DAppSCAN-source/contracts/QuillAudits-Lido-Lido KSM/lido-dot-ksm-76a10efa5f223c4c613f26794802b8fb9bb188e1/contracts/Ledger.sol,Ledger.sol,uint128 freeBalanceIncrement = _report.getFreeBalance() - ledgerFreeBalance;
SWC-131-Presence of unused variables,initialize,L202,DAppSCAN-source/contracts/QuillAudits-Lido-Lido KSM/lido-dot-ksm-76a10efa5f223c4c613f26794802b8fb9bb188e1/contracts/Lido.sol,Lido.sol,GARANTOR = 0x00;
SWC-101-Integer Overflow and Underflow,distributeLosses,L609,DAppSCAN-source/contracts/QuillAudits-Lido-Lido KSM/lido-dot-ksm-76a10efa5f223c4c613f26794802b8fb9bb188e1/contracts/Lido.sol,Lido.sol,// SWC-101-Integer Overflow and Underflow: L609
SWC-101-Integer Overflow and Underflow,_distribute,L732,DAppSCAN-source/contracts/QuillAudits-Lido-Lido KSM/lido-dot-ksm-76a10efa5f223c4c613f26794802b8fb9bb188e1/contracts/Lido.sol,Lido.sol,// SWC-101-Integer Overflow and Underflow: L732
SWC-135-Code With No Effects,mevTxFeeReceiver,L140 - L143,DAppSCAN-source/contracts/QuillAudits-Lido-Lido Protocol/lido-dao-801d3e854efb33ff33a59fe51187e187047a6be2/contracts/0.4.24/Lido.sol,Lido.sol,function mevTxFeeReceiver() external payable {
SWC-135-Code With No Effects,receiveMevTxFee,L160 - L167,DAppSCAN-source/contracts/QuillAudits-Lido-Lido Protocol/lido-dao-801d3e854efb33ff33a59fe51187e187047a6be2/contracts/0.4.24/Lido.sol,Lido.sol,function receiveMevTxFee() external payable {
SWC-105-Unprotected Ether Withdrawal,N/A,L80 - L82,DAppSCAN-source/contracts/QuillAudits-Lido-Lido Protocol/lido-dao-801d3e854efb33ff33a59fe51187e187047a6be2/contracts/0.8.9/LidoMevTxFeeVault.sol,LidoMevTxFeeVault.sol,receive() external payable {
SWC-135-Code With No Effects,constructor,L59,DAppSCAN-source/contracts/QuillAudits-Lido-stETH Price Feed/steth-price-feed-459495f07c97d04f6e3839e7a3b32acfcade22ad/contracts/PriceFeedProxy.sol,PriceFeedProxy.sol,ERC1967Proxy(
SWC-135-Code With No Effects,N/A,L71,DAppSCAN-source/contracts/QuillAudits-Lido-stETH Price Feed/steth-price-feed-459495f07c97d04f6e3839e7a3b32acfcade22ad/contracts/PriceFeedProxy.sol,PriceFeedProxy.sol,"assert(_ADMIN_SLOT == bytes32(uint256(keccak256(""eip1967.proxy.admin"")) - 1));"
SWC-131-Presence of unused variables,extractProofValue,L38,DAppSCAN-source/contracts/QuillAudits-Lido-stETH Price Oracle/curve-merkle-oracle-ae093b308999a564ed3f23d52c6c5dce946dbfa7/contracts/MerklePatriciaProofVerifier.sol,MerklePatriciaProofVerifier.sol,bytes memory rlpNode;
SWC-135-Code With No Effects,constructor,L71,DAppSCAN-source/contracts/QuillAudits-Lido-Withdrawals Manager Stub/withdrawals-manager-stub-c41292ed9c3be765d06c4249b9f2ad4d427b84bf/contracts/WithdrawalsManagerProxy.sol,WithdrawalsManagerProxy.sol,"assert(ADMIN_SLOT == bytes32(uint256(keccak256(""eip1967.proxy.admin"")) - 1));"
SWC-104-Unchecked Call Return Value,wrap,L58,DAppSCAN-source/contracts/QuillAudits-Lido-WstETH/lido-dao-ea6fa222004b88e6a24b566a51e5b56b0079272d/contracts/0.6.12/WstETH.sol,WstETH.sol,"stETH.transferFrom(msg.sender, address(this), _stETHAmount);"
SWC-104-Unchecked Call Return Value,unwrap,L75,DAppSCAN-source/contracts/QuillAudits-Lido-WstETH/lido-dao-ea6fa222004b88e6a24b566a51e5b56b0079272d/contracts/0.6.12/WstETH.sol,WstETH.sol,"stETH.transfer(msg.sender, stETHAmount);"
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/QuillAudits-Locklet Smart Contract/locklet-evm-contracts-7fd89cbcf96a10429b9cfeee295dd4c51c2af982/contracts/LockletPrivateSale.sol,LockletPrivateSale.sol,pragma solidity ^0.8.0;
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/QuillAudits-Locklet Smart Contract/locklet-evm-contracts-7fd89cbcf96a10429b9cfeee295dd4c51c2af982/contracts/LockletToken.sol,LockletToken.sol,pragma solidity ^0.8.0;
SWC-103-Floating Pragma,N/A,L4,DAppSCAN-source/contracts/QuillAudits-Locklet Smart Contract/locklet-evm-contracts-7fd89cbcf96a10429b9cfeee295dd4c51c2af982/contracts/LockletTokenVault.sol,LockletTokenVault.sol,pragma solidity ^0.8.0;
SWC-128-DoS With Block Gas Limit,N/A,L166 - L184,DAppSCAN-source/contracts/QuillAudits-Locklet Smart Contract/locklet-evm-contracts-7fd89cbcf96a10429b9cfeee295dd4c51c2af982/contracts/LockletTokenVault.sol,LockletTokenVault.sol,for (uint256 i = 0; i < recipientsData.length; i++) {
SWC-128-DoS With Block Gas Limit,revokeLock,L247 - L262,DAppSCAN-source/contracts/QuillAudits-Locklet Smart Contract/locklet-evm-contracts-7fd89cbcf96a10429b9cfeee295dd4c51c2af982/contracts/LockletTokenVault.sol,LockletTokenVault.sol,for (uint256 i = 0; i < recipients.length; i++) {
SWC-128-DoS With Block Gas Limit,getLocks,L313 - L320,DAppSCAN-source/contracts/QuillAudits-Locklet Smart Contract/locklet-evm-contracts-7fd89cbcf96a10429b9cfeee295dd4c51c2af982/contracts/LockletTokenVault.sol,LockletTokenVault.sol,for (currentLockIndex; currentLockIndex >= queryEndLockIndex; currentLockIndex--) {
SWC-128-DoS With Block Gas Limit,getLocksByInitiator,L332 - L335,DAppSCAN-source/contracts/QuillAudits-Locklet Smart Contract/locklet-evm-contracts-7fd89cbcf96a10429b9cfeee295dd4c51c2af982/contracts/LockletTokenVault.sol,LockletTokenVault.sol,for (uint index = 0; index < initiatorLocksLength; index++) {
SWC-128-DoS With Block Gas Limit,getLocksByRecipient,L347 - L350,DAppSCAN-source/contracts/QuillAudits-Locklet Smart Contract/locklet-evm-contracts-7fd89cbcf96a10429b9cfeee295dd4c51c2af982/contracts/LockletTokenVault.sol,LockletTokenVault.sol,for (uint index = 0; index < recipientLocksLength; index++) {
SWC-128-DoS With Block Gas Limit,getRecipientIndexByAddress,L393 - L398,DAppSCAN-source/contracts/QuillAudits-Locklet Smart Contract/locklet-evm-contracts-7fd89cbcf96a10429b9cfeee295dd4c51c2af982/contracts/LockletTokenVault.sol,LockletTokenVault.sol,"function getRecipientIndexByAddress(Recipient[] storage recipients, address recipientAddress) private view returns (int256) {"
SWC-116-Block values as a proxy for time,calculateClaim,L410,DAppSCAN-source/contracts/QuillAudits-Locklet Smart Contract/locklet-evm-contracts-7fd89cbcf96a10429b9cfeee295dd4c51c2af982/contracts/LockletTokenVault.sol,LockletTokenVault.sol,"return (0, 0);"
SWC-116-Block values as a proxy for time,blockTime,430,DAppSCAN-source/contracts/QuillAudits-Locklet Smart Contract/locklet-evm-contracts-7fd89cbcf96a10429b9cfeee295dd4c51c2af982/contracts/LockletTokenVault.sol,LockletTokenVault.sol,N/A
SWC-101-Integer Overflow and Underflow,recalculateTotalSupply,L61,DAppSCAN-source/contracts/QuillAudits-LTO Network-Token Sale/lto-erc20-token-02fa2620aef4c854675230b6544461961d47f968/contracts/LTOToken.sol,LTOToken.sol,totalSupply_ = internalTotalSupply - balances[bridgeAddress];
SWC-135-Code With No Effects,_calcProportion,L144 - L150,DAppSCAN-source/contracts/QuillAudits-LTO Network-Token Sale/lto-erc20-token-02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol,LTOTokenSale.sol,function _calcProportion() internal {
SWC-126-Insufficient Gas Griefing,_withdrawal,L216,DAppSCAN-source/contracts/QuillAudits-LTO Network-Token Sale/lto-erc20-token-02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol,LTOTokenSale.sol,// SWC-126-Insufficient Gas Griefing: L216
SWC-135-Code With No Effects,withdrawal,L224 - L226,DAppSCAN-source/contracts/QuillAudits-LTO Network-Token Sale/lto-erc20-token-02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol,LTOTokenSale.sol,// SWC-135-Code With No Effects: L224 - L226
SWC-135-Code With No Effects,withdrawalFor,L229 - L234,DAppSCAN-source/contracts/QuillAudits-LTO Network-Token Sale/lto-erc20-token-02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol,LTOTokenSale.sol,// SWC-135-Code With No Effects: L229 - L234
SWC-135-Code With No Effects,clear,L238 - L245,DAppSCAN-source/contracts/QuillAudits-LTO Network-Token Sale/lto-erc20-token-02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol,LTOTokenSale.sol,"function clear(uint256 tokenAmount, uint256 etherAmount) payable public purchasersAllWithdrawn onlyClearTime onlyOwner {"
SWC-104-Unchecked Call Return Value,clear,L238 - L245,DAppSCAN-source/contracts/QuillAudits-LTO Network-Token Sale/lto-erc20-token-02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol,LTOTokenSale.sol,"function clear(uint256 tokenAmount, uint256 etherAmount) payable public purchasersAllWithdrawn onlyClearTime onlyOwner {"
SWC-114-Transaction Order Dependence,transferFrom,L464-467,DAppSCAN-source/contracts/QuillAudits-Magic Cube Smart Contract/code/TokenInfo.sol,TokenInfo.sol,"function approve(address spender, uint256 amount) public virtual override returns (bool) {"
SWC-103-Floating Pragma,transferOwnership,L884,DAppSCAN-source/contracts/QuillAudits-Magic Cube Smart Contract/code/TokenInfo.sol,TokenInfo.sol,pragma solidity >=0.6.0 <0.8.0;
SWC-135-Code With No Effects,rebind,L559 - L565,DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol,BPool.sol,uint oldWeight = _records[token].denorm;
SWC-128-DoS With Block Gas Limit,constructor,L30 - L32,DAppSCAN-source/contracts/QuillAudits-MetaGameStarter Smart Contract/Tokenomics-Contracts-f3899d0a31dbb7386eacb7efefbff2ac32ce7cbb/contracts/Staking/LockedStakingRewards.sol,LockedStakingRewards.sol,for (uint256 i = 0; i < _initialPools.length; i++) {
SWC-103-Floating Pragma,N/A,L6,DAppSCAN-source/contracts/QuillAudits-MetaWaferse Smart Contract/code/MetaWaferse.sol,MetaWaferse.sol,pragma solidity ^0.8.6;
SWC-135-Code With No Effects,_burn,L145,DAppSCAN-source/contracts/QuillAudits-MetaWaferse Smart Contract/code/MetaWaferse.sol,MetaWaferse.sol,"function _mint(address account, uint256 amount) internal  virtual {"
SWC-103-Floating Pragma,upgradeGovernance,L867,DAppSCAN-source/contracts/QuillAudits-MGPToken Smart Contract/code/TokenDetail.sol,TokenDetail.sol,pragma solidity >=0.6.0 <0.8.0;
SWC-107-Reentrancy,transfer,"L572-575,586-590",DAppSCAN-source/contracts/QuillAudits-MiniDOGE Smart Contract/code/MiniDOGE.sol,MiniDOGE.sol,"function transfer(address recipient, uint256 amount) public override returns (bool) {"
SWC-128-DoS With Block Gas Limit,_removeOldSellHistories,L1029-1045,DAppSCAN-source/contracts/QuillAudits-MiniDOGE Smart Contract/code/MiniDOGE.sol,MiniDOGE.sol,for (uint256 j = 0; j < _sellHistories.length; j ++) {
SWC-107-Reentrancy,transfer,L995.1009,DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol,moonship.sol,"function transfer(address recipient, uint256 amount) public override returns (bool) {"
SWC-135-Code With No Effects,_tokenTransfer,L1245,DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol,moonship.sol,} else if (!_isExcluded[sender] && !_isExcluded[recipient]) {
SWC-103-Floating Pragma,N/A,L3,DAppSCAN-source/contracts/QuillAudits-MrWeb Finance Smart Contract/code/Token.sol,Token.sol,pragma solidity ^0.5.0;
SWC-102-Outdated Compiler Version,N/A,L3,DAppSCAN-source/contracts/QuillAudits-MrWeb Finance Smart Contract/code/Token.sol,Token.sol,pragma solidity ^0.5.0;
SWC-102-Outdated Compiler Version,N/A,"L3,all contract",DAppSCAN-source/contracts/QuillAudits-Nexity Network Smart Contract/code/TaxableTeamToken.sol,TaxableTeamToken.sol,pragma solidity 0.6.12;
SWC-102-Outdated Compiler Version,N/A,L20,DAppSCAN-source/contracts/QuillAudits-NomadLand Smart Contract/code/MainToken.sol,MainToken.sol,pragma solidity ^0.4.23;
SWC-101-Integer Overflow and Underflow,actualBalanceOf,L408,DAppSCAN-source/contracts/QuillAudits-NomadLand Smart Contract/code/MainToken.sol,MainToken.sol,return super.balanceOf(_owner) + freezingBalance[_owner];
SWC-116-Block values as a proxy for time,releaseOnce,L481,DAppSCAN-source/contracts/QuillAudits-NomadLand Smart Contract/code/MainToken.sol,MainToken.sol,require(uint64(block.timestamp) > head);
SWC-116-Block values as a proxy for time,releaseAll,L509,DAppSCAN-source/contracts/QuillAudits-NomadLand Smart Contract/code/MainToken.sol,MainToken.sol,while (release != 0 && block.timestamp > release) {
SWC-101-Integer Overflow and Underflow,toKey,L511,DAppSCAN-source/contracts/QuillAudits-NomadLand Smart Contract/code/MainToken.sol,MainToken.sol,tokens += balance;
SWC-116-Block values as a proxy for time,freeze,L526,DAppSCAN-source/contracts/QuillAudits-NomadLand Smart Contract/code/MainToken.sol,MainToken.sol,require(_until > block.timestamp);
SWC-131-Presence of unused variables,execute,L87,DAppSCAN-source/contracts/QuillAudits-Pickle Finance-All Strategies/protocol-9b0f330a16bc35c964211feae3b335ab398c01b6/crv-locker.sol,crv-locker.sol,"return (success, result);"
SWC-128-DoS With Block Gas Limit,leverageUntil,L287,DAppSCAN-source/contracts/QuillAudits-Pickle Finance-All Strategies/protocol-9b0f330a16bc35c964211feae3b335ab398c01b6/strategy-cmpd-dai-v1.sol,strategy-cmpd-dai-v1.sol,while (supplied < _supplyAmount) {
SWC-114-Transaction Order Dependence,harvest,L153-197,DAppSCAN-source/contracts/QuillAudits-Pickle Finance-Strategy-Curve-scrv-v4_1/protocol-master/strategy-curve-scrv-v4_1.sol,strategy-curve-scrv-v4_1.sol,function harvest() public override onlyBenevolent {
SWC-128-DoS With Block Gas Limit,removeToken,L46 - L53,DAppSCAN-source/contracts/QuillAudits-PieDAO-ExperiPie/PieVaults-facf3c246d9c43f5b1e0bad7dc2b0a9a2a2393c5/contracts/facets/Basket/BasketFacet.sol,BasketFacet.sol,for(uint256 i; i < bs.tokens.length; i ++) {
SWC-128-DoS With Block Gas Limit,joinPool,L128 - L132,DAppSCAN-source/contracts/QuillAudits-PieDAO-ExperiPie/PieVaults-facf3c246d9c43f5b1e0bad7dc2b0a9a2a2393c5/contracts/facets/Basket/BasketFacet.sol,BasketFacet.sol,for(uint256 i; i < bs.tokens.length; i ++) {
SWC-128-DoS With Block Gas Limit,exitPool,L161 - L168,DAppSCAN-source/contracts/QuillAudits-PieDAO-ExperiPie/PieVaults-facf3c246d9c43f5b1e0bad7dc2b0a9a2a2393c5/contracts/facets/Basket/BasketFacet.sol,BasketFacet.sol,for(uint256 i; i < bs.tokens.length; i ++) {
SWC-116-Block values as a proxy for time,calcOutStandingAnnualizedFee,L204,DAppSCAN-source/contracts/QuillAudits-PieDAO-ExperiPie/PieVaults-facf3c246d9c43f5b1e0bad7dc2b0a9a2a2393c5/contracts/facets/Basket/BasketFacet.sol,BasketFacet.sol,uint256 timePassed = block.timestamp.sub(lastFeeClaimed);
SWC-116-Block values as a proxy for time,chargeOutstandingAnnualizedFee,L214,DAppSCAN-source/contracts/QuillAudits-PieDAO-ExperiPie/PieVaults-facf3c246d9c43f5b1e0bad7dc2b0a9a2a2393c5/contracts/facets/Basket/BasketFacet.sol,BasketFacet.sol,bs.lastAnnualizedFeeClaimed = block.timestamp;
SWC-128-DoS With Block Gas Limit,calcTokensForAmount,L278 - L287,DAppSCAN-source/contracts/QuillAudits-PieDAO-ExperiPie/PieVaults-facf3c246d9c43f5b1e0bad7dc2b0a9a2a2393c5/contracts/facets/Basket/BasketFacet.sol,BasketFacet.sol,
SWC-128-DoS With Block Gas Limit,calcTokensForAmountExit,L301 - L308,DAppSCAN-source/contracts/QuillAudits-PieDAO-ExperiPie/PieVaults-facf3c246d9c43f5b1e0bad7dc2b0a9a2a2393c5/contracts/facets/Basket/BasketFacet.sol,BasketFacet.sol,
SWC-128-DoS With Block Gas Limit,N/A,L44 - L53,DAppSCAN-source/contracts/QuillAudits-PieDAO-ExperiPie/PieVaults-facf3c246d9c43f5b1e0bad7dc2b0a9a2a2393c5/contracts/facets/Call/CallFacet.sol,CallFacet.sol,for(uint256 i = 0; i < callStorage.callers.length; i ++) {
SWC-128-DoS With Block Gas Limit,call,L69 -L71,DAppSCAN-source/contracts/QuillAudits-PieDAO-ExperiPie/PieVaults-facf3c246d9c43f5b1e0bad7dc2b0a9a2a2393c5/contracts/facets/Call/CallFacet.sol,CallFacet.sol,for (uint256 i = 0; i < _targets.length; i++) {
SWC-128-DoS With Block Gas Limit,callNoValue,L84 - L86,DAppSCAN-source/contracts/QuillAudits-PieDAO-ExperiPie/PieVaults-facf3c246d9c43f5b1e0bad7dc2b0a9a2a2393c5/contracts/facets/Call/CallFacet.sol,CallFacet.sol,for (uint256 i = 0; i < _targets.length; i++) {
SWC-114-Transaction Order Dependence,approve,L53 - L61,DAppSCAN-source/contracts/QuillAudits-PieDAO-ExperiPie/PieVaults-facf3c246d9c43f5b1e0bad7dc2b0a9a2a2393c5/contracts/facets/ERC20/ERC20Facet.sol,ERC20Facet.sol,"function approve(address _spender, uint256 _amount)"
SWC-128-DoS With Block Gas Limit,bakePie,L73 - L77,DAppSCAN-source/contracts/QuillAudits-PieDAO-ExperiPie/PieVaults-facf3c246d9c43f5b1e0bad7dc2b0a9a2a2393c5/contracts/factories/PieFactoryContract.sol,PieFactoryContract.sol,for (uint256 i = 0; i < _tokens.length; i++) {
SWC-123-Requirement Violation,_updateBid,L685,DAppSCAN-source/contracts/QuillAudits-Reality Cards-Reality Cards/RealityCards-Contracts-8c0b05b25a7deef25f98532ae2f8afd4f9a84360/contracts/RCMarket.sol,RCMarket.sol,"require(false, ""Not 10% higher"");"
SWC-101-Integer Overflow and Underflow,balancedBooks {,L85,DAppSCAN-source/contracts/QuillAudits-Reality Cards-Reality Cards/RealityCards-Contracts-8c0b05b25a7deef25f98532ae2f8afd4f9a84360/contracts/RCTreasury.sol,RCTreasury.sol,assert(address(this).balance >= totalDeposits + totalMarketPots);
SWC-108-State Variable Default Visibility,N/A,"L891-894, 912-914",DAppSCAN-source/contracts/QuillAudits-RICE - v1.2/RICEToken/RICEToken.sol,RICEToken.sol,address FoundingTeam = 0x12B8665E7b4684178a54122e121B83CC41d9d9C3;
SWC-123-Requirement Violation,transfer,"L962, 969, 970, 975",DAppSCAN-source/contracts/QuillAudits-RICE - v1.2/RICEToken/RICEToken.sol,RICEToken.sol,require(_amount <= getAvailableBalance(msg.sender));
SWC-125-Incorrect Inheritance Order,transferFrom,"L963,971",DAppSCAN-source/contracts/QuillAudits-RICE - v1.2/RICEToken/RICEToken.sol,RICEToken.sol,"return ERC20.transfer(_receiver, _amount);"
SWC-132-Unexpected Ether balance,transferWithLock,L975-985,DAppSCAN-source/contracts/QuillAudits-RICE - v1.2/RICEToken/RICEToken.sol,RICEToken.sol,"function transferWithLock(address _receiver, uint256 _amount, uint256 _releaseDate) public returns (bool success) {"
SWC-128-DoS With Block Gas Limit,transferWithLock,L975-985,DAppSCAN-source/contracts/QuillAudits-RICE - v1.2/RICEToken/RICEToken.sol,RICEToken.sol,"function transferWithLock(address _receiver, uint256 _amount, uint256 _releaseDate) public returns (bool success) {"
SWC-101-Integer Overflow and Underflow,,L1055,DAppSCAN-source/contracts/QuillAudits-RICE - v1.2/RICEToken/RICEToken.sol,RICEToken.sol,for(uint y = 3; y <= 10; y++) {
SWC-135-Code With No Effects,quote,L274,DAppSCAN-source/contracts/QuillAudits-SpiritSwap-SpiritSwap/spiritswap-core-a23463f87fd3c7633e97fab5e8124b4499e1519e/SpiritRouter.sol,SpiritRouter.sol,"pairFor(factory, tokenA, tokenB);"
SWC-104-Unchecked Call Return Value,short,L429,DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol,LendingPair.sol,"swapper.swap(asset, collateral, assetAmount, minCollateralAmount);"
SWC-104-Unchecked Call Return Value,liquidate,L499,DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol,LendingPair.sol,// SWC-104-Unchecked Call Return Value: L499
SWC-104-Unchecked Call Return Value,liquidate,L522,DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol,LendingPair.sol,"swapper.swap(collateral, asset, allCollateralAmount, allBorrowAmount);"
SWC-102-Outdated Compiler Version,N/A,"L5,all contract",DAppSCAN-source/contracts/QuillAudits-VIDB - v1.0/VIDBToken/VIDBToken.sol,VIDBToken.sol,pragma solidity ^0.5.0;
SWC-116-Block values as a proxy for time,getLockedAmount,L722,DAppSCAN-source/contracts/QuillAudits-VIDB - v1.0/VIDBToken/VIDBToken.sol,VIDBToken.sol,if(now < lockList[lockedAddress][j].releaseDate) {
SWC-101-Integer Overflow and Underflow,estimatedTotalAssets,L137,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Strategy.sol,Strategy.sol,nav += want.balanceOf(address(this));
SWC-101-Integer Overflow and Underflow,estimatedAPR,L157,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Strategy.sol,Strategy.sol,weightedAPR += lenders[i].weightedApr();
SWC-101-Integer Overflow and Underflow,_estimateDebtLimitIncrease,L183,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Strategy.sol,Strategy.sol,weightedAPR += lenders[i].weightedApr();
SWC-101-Integer Overflow and Underflow,_estimateDebtLimitDecrease,L210,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Strategy.sol,Strategy.sol,weightedAPR += lenders[i].weightedApr();
SWC-101-Integer Overflow and Underflow,_estimateDebtLimitDecrease,218,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Strategy.sol,Strategy.sol,N/A
SWC-101-Integer Overflow and Underflow,lentTotalAssets,293,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Strategy.sol,Strategy.sol,N/A
SWC-104-Unchecked Call Return Value,adjustPosition,L400,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Strategy.sol,Strategy.sol,lenders[lowest].withdrawAll();
SWC-128-DoS With Block Gas Limit,manualAllocation,L421 - L424,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Strategy.sol,Strategy.sol,for (uint256 i = 0; i < lenders.length; i++) {
SWC-104-Unchecked Call Return Value,manualAllocation,L422,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Strategy.sol,Strategy.sol,// SWC-104-Unchecked Call Return Value: L422
SWC-101-Integer Overflow and Underflow,manualAllocation,437,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Strategy.sol,Strategy.sol,N/A
SWC-101-Integer Overflow and Underflow,_withdrawSome,472,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Strategy.sol,Strategy.sol,N/A
SWC-101-Integer Overflow and Underflow,tendTrigger,556,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Strategy.sol,Strategy.sol,N/A
SWC-104-Unchecked Call Return Value,sweep,L56,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/GenericLender/GenericLenderBase.sol,GenericLenderBase.sol,"IERC20(_token).transfer(vault.governance(), IERC20(_token).balanceOf(address(this)));"
SWC-135-Code With No Effects,enabled,L24,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Generic Lender/yearnV2-generic-lender-strat-979ef2f0e5da39ca59a5907c37ba2064fcd6be82/contracts/Interfaces/GenericLender/IGeneric.sol,IGeneric.sol,function enabled() external view returns (bool);
SWC-135-Code With No Effects,_buyInvestmentTokenWithWant,L857,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Maker Dai Delegate/maker-dai-delegate-97949a51062df956fd0172b7b1c778f66844b634/contracts/Strategy.sol,Strategy.sol,if (_amount == 0 || address(investmentToken) == address(want)) {
SWC-135-Code With No Effects,liquidatePosition,L253,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-SNX/yearnV2-strat-SNX-staking-91b839df4a350d80cb583795bccafe0836fdb732/contracts/Strategy.sol,Strategy.sol,uint256 unlockedWant = _unlockedWant();
SWC-135-Code With No Effects,liquidatePosition,L262,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-SNX/yearnV2-strat-SNX-staking-91b839df4a350d80cb583795bccafe0836fdb732/contracts/Strategy.sol,Strategy.sol,unlockedWant = _unlockedWant();
SWC-104-Unchecked Call Return Value,balanceOfy3CRVinWant,L69,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Stablecoins 3pool/stablecoins-3pool-adeb776933c6cb3b8306239cc3357d4c6239a88d/contracts/StrategyDAI.sol,StrategyDAI.sol,function balanceOfy3CRVinWant() public view returns (uint256) {
SWC-131-Presence of unused variables,adjustPosition,L100,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Stablecoins 3pool/stablecoins-3pool-adeb776933c6cb3b8306239cc3357d4c6239a88d/contracts/StrategyDAI.sol,StrategyDAI.sol,// SWC-131-Presence of unused variables: L100
SWC-104-Unchecked Call Return Value,balanceOfy3CRVinWant,L69,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Stablecoins 3pool/stablecoins-3pool-adeb776933c6cb3b8306239cc3357d4c6239a88d/contracts/StrategyUSDC.sol,StrategyUSDC.sol,function balanceOfy3CRVinWant() public view returns (uint256) {
SWC-131-Presence of unused variables,adjustPosition,L100,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Stablecoins 3pool/stablecoins-3pool-adeb776933c6cb3b8306239cc3357d4c6239a88d/contracts/StrategyUSDC.sol,StrategyUSDC.sol,// SWC-131-Presence of unused variables: L100
SWC-104-Unchecked Call Return Value,balanceOfy3CRVinWant,L69,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Stablecoins 3pool/stablecoins-3pool-adeb776933c6cb3b8306239cc3357d4c6239a88d/contracts/StrategyUSDT.sol,StrategyUSDT.sol,function balanceOfy3CRVinWant() public view returns (uint256) {
SWC-131-Presence of unused variables,adjustPosition,L100,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Stablecoins 3pool/stablecoins-3pool-adeb776933c6cb3b8306239cc3357d4c6239a88d/contracts/StrategyUSDT.sol,StrategyUSDT.sol,// SWC-131-Presence of unused variables: L100
SWC-104-Unchecked Call Return Value,constructor,L164,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Vault V2 (Solidity part)/yearn-vaults-54db126821c4d7aaaf5839be935cecb9b1bf088b/BaseStrategy.sol,BaseStrategy.sol,want = IERC20(vault.token());
SWC-101-Integer Overflow and Underflow,harvest,L332,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Vault V2 (Solidity part)/yearn-vaults-54db126821c4d7aaaf5839be935cecb9b1bf088b/BaseStrategy.sol,BaseStrategy.sol,return (profitFactor * callCost < credit.add(profit));
SWC-135-Code With No Effects,N/A,L561 - L595,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Protocol V1/code/yinsure.sol,yinsure.sol,struct ApiId {
SWC-135-Code With No Effects,N/A,L610 - L627,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Protocol V1/code/yinsure.sol,yinsure.sol,// SWC-135-Code With No Effects: L610 - L627
SWC-101-Integer Overflow and Underflow,submitClaim,L788,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Protocol V1/code/yinsure.sol,yinsure.sol,// SWC-101-Integer Overflow and Underflow: L788
SWC-101-Integer Overflow and Underflow,buyCover,L913,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Protocol V1/code/yinsure.sol,yinsure.sol,// SWC-101-Integer Overflow and Underflow: L913
SWC-101-Integer Overflow and Underflow,buyCover,L914,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Protocol V1/code/yinsure.sol,yinsure.sol,uint256 nextTokenId = issuedTokensCount++;
SWC-107-Reentrancy,depositETH,L90 - L104,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Protocol V1/yearn-protocol-9ff0dc0ea73642c529383d0675930a41bf033295/contracts/vaults/yWETH.sol,yWETH.sol,function depositETH() public payable {
SWC-107-Reentrancy,withdrawETH,L144 - L162,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Protocol V1/yearn-protocol-9ff0dc0ea73642c529383d0675930a41bf033295/contracts/vaults/yWETH.sol,yWETH.sol,function withdrawETH(uint _shares) public {
SWC-135-Code With No Effects,N/A,L22,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Strategy SSB/strategy-ssb-e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol,Strategy.sol,using Address for address;
SWC-131-Presence of unused variables,N/A,L26,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Strategy SSB/strategy-ssb-e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol,Strategy.sol,IERC20 internal constant weth = IERC20(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2));
SWC-135-Code With No Effects,clone,L134,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Strategy SSB/strategy-ssb-e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol,Strategy.sol,uint256 _minDepositPeriod
SWC-135-Code With No Effects,getSwapSteps,L426,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Strategy SSB/strategy-ssb-e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol,Strategy.sol,receive() external payable {}
SWC-104-Unchecked Call Return Value,_deposit,L138,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Vaults V3/yearn-vaults-e390c2a6b2ba6e2ecc8f3a72a1ea4adfabd17544/contracts/BaseWrapper.sol,BaseWrapper.sol,"if (depositor != address(this) && afterBal > 0) token.transfer(depositor, afterBal);"
SWC-128-DoS With Block Gas Limit,_withdraw,L152 - L192,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Vaults V3/yearn-vaults-e390c2a6b2ba6e2ecc8f3a72a1ea4adfabd17544/contracts/BaseWrapper.sol,BaseWrapper.sol,// SWC-128-DoS With Block Gas Limit: L152 - L192
SWC-104-Unchecked Call Return Value,_withdraw,L174,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Vaults V3/yearn-vaults-e390c2a6b2ba6e2ecc8f3a72a1ea4adfabd17544/contracts/BaseWrapper.sol,BaseWrapper.sol,"if (sender != address(this)) vaults[id].transferFrom(sender, address(this), availableShares);"
SWC-128-DoS With Block Gas Limit,_permitAll,L108 - L110,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Vaults V3/yearn-vaults-e390c2a6b2ba6e2ecc8f3a72a1ea4adfabd17544/contracts/yToken.sol,yToken.sol,for (uint256 i = 0; i < vaults.length; i++) {
SWC-128-DoS With Block Gas Limit,revokeAll,L156 - L159,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Vaults V3/yearn-vaults-e390c2a6b2ba6e2ecc8f3a72a1ea4adfabd17544/contracts/yToken.sol,yToken.sol,for (uint256 i = 0; i < vaults.length; i++) {
SWC-107-Reentrancy,withdrawETH,L187,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yearn Vaults V3/yearn-vaults-e390c2a6b2ba6e2ecc8f3a72a1ea4adfabd17544/contracts/yToken.sol,yToken.sol,IWETH(address(token)).withdraw(withdrawn);
SWC-101-Integer Overflow and Underflow,div,L102,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,return uq112x112(self._x / uint224(x));
SWC-101-Integer Overflow and Underflow,mul,L110,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,"require(y == 0 || (z = uint(self._x) * y) / y == uint(self._x), ""FixedPoint: MULTIPLICATION_OVERFLOW"");"
SWC-101-Integer Overflow and Underflow,fraction,L119,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,return uq112x112((uint224(numerator) << RESOLUTION) / denominator);
SWC-101-Integer Overflow and Underflow,currentCumulativePrices,L158,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,"price0Cumulative += uint(FixedPoint.fraction(reserve1, reserve0)._x) * timeElapsed;"
SWC-101-Integer Overflow and Underflow,currentCumulativePrices,L161,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,"price1Cumulative += uint(FixedPoint.fraction(reserve0, reserve1)._x) * timeElapsed;"
SWC-101-Integer Overflow and Underflow,quote,L383,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,amountB = amountA.mul(reserveB) / reserveA;
SWC-101-Integer Overflow and Underflow,getAmountOut,L394,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,amountOut = numerator / denominator;
SWC-101-Integer Overflow and Underflow,getAmountIn,L404,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,amountIn = (numerator / denominator).add(1);
SWC-128-DoS With Block Gas Limit,_updateAll,L584 - L588,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,for (uint i = 0; i < _pairs.length; i++) {
SWC-128-DoS With Block Gas Limit,workable,L604 - L609,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,// SWC-128-DoS With Block Gas Limit: L604 - L609
SWC-101-Integer Overflow and Underflow,computeAmountOut,L630,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,FixedPoint.uq112x112 memory priceAverage = FixedPoint.uq112x112(
SWC-101-Integer Overflow and Underflow,current,L651,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,
SWC-124-Write to Arbitrary Storage Location,quote,L669,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,uint length = observations[pair].length-1;
SWC-128-DoS With Block Gas Limit,quote,L674 - L683,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,if (token0 == tokenIn) {
SWC-101-Integer Overflow and Underflow,quote,L675,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,// SWC-128-DoS With Block Gas Limit: L674 - L683
SWC-101-Integer Overflow and Underflow,quote,L679,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,priceAverageCumulative += computeAmountOut(
SWC-128-DoS With Block Gas Limit,quote,L685 - L694,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,} else {
SWC-101-Integer Overflow and Underflow,quote,L685,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,} else {
SWC-101-Integer Overflow and Underflow,quote,L689,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,// SWC-101-Integer Overflow and Underflow: L685
SWC-128-DoS With Block Gas Limit,sample,L714 - L724,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,if (token0 == tokenIn) {
SWC-101-Integer Overflow and Underflow,sample,L718,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,nextIndex = i + window;
SWC-124-Write to Arbitrary Storage Location,sample,"L720, L721",DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,"// SWC-124-Write to Arbitrary Storage Location: L720, L721"
SWC-101-Integer Overflow and Underflow,sample,L724,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,"observations[pair][nextIndex].timestamp - observations[pair][i].timestamp, amountIn);"
SWC-128-DoS With Block Gas Limit,sample,L728 - 739,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,for (; i < length; i+=window) {
SWC-101-Integer Overflow and Underflow,sample,L731,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,nextIndex = i + window;
SWC-124-Write to Arbitrary Storage Location,sample,"L734, L735",DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,"observations[pair][i].price1Cumulative,"
SWC-101-Integer Overflow and Underflow,sample,L737,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,"observations[pair][nextIndex].timestamp - observations[pair][i].timestamp, amountIn);"
SWC-101-Integer Overflow and Underflow,sqrt,L780 - L786,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,uint256 c = (x + 1) / 2;
SWC-101-Integer Overflow and Underflow,stddev,L796 - L809,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,function stddev(uint[] memory numbers) public pure returns (uint256 sd) {
SWC-104-Unchecked Call Return Value,_swap,L849,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol,Keep3rV1Oracle.sol,"KP3R.approve(address(UNI), _amount);"
SWC-101-Integer Overflow and Underflow,floorLog2,L33,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Volatility.sol,Keep3rV1Volatility.sol,res += 1;
SWC-101-Integer Overflow and Underflow,floorLog2,L41,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Volatility.sol,Keep3rV1Volatility.sol,res |= s;
SWC-101-Integer Overflow and Underflow,ln,L56,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Volatility.sol,Keep3rV1Volatility.sol,x >>= count; // now x < 2
SWC-101-Integer Overflow and Underflow,ln,L58,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Volatility.sol,Keep3rV1Volatility.sol,res = count * FIXED_1;
SWC-101-Integer Overflow and Underflow,ln,L65,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Volatility.sol,Keep3rV1Volatility.sol,x = (x * x) / FIXED_1; // now 1 < x < 4
SWC-101-Integer Overflow and Underflow,ln,L68,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Volatility.sol,Keep3rV1Volatility.sol,x >>= 1; // now 1 < x < 2
SWC-101-Integer Overflow and Underflow,ln,L70,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Volatility.sol,Keep3rV1Volatility.sol,res += uint(1) << (i - 1);
SWC-101-Integer Overflow and Underflow,ln,L75,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Volatility.sol,Keep3rV1Volatility.sol,return res * LOG_E_2 / BASE;
SWC-101-Integer Overflow and Underflow,optimalExp,L96 - L150,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Volatility.sol,Keep3rV1Volatility.sol,z = y = x % 0x10000000000000000000000000000000; // get the input modulo 2^(-3)
SWC-135-Code With No Effects,_executeSwap,L53,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-ySwaps/hardhat-monorepo-ecc0b5147992b34c315e08af170ceb4a5fe071ee/packages/yswaps/contracts/swappers/async/UniswapV2Swapper.sol,UniswapV2Swapper.sol,)[_path.length - 1];
SWC-135-Code With No Effects,trade,L53-L62,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-ySwaps/hardhat-monorepo-ecc0b5147992b34c315e08af170ceb4a5fe071ee/packages/yswaps/contracts/swappers/sync/BancorSwapper.sol,BancorSwapper.sol,function trade(
SWC-135-Code With No Effects,execute,L82,DAppSCAN-source/contracts/QuillAudits-Yearn Finance-ySwaps/hardhat-monorepo-ecc0b5147992b34c315e08af170ceb4a5fe071ee/packages/yswaps/contracts/TradeFactory/TradeFactoryExecutor.sol,TradeFactoryExecutor.sol,if (_tradeExecutionDetails._maxSlippage == 0) revert CommonErrors.ZeroSlippage();
SWC-102-Outdated Compiler Version,N/A,L5,DAppSCAN-source/contracts/QuillAudits-ZortCoin Smart Contract/ZortCoin/ZortCoin.sol,ZortCoin.sol,pragma solidity ^0.5.17;
SWC-102-Outdated Compiler Version,N/A,L7,DAppSCAN-source/contracts/QuillAudits-ZortCoin Smart Contract/ZortCoin/ZortCoin.sol,ZortCoin.sol,pragma solidity >=0.4.22 <0.6.0;
SWC-123-Requirement Violation,approveAndCall,L130,DAppSCAN-source/contracts/QuillAudits-ZortCoin Smart Contract/ZortCoin/ZortCoin.sol,ZortCoin.sol,"spender.receiveApproval(msg.sender, _value, address(this), _extraData);"
SWC-123-Requirement Violation,N/A,L169,DAppSCAN-source/contracts/QuillAudits-ZortCoin Smart Contract/ZortCoin/ZortCoin.sol,ZortCoin.sol,contract ZortCoin is TokenERC20 {
SWC-107-Reentrancy,reserveDeposit,L49 - L80,DAppSCAN-source/contracts/Runtime_Vеrification-ElementFinance/elf-contracts-637c6f959315cbb11a164555e588520c7d89122b/contracts/YVaultAssetProxy.sol,YVaultAssetProxy.sol,function reserveDeposit(uint256 _amount) external {
SWC-135-Code With No Effects,N/A,L53,DAppSCAN-source/contracts/Runtime_Vеrification-ElementFinance/elf-contracts-b9ab6095a211ccb81941a5104c581e3564a97502/contracts/ConvergentCurvePool.sol,ConvergentCurvePool.sol,uint256 public constant EPSILON = 1e12;
SWC-135-Code With No Effects,N/A,L4,DAppSCAN-source/contracts/Runtime_Vеrification-ElementFinance/elf-contracts-b9ab6095a211ccb81941a5104c581e3564a97502/contracts/factories/InterestTokenFactory.sol,InterestTokenFactory.sol,"import ""../Tranche.sol"";"
SWC-117-Signature Malleability,permit,L211,DAppSCAN-source/contracts/Runtime_Vеrification-ElementFinance/elf-contracts-b9ab6095a211ccb81941a5104c581e3564a97502/contracts/libraries/ERC20Permit.sol,ERC20Permit.sol,"require(owner == ecrecover(digest, v, r, s), ""ERC20: invalid-permit"");"
SWC-101-Integer Overflow and Underflow,_mintGovernanceLP,L607 - L612,DAppSCAN-source/contracts/Runtime_Vеrification-ElementFinance/elf-contracts-eed369562ac50398c10fd0a56dc287a29002d3f8/contracts/ConvergentCurvePool.sol,ConvergentCurvePool.sol,// SWC-101-Integer Overflow and Underflow: L607 - L612
SWC-107-Reentrancy,execute,L238 - L277,DAppSCAN-source/contracts/Runtime_Vеrification-Element_Finance_Governance_Security_Audit_Report/council-3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/CoreVoting.sol,CoreVoting.sol,function execute(
SWC-104-Unchecked Call Return Value,genericCall,L73,DAppSCAN-source/contracts/Runtime_Vеrification-Element_Finance_Governance_Security_Audit_Report/council-3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/features/Treasury.sol,Treasury.sol,_target.call(_callData);
SWC-101-Integer Overflow and Underflow,_find,L225,DAppSCAN-source/contracts/Runtime_Vеrification-Element_Finance_Governance_Security_Audit_Report/council-3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/libraries/History.sol,History.sol,uint256 maxIndex = length - 1;
SWC-128-DoS With Block Gas Limit,_clear,L279 - L301,DAppSCAN-source/contracts/Runtime_Vеrification-Element_Finance_Governance_Security_Audit_Report/council-3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/libraries/History.sol,History.sol,function _clear(
SWC-107-Reentrancy,execTransaction,L70 - L105,DAppSCAN-source/contracts/Runtime_Vеrification-GnosisSafe/safe-contracts-427d6f7e779431333c54bcb4d4cde31e4d57ce96/contracts/GnosisSafe.sol,GnosisSafe.sol,function execTransaction(
SWC-101-Integer Overflow and Underflow,execTransaction,L94,DAppSCAN-source/contracts/Runtime_Vеrification-GnosisSafe/safe-contracts-427d6f7e779431333c54bcb4d4cde31e4d57ce96/contracts/GnosisSafe.sol,GnosisSafe.sol,nonce++;
SWC-101-Integer Overflow and Underflow,checkSignatures,L142,DAppSCAN-source/contracts/Runtime_Vеrification-GnosisSafe/safe-contracts-427d6f7e779431333c54bcb4d4cde31e4d57ce96/contracts/GnosisSafe.sol,GnosisSafe.sol,if (signatures.length < threshold * 65) {
SWC-114-Transaction Order Dependence,addOwnerWithThreshold,L53 - L68,DAppSCAN-source/contracts/Runtime_Vеrification-GnosisSafe/safe-contracts-427d6f7e779431333c54bcb4d4cde31e4d57ce96/contracts/base/OwnerManager.sol,OwnerManager.sol,"function addOwnerWithThreshold(address owner, uint256 _threshold)"
SWC-101-Integer Overflow and Underflow,addOwnerWithThreshold,L64,DAppSCAN-source/contracts/Runtime_Vеrification-GnosisSafe/safe-contracts-427d6f7e779431333c54bcb4d4cde31e4d57ce96/contracts/base/OwnerManager.sol,OwnerManager.sol,ownerCount++;
SWC-101-Integer Overflow and Underflow,removeOwner,L82,DAppSCAN-source/contracts/Runtime_Vеrification-GnosisSafe/safe-contracts-427d6f7e779431333c54bcb4d4cde31e4d57ce96/contracts/base/OwnerManager.sol,OwnerManager.sol,"require(ownerCount - 1 >= _threshold, ""New owner count needs to be larger than new threshold"");"
SWC-101-Integer Overflow and Underflow,removeOwner,L89,DAppSCAN-source/contracts/Runtime_Vеrification-GnosisSafe/safe-contracts-427d6f7e779431333c54bcb4d4cde31e4d57ce96/contracts/base/OwnerManager.sol,OwnerManager.sol,ownerCount--;
SWC-102-Outdated Compiler Version,N/A,L19,DAppSCAN-source/contracts/Runtime_Vеrification-Stakefish_BatchDeposit/eth2-batch-deposit-a4912b2d839305da8447b7cec6b2f09238b90e37/contracts/BatchDeposits.sol,BatchDeposits.sol,pragma solidity 0.6.11;
SWC-114-Transaction Order Dependence,batchDeposit,L86 - L122,DAppSCAN-source/contracts/Runtime_Vеrification-Stakefish_BatchDeposit/eth2-batch-deposit-a4912b2d839305da8447b7cec6b2f09238b90e37/contracts/BatchDeposits.sol,BatchDeposits.sol,function batchDeposit(
SWC-107-Reentrancy,mintTo,L53-L71,DAppSCAN-source/contracts/Runtime_Vеrification-stakefish_ethereum_staking_audit_report/eth2-validation-services-contract-d91928f3a270f6115831fe3a21a69eb98bf57b26/contracts/StakefishERC721Wrapper.sol,StakefishERC721Wrapper.sol,"function mintTo(address servicesContract, address to, uint256 amount) public nonReentrant returns (uint256) {"
SWC-131-Presence of unused variables,N/A,L33,DAppSCAN-source/contracts/Runtime_Vеrification-stakefish_ethereum_staking_audit_report/eth2-validation-services-contract-d91928f3a270f6115831fe3a21a69eb98bf57b26/contracts/StakefishServicesContract.sol,StakefishServicesContract.sol,uint256 private constant MAX_TIME_TO_WITHDRAW = 1 * YEAR;
SWC-113-DoS with Failed Call,endOperatorServices,L171-L189,DAppSCAN-source/contracts/Runtime_Vеrification-stakefish_ethereum_staking_audit_report/eth2-validation-services-contract-d91928f3a270f6115831fe3a21a69eb98bf57b26/contracts/StakefishServicesContract.sol,StakefishServicesContract.sol,function endOperatorServices()
SWC-114-Transaction Order Dependence,approve,L226-L247,DAppSCAN-source/contracts/Runtime_Vеrification-stakefish_ethereum_staking_audit_report/eth2-validation-services-contract-d91928f3a270f6115831fe3a21a69eb98bf57b26/contracts/StakefishServicesContract.sol,StakefishServicesContract.sol,function approve(
SWC-101-Integer Overflow and Underflow,addDeposit,L89,DAppSCAN-source/contracts/Runtime_Vеrification-StakeWise/contracts-19da824f44079c2b94c8cca84de77f5bdf3f0e54/contracts/collectors/Solos.sol,Solos.sol,solo.releaseTime = block.timestamp + cancelLockDuration;
SWC-101-Integer Overflow and Underflow,cancelDeposit,L116,DAppSCAN-source/contracts/Runtime_Vеrification-StakeWise/contracts-19da824f44079c2b94c8cca84de77f5bdf3f0e54/contracts/collectors/Solos.sol,Solos.sol,solo.releaseTime = block.timestamp + cancelLockDuration;
SWC-114-Transaction Order Dependence,commit,L139-L181,DAppSCAN-source/contracts/Runtime_Vеrification-Tracer_Perpetual_Pools_V2/perpetual-pools-contracts-846bbf62652d7c83aee1cf3766275c4d08b00c8a/contracts/implementation/PoolCommitter.sol,PoolCommitter.sol,function commit(
SWC-114-Transaction Order Dependence,claim,L187-L201,DAppSCAN-source/contracts/Runtime_Vеrification-Tracer_Perpetual_Pools_V2/perpetual-pools-contracts-846bbf62652d7c83aee1cf3766275c4d08b00c8a/contracts/implementation/PoolCommitter.sol,PoolCommitter.sol,function claim(address user) external override updateBalance {
SWC-128-DoS With Block Gas Limit,executeCommitments,L305-L315,DAppSCAN-source/contracts/Runtime_Vеrification-Tracer_Perpetual_Pools_V2/perpetual-pools-contracts-846bbf62652d7c83aee1cf3766275c4d08b00c8a/contracts/implementation/PoolCommitter.sol,PoolCommitter.sol,while (true) {
SWC-135-Code With No Effects,updateAggregateBalance,L386,DAppSCAN-source/contracts/Runtime_Vеrification-Tracer_Perpetual_Pools_V2/perpetual-pools-contracts-846bbf62652d7c83aee1cf3766275c4d08b00c8a/contracts/implementation/PoolCommitter.sol,PoolCommitter.sol,delete userCommitments[user][i];
SWC-131-Presence of unused variables,N/A,L22,DAppSCAN-source/contracts/Runtime_Vеrification-Tracer_Perpetual_Pools_V2/perpetual-pools-contracts-846bbf62652d7c83aee1cf3766275c4d08b00c8a/contracts/implementation/SMAOracle.sol,SMAOracle.sol,int256 public price;
SWC-135-Code With No Effects,toWad,L134-L136,DAppSCAN-source/contracts/Runtime_Vеrification-Tracer_Perpetual_Pools_V2/perpetual-pools-contracts-846bbf62652d7c83aee1cf3766275c4d08b00c8a/contracts/implementation/SMAOracle.sol,SMAOracle.sol,function toWad(int256 x) private view returns (int256) {
SWC-114-Transaction Order Dependence,rug,L160,DAppSCAN-source/contracts/Runtime_Vеrification-Tracer_Perpetual_Pools_V2/vesting-a02cbd5e73e629b5d80c0af0202a3ee6f18d0216/contracts/Vesting.sol,Vesting.sol,"function rug(address account, uint256 scheduleId) external onlyOwner {"
SWC-135-Code With No Effects,N/A,L72 - L74,DAppSCAN-source/contracts/SlowMist-Booster-Protocol_智能安全审计报告/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol,ActionPools.sol,receive() external payable {
SWC-104-Unchecked Call Return Value,safeTokenTransfer,L372,DAppSCAN-source/contracts/SlowMist-Booster-Protocol_智能安全审计报告/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol,ActionPools.sol,"_token.transfer(_to, value);"
SWC-114-Transaction Order Dependence,updatePool,L241,DAppSCAN-source/contracts/SlowMist-Booster-Protocol_智能安全审计报告/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/strategies/StrategyMDex.sol,StrategyMDex.sol,"uint256 newRewardBase = utils.getTokenIn(rewardToken, newRewards, pool.baseToken);"
SWC-114-Transaction Order Dependence,getAmountOut,L345,DAppSCAN-source/contracts/SlowMist-Booster-Protocol_智能安全审计报告/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/strategies/StrategyUtils.sol,StrategyUtils.sol,"uint256[] memory result = router.getAmountsIn(_amountOut, path);"
SWC-114-Transaction Order Dependence,getTokenInTo,L395,DAppSCAN-source/contracts/SlowMist-Booster-Protocol_智能安全审计报告/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/strategies/StrategyUtils.sol,StrategyUtils.sol,"uint256[] memory result = router.swapExactTokensForTokens(_amountIn, amountOutMin, path, _toAddress, block.timestamp.add(60));"
SWC-114-Transaction Order Dependence,buyback,L66,DAppSCAN-source/contracts/SlowMist-Booster-Protocol_智能安全审计报告/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/utils/BuybackBooToken.sol,BuybackBooToken.sol,"result = router.swapExactTokensForTokens(_value, 0, path, address(this), block.timestamp.add(60));"
SWC-107-Reentrancy,withdraw,L121 - L153,DAppSCAN-source/contracts/SlowMist-CFFv2 Smart Contract Security Audit Report/cff-contract-v2-c86bef3f13c7585f547f9cd0ca900f94664e96b7/contracts/core/CFVault.sol,CFVault.sol,function withdraw(uint256 _amount) public{
SWC-120-Weak Sources of Randomness from Chain Attributes,_redeemSinglePrize,L156,DAppSCAN-source/contracts/SlowMist-DODO-MiningV3 and NFT Smart Contract Security Audit Report/contractV2-453e323af65f0a666f7d9c2dfd01b9d32ea19533/contracts/DODODrops/DODODropsV2/DODODrops.sol,DODODrops.sol,"random = uint256(keccak256(abi.encodePacked(_REVEAL_RN_, msg.sender, balanceOf(msg.sender).add(curNo + 1)))) % range;"
SWC-128-DoS With Block Gas Limit,_updateAllReward,L260-L262,DAppSCAN-source/contracts/SlowMist-DODO-MiningV3 and NFT Smart Contract Security Audit Report/contractV2-c7202eeae724783f572232a1d80b6b9082ee90b1/contracts/DODOToken/DODOMineV3/BaseMine.sol,BaseMine.sol,for (uint256 i = 0; i < len; i++) {
SWC-120-Weak Sources of Randomness from Chain Attributes,_getRandomNum,L175,DAppSCAN-source/contracts/SlowMist-DODO-NFTPool Smart Contract Security Audit Report/contractV2-e16ceb038ed6bf070ea75d9359c7ad54e6f3e226/contracts/NFTPool/impl/BaseFilterV1.sol,BaseFilterV1.sol,"keccak256(abi.encodePacked(tx.origin, blockhash(block.number - 1), gasleft()))"
SWC-113-DoS with Failed Call,delegateBatch,L143 - L146,DAppSCAN-source/contracts/SlowMist-eden-network Smart Contract Security Audit Report/governance-e7b55f6e3f9c0d3ede7fd8bb39ae4fa7a4f4e79e/contracts/DistributorGovernance.sol,DistributorGovernance.sol,for(uint i; i< producers.length; i++) {
SWC-107-Reentrancy,lock,L66 - L80,DAppSCAN-source/contracts/SlowMist-ForTube2.0 Smart Contract Security Audit Report/bond-854527d0ea7ad2ddd3504b4d4ae3fcb57cb6445d/contracts/PRA.sol,PRA.sol,function lock() external {
SWC-113-DoS with Failed Call,massUpdatePools,L182 - L184,DAppSCAN-source/contracts/SlowMist-SmoothyV1 Smart Contract Security Audit Report/smoothy-contract-f50450aa09f5031be5f7f330f527333571982d65/contracts/liquidity-mining/SmoothyMasterV1.sol,SmoothyMasterV1.sol,for (uint256 pid = 0; pid < length; ++pid) {
SWC-104-Unchecked Call Return Value,_depositFrom,L254,DAppSCAN-source/contracts/SlowMist-Starcrazy Smart Contract Security Audit Report/starcrazy-contracts-e9e11d234ac065726e108a73dfcd5efbad26f2c5/contract/AlianaMinting.sol,AlianaMinting.sol,"insert(user.amountToken, _tokenId, _amount);"
SWC-114-Transaction Order Dependence,stake,L717-L723,DAppSCAN-source/contracts/SlowMist-wault.finance(WUSD) Smart Contract Security Audit Report/WUSD-91c541c2f1c0ac781ddcfb2be6a62555a5e1e8d1/WUSDMaster.sol,WUSDMaster.sol,wswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(
SWC-108-State Variable Default Visibility,EtherFund,L32 - L40,DAppSCAN-source/contracts/Smartdec-BCShop Smart Contracts Security Analysis/bcshop.io-3023172e3192b317e291a68bc191840e6b5e462c/contracts/shop/EtherFund.sol,EtherFund.sol,"function EtherFund(address receiver1, uint16 share1, address receiver2, uint16 share2) {"
SWC-101-Integer Overflow and Underflow,EtherFund,L34,DAppSCAN-source/contracts/Smartdec-BCShop Smart Contracts Security Analysis/bcshop.io-3023172e3192b317e291a68bc191840e6b5e462c/contracts/shop/EtherFund.sol,EtherFund.sol,require(share1 + share2 == 1000);
SWC-125-Incorrect Inheritance Order,N/A,L13,DAppSCAN-source/contracts/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/BoomstarterICO.sol,BoomstarterICO.sol,"contract BoomstarterICO is ArgumentsChecker, ReentrancyGuard, EthPriceDependentForICO, IICOInfo, IMintableToken {"
SWC-135-Code With No Effects,BoomstarterICO,L128,DAppSCAN-source/contracts/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/BoomstarterICO.sol,BoomstarterICO.sol,m_deployer = msg.sender;
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Core.sol,Core.sol,pragma solidity ^0.5.4;
SWC-128-DoS With Block Gas Limit,getTransactionIds,L389,DAppSCAN-source/contracts/Smartdec-SONM Smart Contracts Security Analysis/core-8b349d25214c6c600f4724e3e9ed3dbc57f9ae63/blockchain/source/contracts/MultiSigWallet.sol,MultiSigWallet.sol,for (i = from; i < to; i++)
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Smartdec-TokenBridge (by POA Network) Smart Contracts Security Analysis/tokenbridge-contracts-bbb97a63c900f03a902d0e82358abac3b294e4d9/contracts/ERC677.sol,ERC677.sol,pragma solidity 0.4.24;
SWC-110-Assert Violation,random,L48-L50,DAppSCAN-source/contracts/Smartdec-TokenBridge (by POA Network) Smart Contracts Security Analysis/tokenbridge-contracts-bbb97a63c900f03a902d0e82358abac3b294e4d9/contracts/upgradeable_contracts/BaseFeeManager.sol,BaseFeeManager.sol,function random(uint256 _count) public view returns(uint256) {
SWC-135-Code With No Effects,,L159-L161   ,DAppSCAN-source/contracts/Smartdec-TokenBridge (by POA Network) Smart Contracts Security Analysis/tokenbridge-contracts-bbb97a63c900f03a902d0e82358abac3b294e4d9/contracts/upgradeable_contracts/erc20_to_erc20/HomeBridgeErcToErc.sol,HomeBridgeErcToErc.sol,function () payable public {
SWC-135-Code With No Effects,N/A,L7,DAppSCAN-source/contracts/Smartdec-РumaPay Smart Contracts Security Analysis/smart-contracts-5eb99b1a94d9e5d98873fb4338b97943b9821569/contracts/PumaPayPullPayment.sol,PumaPayPullPayment.sol,"import ""openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol"";"
SWC-128-DoS With Block Gas Limit,addMaintainers,L82 - L84,DAppSCAN-source/contracts/Solidified-2Key [14.10.2019]/contracts-de171eb80e9ce1c6566a5d782f0a0549ab0151ad/contracts/2key/singleton-contracts/TwoKeyMaintainersRegistry.sol,TwoKeyMaintainersRegistry.sol,for(uint i=0; i<numberOfMaintainers; i++) {
SWC-128-DoS With Block Gas Limit,removeMaintainers,L101 - L104,DAppSCAN-source/contracts/Solidified-2Key [14.10.2019]/contracts-de171eb80e9ce1c6566a5d782f0a0549ab0151ad/contracts/2key/singleton-contracts/TwoKeyMaintainersRegistry.sol,TwoKeyMaintainersRegistry.sol,for(uint i=0; i<numberOfMaintainers; i++) {
SWC-104-Unchecked Call Return Value,convert,L463,DAppSCAN-source/contracts/Solidified-Aztec Element Bridge/aztec-connect-bridges-ac2e7194b5887ea11a607b4cf8de0547b3d7fdd0/src/bridges/element/ElementBridge.sol,ElementBridge.sol,uint256 principalTokensAmount = IVault(balancerAddress).swap(
SWC-104-Unchecked Call Return Value,wrapETH,L115,DAppSCAN-source/contracts/Solidified-Aztec Lido Bridge/aztec-connect-bridges-d5aca13d4d0a17b21eeddf77f49f4c6613461fb0/src/bridges/lido/LidoBridge.sol,LidoBridge.sol,"curvePool.exchange{value: inputValue}(curveETHIndex, curveStETHIndex, inputValue, minOutput);"
SWC-104-Unchecked Call Return Value,wrapETH,L119,DAppSCAN-source/contracts/Solidified-Aztec Lido Bridge/aztec-connect-bridges-d5aca13d4d0a17b21eeddf77f49f4c6613461fb0/src/bridges/lido/LidoBridge.sol,LidoBridge.sol,lido.submit{value: inputValue}(referral);
SWC-104-Unchecked Call Return Value,wrapETH,L124,DAppSCAN-source/contracts/Solidified-Aztec Lido Bridge/aztec-connect-bridges-d5aca13d4d0a17b21eeddf77f49f4c6613461fb0/src/bridges/lido/LidoBridge.sol,LidoBridge.sol,uint256 outputStETHBalance = IERC20(address(lido)).balanceOf(address(this));
SWC-103-Floating Pragma,N/A,L2,DAppSCAN-source/contracts/Solidified-CultosCoin (2)/token-28c0a18571f2804ff42ed76fc0ec8749341dfc00/CultosCoin.sol,CultosCoin.sol,pragma solidity >=0.8.8 <0.8.9;
SWC-135-Code With No Effects,setDripDuration,L92-L93,DAppSCAN-source/contracts/Solidified-Origin Governance/origin-dollar-30564e25d640749af447fb9e5d7c4fb00c37779f/contracts/contracts/harvest/Dripper.sol,Dripper.sol,dripDuration = uint192(_durationSeconds);
SWC-128-DoS With Block Gas Limit,harvest,L224-L233,DAppSCAN-source/contracts/Solidified-Origin Governance/origin-dollar-30564e25d640749af447fb9e5d7c4fb00c37779f/contracts/contracts/harvest/Harvester.sol,Harvester.sol,function harvest() external onlyGovernor nonReentrant {
SWC-131-Presence of unused variables,_harvestAndSwap,L314,DAppSCAN-source/contracts/Solidified-Origin Governance/origin-dollar-30564e25d640749af447fb9e5d7c4fb00c37779f/contracts/contracts/harvest/Harvester.sol,Harvester.sol,IStrategy strategy = IStrategy(_strategyAddr);
SWC-128-DoS With Block Gas Limit,setOracleAddress,L73 - L79,DAppSCAN-source/contracts/Solidity_Finance-OKLG - Smart Contract/contracts-e167d0d742d21bcc62d7a5b770a1f0ed1cf31eca/contracts/OKLGAtomicSwap.sol,OKLGAtomicSwap.sol,while (_index + _start < _start + _numLoops) {
SWC-128-DoS With Block Gas Limit,getAccountById,L47 - L51,DAppSCAN-source/contracts/Solidity_Finance-OKLG - Smart Contract/contracts-e167d0d742d21bcc62d7a5b770a1f0ed1cf31eca/contracts/OKLGPasswordManager.sol,OKLGPasswordManager.sol,for (uint256 _i = 0; _i < _userInfo.length; _i++) {
SWC-120-Weak Sources of Randomness from Chain Attributes,drawWinner,L115 - L159,DAppSCAN-source/contracts/Solidity_Finance-OKLG - Smart Contract/contracts-e167d0d742d21bcc62d7a5b770a1f0ed1cf31eca/contracts/OKLGRaffle.sol,OKLGRaffle.sol,require(
SWC-107-Reentrancy,withdrawLockedTokens,L126,DAppSCAN-source/contracts/Solidity_Finance-OKLG - Smart Contract/contracts-e167d0d742d21bcc62d7a5b770a1f0ed1cf31eca/contracts/OKLGTokenLocker.sol,OKLGTokenLocker.sol,_locker.amountWithdrawn += _locker.isNft ? 1 : _amountOrTokenId;
SWC-135-Code With No Effects,N/A,L939,DAppSCAN-source/contracts/Solidity_Finance-RevomonVR Smart Contract/Contracts-9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevomonToken.sol,RevomonToken.sol,"contract RevomonToken is ERC20Capped, ERC20Burnable, ERC1363, Roles, TokenRecover {"
SWC-113-DoS with Failed Call,_matchOrders,L432 - L548,DAppSCAN-source/contracts/Trail_of_Bits-0x-protocol/0x-monorepo-abd479dc68fa75719647db261130418725fd40d5/contracts/exchange/contracts/src/MixinMatchOrders.sol,MixinMatchOrders.sol,function _settleMatchedOrders(
SWC-114-Transaction Order Dependence,setSignatureValidatorApproval,L76 - L92,DAppSCAN-source/contracts/Trail_of_Bits-0x-protocol/0x-monorepo-abd479dc68fa75719647db261130418725fd40d5/contracts/exchange/contracts/src/MixinSignatureValidator.sol,MixinSignatureValidator.sol,function setSignatureValidatorApproval(
SWC-101-Integer Overflow and Underflow,safeGetPartialAmountFloor,L57,DAppSCAN-source/contracts/Trail_of_Bits-0x-protocol/0x-monorepo-abd479dc68fa75719647db261130418725fd40d5/contracts/exchange-libs/contracts/src/LibMath.sol,LibMath.sol,// SWC-101-Integer Overflow and Underflow: L57
SWC-101-Integer Overflow and Underflow,_addTransaction,L303,DAppSCAN-source/contracts/Trail_of_Bits-0x-protocol/0x-monorepo-abd479dc68fa75719647db261130418725fd40d5/contracts/multisig/contracts/src/MultiSigWallet.sol,MultiSigWallet.sol,transactionCount += 1;
SWC-101-Integer Overflow and Underflow,pastTimeLock,L55 - L58,DAppSCAN-source/contracts/Trail_of_Bits-0x-protocol/0x-monorepo-abd479dc68fa75719647db261130418725fd40d5/contracts/multisig/contracts/src/MultiSigWalletWithTimeLock.sol,MultiSigWalletWithTimeLock.sol,require(
SWC-104-Unchecked Call Return Value,_deposit,L178,DAppSCAN-source/contracts/Trail_of_Bits-88mph/88mph-contracts-76cd9d1fc45e65f5d0f686621fe6af85c40aa140/contracts/rewards/xMPH.sol,xMPH.sol,"mph.transferFrom(msg.sender, address(this), _mphAmount);"
SWC-104-Unchecked Call Return Value,_withdraw,L196,DAppSCAN-source/contracts/Trail_of_Bits-88mph/88mph-contracts-76cd9d1fc45e65f5d0f686621fe6af85c40aa140/contracts/rewards/xMPH.sol,xMPH.sol,"mph.transfer(msg.sender, mphAmount);"
SWC-104-Unchecked Call Return Value,_distributeReward,L212,DAppSCAN-source/contracts/Trail_of_Bits-88mph/88mph-contracts-76cd9d1fc45e65f5d0f686621fe6af85c40aa140/contracts/rewards/xMPH.sol,xMPH.sol,// SWC-104-Unchecked Call Return Value: L212
SWC-107-Reentrancy,getPriceAnd24HourVolume,L34 - L60,DAppSCAN-source/contracts/Trail_of_Bits-ampleforth/market-oracle-888fccaf05786f3f7f49e18ff040f911d44906f4/contracts/MarketOracle.sol,MarketOracle.sol,function getPriceAnd24HourVolume()
SWC-101-Integer Overflow and Underflow,removeSourceAtIndex,L143,DAppSCAN-source/contracts/Trail_of_Bits-ampleforth/market-oracle-888fccaf05786f3f7f49e18ff040f911d44906f4/contracts/MarketOracle.sol,MarketOracle.sol,_whitelist.length--;
SWC-105-Unprotected Ether Withdrawal,conditionPspDapiUpdate,L471-L487,DAppSCAN-source/contracts/Trail_of_Bits-API3/airnode-991af4d69e82c1954a5c6c8e247cde8eb76101de/packages/airnode-protocol-v1/contracts/dapis/DapiServer.sol,DapiServer.sol,function conditionPspDapiUpdate(
SWC-114-Transaction Order Dependence,setRequesterBlockStatus,L284-L292,DAppSCAN-source/contracts/Trail_of_Bits-API3/airnode-991af4d69e82c1954a5c6c8e247cde8eb76101de/packages/airnode-protocol-v1/contracts/monetization/RequesterAuthorizerWhitelisterWithToken.sol,RequesterAuthorizerWhitelisterWithToken.sol,// SWC-114-Transaction Order Dependence: L284-L292
SWC-133-Hash Collisions With Multiple Variable Length Arguments,,L137-L147,DAppSCAN-source/contracts/Trail_of_Bits-API3/airnode-991af4d69e82c1954a5c6c8e247cde8eb76101de/packages/airnode-protocol-v1/contracts/protocol/StorageUtils.sol,StorageUtils.sol,abi.encodePacked(
SWC-121-Missing Protection against Signature Replay Attacks,confidentialApprove,L108-L125,DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ERC1724/base/ZkAssetBase.sol,ZkAssetBase.sol,function confidentialApprove(
SWC-101-Integer Overflow and Underflow,pastTimeLock,L54-L60,DAppSCAN-source/contracts/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/MultiSig/MultiSigWalletWithTimeLock.sol,MultiSigWalletWithTimeLock.sol,modifier pastTimeLock(uint256 transactionId) {
SWC-101-Integer Overflow and Underflow,calcPoolOutGivenSingleIn,L143,DAppSCAN-source/contracts/Trail_of_Bits-BalancerCore/balancer-core-942a51e202cc5bf9158bad77162bc72aa0a8afaf/contracts/BMath.sol,BMath.sol,"uint newPoolSupply = bmul(poolRatio, poolSupply);"
SWC-101-Integer Overflow and Underflow,joinPool,L377,DAppSCAN-source/contracts/Trail_of_Bits-BalancerCore/balancer-core-942a51e202cc5bf9158bad77162bc72aa0a8afaf/contracts/BPool.sol,BPool.sol,"uint ratio = bdiv(poolAmountOut, poolTotal);"
SWC-101-Integer Overflow and Underflow,exitPool,L403,DAppSCAN-source/contracts/Trail_of_Bits-BalancerCore/balancer-core-942a51e202cc5bf9158bad77162bc72aa0a8afaf/contracts/BPool.sol,BPool.sol,"uint pAiAfterExitFee = bsub(poolAmountIn, exitFee);"
SWC-112-Delegatecall to Untrusted Callee,author,L130,DAppSCAN-source/contracts/Trail_of_Bits-CompliFi/complifi-protocol-v1-912e93014aa16a9b6987556d971ed2b599b8cba7/contracts/DerivativeSpecification.sol,DerivativeSpecification.sol,author_ = _author;
SWC-114-Transaction Order Dependence,initialize,L175 - L189,DAppSCAN-source/contracts/Trail_of_Bits-CompliFi/complifi-protocol-v1-912e93014aa16a9b6987556d971ed2b599b8cba7/contracts/Vault.sol,Vault.sol,function initialize(int256[] calldata _underlyingStarts) external {
SWC-114-Transaction Order Dependence,initialize,L46 - L79,DAppSCAN-source/contracts/Trail_of_Bits-CompliFi/complifi-protocol-v1-912e93014aa16a9b6987556d971ed2b599b8cba7/contracts/VaultFactory.sol,VaultFactory.sol,function initialize(
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Trail_of_Bits-dharma-smartwallet/dharma-smart-wallet-b1d510d03b97a9c8457b9c0b9c91568a09ccc95d/contracts/account-recovery/DharmaAccountRecoveryManager.sol,DharmaAccountRecoveryManager.sol,"pragma solidity 0.5.11; // optimization runs: 200, evm version: petersburg"
SWC-128-DoS With Block Gas Limit,_getSaltAndTarget,L130 - L170,DAppSCAN-source/contracts/Trail_of_Bits-dharma-smartwallet/dharma-smart-wallet-b1d510d03b97a9c8457b9c0b9c91568a09ccc95d/contracts/factories/smart-wallet/DharmaSmartWalletFactoryV1.sol,DharmaSmartWalletFactoryV1.sol,function _getSaltAndTarget(
SWC-121-Missing Protection against Signature Replay Attacks,setGlobalKey,L52 - L76,DAppSCAN-source/contracts/Trail_of_Bits-dharma-smartwallet/dharma-smart-wallet-b1d510d03b97a9c8457b9c0b9c91568a09ccc95d/contracts/registries/DharmaKeyRegistryV1.sol,DharmaKeyRegistryV1.sol,function setGlobalKey(
SWC-104-Unchecked Call Return Value,giveCollatBack,L371,DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Curve/CurveAMO.sol,CurveAMO.sol,"collateral_token.transfer(address(pool), amount);"
SWC-101-Integer Overflow and Underflow,N/A,L242,DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Curve/CurveAMO_V2.sol,CurveAMO_V2.sol,"usdc_subtotal + (frax_in_contract.add(frax_withdrawable)).mul(fraxDiscountRate()).div(1e6 * (10 ** missing_decimals)), // [6] USDC Total"
SWC-128-DoS With Block Gas Limit,removePool,L252 - L257,DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol,Frax.sol,for (uint i = 0; i < frax_pools_array.length; i++){
SWC-104-Unchecked Call Return Value,mint1t1FRAX,L204,DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Pools/FraxPool.sol,FraxPool.sol,"collateral_token.transferFrom(msg.sender, address(this), collateral_amount);"
SWC-104-Unchecked Call Return Value,mintFractionalFRAX,L250,DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Pools/FraxPool.sol,FraxPool.sol,"FXS.pool_burn_from(msg.sender, fxs_needed);"
SWC-104-Unchecked Call Return Value,collectRedemption,L366,DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Pools/FraxPool.sol,FraxPool.sol,// SWC-104-Unchecked Call Return Value: L366
SWC-104-Unchecked Call Return Value,collectRedemption,L370,DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Pools/FraxPool.sol,FraxPool.sol,// SWC-104-Unchecked Call Return Value: L370
SWC-104-Unchecked Call Return Value,recollateralizeFRAX,L401,DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Pools/FraxPool.sol,FraxPool.sol,// SWC-104-Unchecked Call Return Value: L401
SWC-104-Unchecked Call Return Value,giveCollatBack,L263,DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Misc_AMOs/InvestorAMO_V2.sol,InvestorAMO_V2.sol,"collateral_token.transfer(address(pool), amount);"
SWC-104-Unchecked Call Return Value,provideLiquidity,L135-L136,DAppSCAN-source/contracts/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/FPI/TWAMM.sol,TWAMM.sol,"ERC20(tokenA).transferFrom(msg.sender, address(this), amountAIn);"
SWC-135-Code With No Effects,retroCatchUp,L465-L491,DAppSCAN-source/contracts/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/Staking/FraxUnifiedFarmTemplate.sol,FraxUnifiedFarmTemplate.sol,function retroCatchUp() internal {
SWC-106-Unprotected SELFDESTRUCT Instruction,N/A,L23 - L673,DAppSCAN-source/contracts/Trail_of_Bits-FujiProtocol/fuji-protocol-933ea57b11889d87744efa23e95c90b7bf589402/contracts/FujiVault.sol,FujiVault.sol,// SWC-106-Unprotected SELFDESTRUCT Instruction: L23 - L673
SWC-112-Delegatecall to Untrusted Callee,deposit,L177 - L178,DAppSCAN-source/contracts/Trail_of_Bits-FujiProtocol/fuji-protocol-933ea57b11889d87744efa23e95c90b7bf589402/contracts/FujiVault.sol,FujiVault.sol,// Delegate Call Deposit to current provider
SWC-112-Delegatecall to Untrusted Callee,withdraw,L227,DAppSCAN-source/contracts/Trail_of_Bits-FujiProtocol/fuji-protocol-933ea57b11889d87744efa23e95c90b7bf589402/contracts/FujiVault.sol,FujiVault.sol,// SWC-112-Delegatecall to Untrusted Callee: L227
SWC-112-Delegatecall to Untrusted Callee,borrow,L291,DAppSCAN-source/contracts/Trail_of_Bits-FujiProtocol/fuji-protocol-933ea57b11889d87744efa23e95c90b7bf589402/contracts/FujiVault.sol,FujiVault.sol,// SWC-112-Delegatecall to Untrusted Callee: L291
SWC-112-Delegatecall to Untrusted Callee,payback,L340,DAppSCAN-source/contracts/Trail_of_Bits-FujiProtocol/fuji-protocol-933ea57b11889d87744efa23e95c90b7bf589402/contracts/FujiVault.sol,FujiVault.sol,// SWC-112-Delegatecall to Untrusted Callee: L340
SWC-112-Delegatecall to Untrusted Callee,_execute,L101,DAppSCAN-source/contracts/Trail_of_Bits-FujiProtocol/fuji-protocol-933ea57b11889d87744efa23e95c90b7bf589402/contracts/abstracts/vault/VaultBaseUpgradeable.sol,VaultBaseUpgradeable.sol,"let succeeded := delegatecall(sub(gas(), 5000), _target, add(_data, 0x20), mload(_data), 0, 0)"
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Trail_of_Bits-golem/golem-contracts-62a1e0dab3baf8e9bff79b653dffa7df5f2d10a0/contracts/Faucet.sol,Faucet.sol,pragma solidity ^0.4.16;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Trail_of_Bits-golem/golem-contracts-62a1e0dab3baf8e9bff79b653dffa7df5f2d10a0/contracts/GNTDeposit.sol,GNTDeposit.sol,pragma solidity ^0.4.16;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Trail_of_Bits-golem/golem-contracts-62a1e0dab3baf8e9bff79b653dffa7df5f2d10a0/contracts/GNTPaymentChannels.sol,GNTPaymentChannels.sol,pragma solidity ^0.4.16;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Trail_of_Bits-golem/golem-contracts-62a1e0dab3baf8e9bff79b653dffa7df5f2d10a0/contracts/GolemNetworkToken.sol,GolemNetworkToken.sol,pragma solidity ^0.4.16;
SWC-102-Outdated Compiler Version,N/A,L5,DAppSCAN-source/contracts/Trail_of_Bits-golem/golem-contracts-62a1e0dab3baf8e9bff79b653dffa7df5f2d10a0/contracts/GolemNetworkTokenBatching.sol,GolemNetworkTokenBatching.sol,pragma solidity ^0.4.19;
SWC-102-Outdated Compiler Version,N/A,L2,DAppSCAN-source/contracts/Trail_of_Bits-golem/golem-contracts-62a1e0dab3baf8e9bff79b653dffa7df5f2d10a0/contracts/ReceivingContract.sol,ReceivingContract.sol,pragma solidity ^0.4.19;
SWC-102-Outdated Compiler Version,N/A,L5,DAppSCAN-source/contracts/Trail_of_Bits-golem/golem-contracts-62a1e0dab3baf8e9bff79b653dffa7df5f2d10a0/contracts/TokenProxy.sol,TokenProxy.sol,pragma solidity ^0.4.19;
SWC-114-Transaction Order Dependence,approve,L14,DAppSCAN-source/contracts/Trail_of_Bits-golem/golem-contracts-62a1e0dab3baf8e9bff79b653dffa7df5f2d10a0/contracts/open_zeppelin/ERC20.sol,ERC20.sol,"function approve(address spender, uint256 value) public returns (bool);"
SWC-114-Transaction Order Dependence,hermezAuctionProtocolInitializer,L123 - L156,DAppSCAN-source/contracts/Trail_of_Bits-hermez/contracts-d52ed73a0c7deaf06fcb0f981e14326f95cd1b78/contracts/auction/HermezAuctionProtocol.sol,HermezAuctionProtocol.sol,function hermezAuctionProtocolInitializer(
SWC-101-Integer Overflow and Underflow,setAllocationRatio,L273,DAppSCAN-source/contracts/Trail_of_Bits-hermez/contracts-d52ed73a0c7deaf06fcb0f981e14326f95cd1b78/contracts/auction/HermezAuctionProtocol.sol,HermezAuctionProtocol.sol,require(
SWC-101-Integer Overflow and Underflow,forge,L761 - L790,DAppSCAN-source/contracts/Trail_of_Bits-hermez/contracts-d52ed73a0c7deaf06fcb0f981e14326f95cd1b78/contracts/auction/HermezAuctionProtocol.sol,HermezAuctionProtocol.sol,uint128 burnAmount = slots[slotToForge]
SWC-101-Integer Overflow and Underflow,getClaimableHEZ,L802,DAppSCAN-source/contracts/Trail_of_Bits-hermez/contracts-d52ed73a0c7deaf06fcb0f981e14326f95cd1b78/contracts/auction/HermezAuctionProtocol.sol,HermezAuctionProtocol.sol,return pendingBalances[bidder];
SWC-114-Transaction Order Dependence,initializeHermez,L170 - L214,DAppSCAN-source/contracts/Trail_of_Bits-hermez/contracts-d52ed73a0c7deaf06fcb0f981e14326f95cd1b78/contracts/hermez/Hermez.sol,Hermez.sol,function initializeHermez(
SWC-107-Reentrancy,addToken,L642 - L664,DAppSCAN-source/contracts/Trail_of_Bits-hermez/contracts-d52ed73a0c7deaf06fcb0f981e14326f95cd1b78/contracts/hermez/Hermez.sol,Hermez.sol,"function addToken(address tokenAddress, bytes calldata permit) public {"
SWC-114-Transaction Order Dependence,withdrawalDelayerInitializer,L68 - L82,DAppSCAN-source/contracts/Trail_of_Bits-hermez/contracts-d52ed73a0c7deaf06fcb0f981e14326f95cd1b78/contracts/withdrawalDelayer/WithdrawalDelayer.sol,WithdrawalDelayer.sol,function withdrawalDelayerInitializer(
SWC-107-Reentrancy,_moveTokensAndETHfromAdjustment,L351,DAppSCAN-source/contracts/Trail_of_Bits-Liquity/dev-f0df3efa5a5f05b205752184cfce107c5bd6e06c/packages/contracts/contracts/BorrowerOperations.sol,BorrowerOperations.sol,"activePool.sendETH(_borrower, _collChange);"
SWC-113-DoS with Failed Call,_requireValidRecipient,L212-L224,DAppSCAN-source/contracts/Trail_of_Bits-Liquity/dev-f0df3efa5a5f05b205752184cfce107c5bd6e06c/packages/contracts/contracts/LUSDToken.sol,LUSDToken.sol,function _requireValidRecipient(address _recipient) internal view {
SWC-104-Unchecked Call Return Value,redeemCollateral,L920,DAppSCAN-source/contracts/Trail_of_Bits-Liquity/dev-f0df3efa5a5f05b205752184cfce107c5bd6e06c/packages/contracts/contracts/TroveManager.sol,TroveManager.sol,"while (currentBorrower != address(0) && getCurrentICR(currentBorrower, price) < MCR) {"
SWC-135-Code With No Effects,getTCR,L1276-L1284,DAppSCAN-source/contracts/Trail_of_Bits-Liquity/dev-f0df3efa5a5f05b205752184cfce107c5bd6e06c/packages/contracts/contracts/TroveManager.sol,TroveManager.sol,function getTCR() public view override returns (uint TCR) {
SWC-135-Code With No Effects,getEntireSystemColl,L1286-L1291,DAppSCAN-source/contracts/Trail_of_Bits-Liquity/dev-f0df3efa5a5f05b205752184cfce107c5bd6e06c/packages/contracts/contracts/TroveManager.sol,TroveManager.sol,function getEntireSystemColl() public view override returns (uint entireSystemColl) {
SWC-101-Integer Overflow and Underflow,_computeRewardsPerUnitStaked,L504,DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol,StabilityPool.sol,lastLUSDLossError_Offset = (LUSDLossPerUnitStaked.mul(_totalLUSDDeposits)).sub(LUSDLossNumerator);
SWC-120-Weak Sources of Randomness from Chain Attributes,N/A,L21 - L955,DAppSCAN-source/contracts/Trail_of_Bits-livepeer/protocol-929182cc684410d55eb9048f47ed1ec3ab70461a/contracts/bonding/BondingManager.sol,BondingManager.sol,"contract BondingManager is ManagerProxyTarget, IBondingManager {"
SWC-107-Reentrancy,liquidatePortion,L41-L51,DAppSCAN-source/contracts/Trail_of_Bits-MapleFinance/liquidations-35c628e5ab45fbffaab7aef43a030a98b712a94a/contracts/Liquidator.sol,Liquidator.sol,"function liquidatePortion(uint256 swapAmount_, bytes calldata data_) external override {"
SWC-114-Transaction Order Dependence,withdraw,L257-L264,DAppSCAN-source/contracts/Trail_of_Bits-Opyn/squeeth-monorepo-427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/strategy/CrabStrategy.sol,CrabStrategy.sol,"function withdraw(uint256 _crabAmount, uint256 _wSqueethAmount) external payable nonReentrant {"
SWC-131-Presence of unused variables,CollateralDustUpdated,L78 - L85,DAppSCAN-source/contracts/Trail_of_Bits-Opyn-Gamma-Protocol/GammaProtocol-9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/core/MarginCalculator.sol,MarginCalculator.sol,/// @notice emits an event when collateral dust is updated
SWC-101-Integer Overflow and Underflow,setCollateralDust,L107,DAppSCAN-source/contracts/Trail_of_Bits-Opyn-Gamma-Protocol/GammaProtocol-9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/core/MarginCalculator.sol,MarginCalculator.sol,dust[_collateral] = _dust;
SWC-101-Integer Overflow and Underflow,_convertAmountOnLivePrice,L895 - L909,DAppSCAN-source/contracts/Trail_of_Bits-Opyn-Gamma-Protocol/GammaProtocol-9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/core/MarginCalculator.sol,MarginCalculator.sol,//  SWC-101-Integer Overflow and Underflow: L895 - L909
SWC-115-Authorization through tx.origin,callFunction,L65,DAppSCAN-source/contracts/Trail_of_Bits-Opyn-Gamma-Protocol/GammaProtocol-9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/external/callees/TradeCallee.sol,TradeCallee.sol,"tx.origin == trader,"
SWC-101-Integer Overflow and Underflow,toScaledUint,L72 - L95,DAppSCAN-source/contracts/Trail_of_Bits-Opyn-Gamma-Protocol/GammaProtocol-9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/libs/FixedPointInt256.sol,FixedPointInt256.sol,function toScaledUint(
SWC-114-Transaction Order Dependence,dispute,L322-L333,DAppSCAN-source/contracts/Trail_of_Bits-origin/origin-4b31657825523962434c6d4e4c61feb0bb1ee518/origin-contracts/contracts/marketplace/v00/Marketplace.sol,Marketplace.sol,"function dispute(uint listingID, uint offerID, bytes32 _ipfsHash) public {"
SWC-104-Unchecked Call Return Value,_queueOrRevert,L158 - L172,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/governance/Governor.sol,Governor.sol,function _queueOrRevert(
SWC-104-Unchecked Call Return Value,execute,L175 - L192,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/governance/Governor.sol,Governor.sol,function execute(uint256 proposalId) public payable {
SWC-104-Unchecked Call Return Value,__queueSetTimelockPendingAdmin,L217 - L232,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/governance/Governor.sol,Governor.sol,function __queueSetTimelockPendingAdmin(
SWC-104-Unchecked Call Return Value,__executeSetTimelockPendingAdmin,L235 - L250,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/governance/Governor.sol,Governor.sol,function __executeSetTimelockPendingAdmin(
SWC-135-Code With No Effects,N/A,L14 - L18,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/governance/InitializableGovernable.sol,InitializableGovernable.sol,"contract InitializableGovernable is Governable, Initializable {"
SWC-101-Integer Overflow and Underflow,unregisterEthUsdOracle,L63 - L65,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/oracle/MixOracle.sol,MixOracle.sol,ethUsdOracles[i] = ethUsdOracles[ethUsdOracles.length - 1];
SWC-105-Unprotected Ether Withdrawal,withdraw,L46 - L66,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/strategies/AaveStrategy.sol,AaveStrategy.sol,function withdraw(
SWC-113-DoS with Failed Call,safeApproveAllTokens,L120 - L125,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/strategies/AaveStrategy.sol,AaveStrategy.sol,for (uint256 i = 0; i < assetCount; i++) {
SWC-104-Unchecked Call Return Value,liquidate,L79,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/strategies/CompoundStrategy.sol,CompoundStrategy.sol,cToken.redeem(cToken.balanceOf(address(this)));
SWC-119-Shadowing State Variables,N/A,L31,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/token/OUSD.sol,OUSD.sol,uint256 private _totalSupply;
SWC-119-Shadowing State Variables,N/A,L40,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/token/OUSD.sol,OUSD.sol,mapping(address => mapping(address => uint256)) private _allowances;
SWC-105-Unprotected Ether Withdrawal,_executeTransfer,L156 - L172,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/token/OUSD.sol,OUSD.sol,function _executeTransfer(
SWC-101-Integer Overflow and Underflow,_executeTransfer,L192,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/token/OUSD.sol,OUSD.sol,// credits with the difference
SWC-104-Unchecked Call Return Value,transferToken,L191 - L196,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/utils/InitializableAbstractStrategy.sol,InitializableAbstractStrategy.sol,"function transferToken(address _asset, uint256 _amount)"
SWC-101-Integer Overflow and Underflow,removeStrategy,L148 - L150,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/vault/VaultAdmin.sol,VaultAdmin.sol,allStrategies[strategyIndex] = allStrategies[allStrategies.length -
SWC-104-Unchecked Call Return Value,transferToken,L237 - L243,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/vault/VaultAdmin.sol,VaultAdmin.sol,"function transferToken(address _asset, uint256 _amount)"
SWC-104-Unchecked Call Return Value,transferToken,L240,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/vault/VaultAdmin.sol,VaultAdmin.sol,{
SWC-104-Unchecked Call Return Value,_harvest,L266 - L298,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/vault/VaultAdmin.sol,VaultAdmin.sol,*      supported stablecoin via Uniswap
SWC-107-Reentrancy,mintMultiple,L88 - L128,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/vault/VaultCore.sol,VaultCore.sol,) external whenNotDepositPaused {
SWC-104-Unchecked Call Return Value,_redeem,L142 - L184,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/vault/VaultCore.sol,VaultCore.sol,function _redeem(uint256 _amount) internal {
SWC-104-Unchecked Call Return Value,_allocate,L210 - L293,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/vault/VaultCore.sol,VaultCore.sol,function _allocate() internal {
SWC-104-Unchecked Call Return Value,rebase,L308 - L319,DAppSCAN-source/contracts/Trail_of_Bits-OriginDollar/origin-dollar-81431fd3b2aa4c518ffc389844f9708c00b516f0/contracts/contracts/vault/VaultCore.sol,VaultCore.sol,function rebase(bool sync) internal whenNotRebasePaused returns (uint256) {
SWC-101-Integer Overflow and Underflow,update,L77 - L82,DAppSCAN-source/contracts/Trail_of_Bits-PerpetualProtocolV2/perp-oracle-contract-ba78a5b87098dcffb7285fc585afff1001a87232/contracts/BandPriceFeed.sol,BandPriceFeed.sol,uint256 elapsedTime = bandData.lastUpdatedBase - lastObservation.timestamp;
SWC-104-Unchecked Call Return Value,getPrice,L48 - L50,DAppSCAN-source/contracts/Trail_of_Bits-PerpetualProtocolV2/perp-oracle-contract-ba78a5b87098dcffb7285fc585afff1001a87232/contracts/ChainlinkPriceFeed.sol,ChainlinkPriceFeed.sol,if (interval == 0 || round == 0 || latestTimestamp <= baseTimestamp) {
SWC-104-Unchecked Call Return Value,_getLatestRoundData,L96 -L100,DAppSCAN-source/contracts/Trail_of_Bits-PerpetualProtocolV2/perp-oracle-contract-ba78a5b87098dcffb7285fc585afff1001a87232/contracts/ChainlinkPriceFeed.sol,ChainlinkPriceFeed.sol,// SWC-104-Unchecked Call Return Value: L96 -L100
SWC-112-Delegatecall to Untrusted Callee,withdraw,L223 - L233,DAppSCAN-source/contracts/Trail_of_Bits-Primitive/rmm-core-5dcf4306fc32fb9a4e3c154deb86f6b9d513c344/contracts/PrimitiveEngine.sol,PrimitiveEngine.sol,function withdraw(
SWC-114-Transaction Order Dependence,allocate,L238 - L270,DAppSCAN-source/contracts/Trail_of_Bits-Primitive/rmm-core-5dcf4306fc32fb9a4e3c154deb86f6b9d513c344/contracts/PrimitiveEngine.sol,PrimitiveEngine.sol,// SWC-114-Transaction Order Dependence: L238 - L270
SWC-114-Transaction Order Dependence,swap,L304 - L403,DAppSCAN-source/contracts/Trail_of_Bits-Primitive/rmm-core-5dcf4306fc32fb9a4e3c154deb86f6b9d513c344/contracts/PrimitiveEngine.sol,PrimitiveEngine.sol,// SWC-114-Transaction Order Dependence: L304 - L403
SWC-104-Unchecked Call Return Value,safeTransfer,L13 - L22,DAppSCAN-source/contracts/Trail_of_Bits-Primitive/rmm-core-5dcf4306fc32fb9a4e3c154deb86f6b9d513c344/contracts/libraries/Transfers.sol,Transfers.sol,function safeTransfer(
SWC-101-Integer Overflow and Underflow,scaleToX64,L41,DAppSCAN-source/contracts/Trail_of_Bits-Primitive/rmm-core-5dcf4306fc32fb9a4e3c154deb86f6b9d513c344/contracts/libraries/Units.sol,Units.sol,uint256 scaleFactor = PRECISION / factor;
SWC-101-Integer Overflow and Underflow,percentage,L59,DAppSCAN-source/contracts/Trail_of_Bits-Primitive/rmm-core-5dcf4306fc32fb9a4e3c154deb86f6b9d513c344/contracts/libraries/Units.sol,Units.sol,// SWC-101-Integer Overflow and Underflow: L59
SWC-115-Authorization through tx.origin,N/A,L45,DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/RocketStorage.sol,RocketStorage.sol,"_getBool(keccak256(abi.encodePacked(""contract.exists"", msg.sender))) || tx.origin == guardian"
SWC-124-Write to Arbitrary Storage Location,setUint,L206 - L210,DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/RocketStorage.sol,RocketStorage.sol,// SWC-124-Write to Arbitrary Storage Location: L206 - L210
SWC-124-Write to Arbitrary Storage Location,setInt,L231 - L235,DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/RocketStorage.sol,RocketStorage.sol,// SWC-124-Write to Arbitrary Storage Location: L231 - L235
SWC-112-Delegatecall to Untrusted Callee,getEffectiveDelegate,L103 - L109,DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/minipool/RocketMinipool.sol,RocketMinipool.sol,fallback(bytes calldata _input) external payable returns (bytes memory) {
SWC-135-Code With No Effects,N/A,L217,DAppSCAN-source/contracts/Trail_of_Bits-RocketPool/rocketpool-a65b203cf99c7a991c2d85a7468a97bfb5dbba31/contracts/contract/minipool/RocketMinipoolManager.sol,RocketMinipoolManager.sol,"setBool(keccak256(abi.encodePacked(""minipool.exists"", contractAddress)), true);"
SWC-101-Integer Overflow and Underflow,fulfillAdvancedOrder,L387 - L399,DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/Consideration.sol,Consideration.sol,function fulfillAdvancedOrder(
SWC-128-DoS With Block Gas Limit,_revertWithReasonIfOneIsReturned,L1255 - L1266,DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/lib/ConsiderationPure.sol,ConsiderationPure.sol,function _revertWithReasonIfOneIsReturned() internal pure {
SWC-101-Integer Overflow and Underflow,executeExchangeOrders,L76,DAppSCAN-source/contracts/Trail_of_Bits-setprotocol/set-protocol-contracts-b4acf144c10b1d9f3ecde4ee2820931df1cb8e4a/contracts/core/modules/lib/ExchangeExecution.sol,ExchangeExecution.sol,"uint256 exchangeBitIndex = CommonMath.safePower(2, header.exchange);"
SWC-114-Transaction Order Dependence,executeExchangeOrders,L76,DAppSCAN-source/contracts/Trail_of_Bits-setprotocol/set-protocol-contracts-b4acf144c10b1d9f3ecde4ee2820931df1cb8e4a/contracts/core/modules/lib/ExchangeExecution.sol,ExchangeExecution.sol,"uint256 exchangeBitIndex = CommonMath.safePower(2, header.exchange);"
SWC-101-Integer Overflow and Underflow,hasDuplicate,L303 - L315,DAppSCAN-source/contracts/Trail_of_Bits-setprotocol/set-protocol-contracts-b4acf144c10b1d9f3ecde4ee2820931df1cb8e4a/contracts/lib/AddressArrayUtils.sol,AddressArrayUtils.sol,function hasDuplicate(address[] memory A) internal pure returns (bool) {
SWC-135-Code With No Effects,N/A,L1 - L248,DAppSCAN-source/contracts/Trail_of_Bits-TokenCard/contracts-b99b7d1670f9ad7b90335e8391fe63fd7e20de9b/contracts/licence.sol,licence.sol,// SWC-135-Code With No Effects: L1 - L248
SWC-135-Code With No Effects,N/A,L1 - L792,DAppSCAN-source/contracts/Trail_of_Bits-TokenCard/contracts-b99b7d1670f9ad7b90335e8391fe63fd7e20de9b/contracts/wallet.sol,wallet.sol,// SWC-135-Code With No Effects: L1 - L792
SWC-101-Integer Overflow and Underflow,convertToEther,L562,DAppSCAN-source/contracts/Trail_of_Bits-TokenCard/contracts-b99b7d1670f9ad7b90335e8391fe63fd7e20de9b/contracts/wallet.sol,wallet.sol,return _amount.mul(rate).div(magnitude);
SWC-101-Integer Overflow and Underflow,convertToStablecoin,L707,DAppSCAN-source/contracts/Trail_of_Bits-TokenCard/contracts-b99b7d1670f9ad7b90335e8391fe63fd7e20de9b/contracts/wallet.sol,wallet.sol,return _amount.mul(stablecoinMagnitude).div(stablecoinRate);
SWC-114-Transaction Order Dependence,initialize,L195 - L213,DAppSCAN-source/contracts/Trail_of_Bits-UniswapV3Core/v3-core-99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/UniswapV3Pool.sol,UniswapV3Pool.sol,function initialize(uint160 sqrtPriceX96) external override {
SWC-105-Unprotected Ether Withdrawal,swap,L503 - L672,DAppSCAN-source/contracts/Trail_of_Bits-UniswapV3Core/v3-core-99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/UniswapV3Pool.sol,UniswapV3Pool.sol,// SWC-105-Unprotected Ether Withdrawal: L503 - L672
SWC-128-DoS With Block Gas Limit,swap,L546 - L621,DAppSCAN-source/contracts/Trail_of_Bits-UniswapV3Core/v3-core-99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/UniswapV3Pool.sol,UniswapV3Pool.sol,// SWC-128-DoS With Block Gas Limit: L546 - L621
SWC-104-Unchecked Call Return Value,safeTransfer,L21,DAppSCAN-source/contracts/Trail_of_Bits-UniswapV3Core/v3-core-99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/libraries/TransferHelper.sol,TransferHelper.sol,"token.call(abi.encodeWithSelector(IERC20Minimal.transfer.selector, to, value));"
SWC-105-Unprotected Ether Withdrawal,withdraw,L294 - L320,DAppSCAN-source/contracts/Trail_of_Bits-YieldProtocol/fyDai-4422fda75931f2bfea49f5041ec90dc026e5c03d/contracts/Controller.sol,Controller.sol,"function withdraw(bytes32 collateral, address from, address to, uint256 amount)"
SWC-114-Transaction Order Dependence,permit,L48 - L77,DAppSCAN-source/contracts/Trail_of_Bits-YieldProtocol/fyDai-4422fda75931f2bfea49f5041ec90dc026e5c03d/contracts/helpers/ERC20Permit.sol,ERC20Permit.sol,"function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public virtual override {"
SWC-114-Transaction Order Dependence,init,L87 - L99,DAppSCAN-source/contracts/Trail_of_Bits-YieldProtocol/fyDai-4422fda75931f2bfea49f5041ec90dc026e5c03d/contracts/pool/Pool.sol,Pool.sol,function init(uint128 daiIn)
SWC-112-Delegatecall to Untrusted Callee,addModule,L145 - L151,DAppSCAN-source/contracts/Trail_of_Bits-YieldV2/vault-v2-819a713416249da92c44eb629ed26a49425a4656/contracts/Ladle.sol,Ladle.sol,"function addModule(address module, bool set)"
SWC-112-Delegatecall to Untrusted Callee,"ality coded in a module, to be used with batch",L187 - L198,DAppSCAN-source/contracts/Trail_of_Bits-YieldV2/vault-v2-819a713416249da92c44eb629ed26a49425a4656/contracts/Ladle.sol,Ladle.sol,// SWC-112-Delegatecall to Untrusted Callee: L187 - L198
