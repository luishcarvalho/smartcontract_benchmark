pragma solidity ^0.5.16;


import "./Owned.sol";
import "./interfaces/ISynthetixDebtShare.sol";
import "./MixinResolver.sol";


import "./SafeDecimalMath.sol";


contract SynthetixDebtShare is Owned, MixinResolver, ISynthetixDebtShare {
    using SafeMath for uint;
    using SafeDecimalMath for uint;

    struct PeriodBalance {
        uint128 amount;
        uint128 periodId;
    }

    bytes32 public constant CONTRACT_NAME = "SynthetixDebtShare";

    bytes32 private constant CONTRACT_ISSUER = "Issuer";

    uint internal constant MAX_PERIOD_ITERATE = 10;






    mapping(address => bool) public authorizedBrokers;







    mapping(address => PeriodBalance[]) public balances;






    mapping(uint => uint) public totalSupplyOnPeriod;





    uint128 public currentPeriodId;

























































































































































































































