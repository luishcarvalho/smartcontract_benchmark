
pragma solidity ^0.7.0;
pragma experimental ABIEncoderV2;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";
import "./interfaces/IERC20Decimals.sol";
import "./balancer-core-v2/lib/math/LogExpMath.sol";
import "./balancer-core-v2/lib/math/FixedPoint.sol";
import "./balancer-core-v2/vault/interfaces/IMinimalSwapInfoPool.sol";
import "./balancer-core-v2/vault/interfaces/IVault.sol";
import "./balancer-core-v2/pools/BalancerPoolToken.sol";

contract ConvergentCurvePool is IMinimalSwapInfoPool, BalancerPoolToken {
    using LogExpMath for uint256;
    using FixedPoint for uint256;


    IERC20 public immutable underlying;
    uint8 public immutable underlyingDecimals;

    IERC20 public immutable bond;
    uint8 public immutable bondDecimals;

    uint256 public immutable expiration;

    uint256 public immutable unitSeconds;


    IVault private immutable _vault;
    bytes32 private immutable _poolId;


    uint128 public feesUnderlying;
    uint128 public feesBond;

    address public immutable governance;

    uint256 public immutable percentFee;

    uint256 public immutable percentFeeGov;






























































































































































































































































































































































































































































































































































































































































































































































